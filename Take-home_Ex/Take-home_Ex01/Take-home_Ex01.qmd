---
title: "Take-home Exercise 1"
date: "Last updated on `r format(Sys.time(), '%d %B, %Y')`"
format:
  html:
    code-fold: true
    code-summary: "code block"
---

# Project Brief

**Exploring Population Statistics of the City of Engagement** {{< fa tree-city >}}\
Design a user-friendly and interactive solution that helps city managers and planners to explore complex population data in an engaging way and reveal hidden patterns. This project aims to reveal the **demographic and financial characteristics** of the City of Engagement, using appropriate static and interactive statistical graphics methods in R.

# Project Objectives

The city aims to use the data to assist with their major community revitalization efforts, including how to allocate a very large city renewal grant they have recently received. **To support this process, the target metric of this study will be *joviality*, and the aim of this project will thus be to identify demographic gaps in joviality and areas for development through exploratory data analysis and visualisation. This would enable urban planners to focus their efforts on specific areas of the community to increase overall joviality of the population.**

# 1: Data Preparation

## 1.1: Installing R packages

`pacman::p_load()` function from the `pacman` package is used in the following code chunk to install and call the libraries of multiple R packages:

```{r}
#| code-fold: false
#| warning: false
pacman::p_load(tidyverse, ggstatsplot, ggridges, plotly, 
               patchwork, scales, paletteer, viridis,
               ggiraph, ggiraphExtra, gganimate, ggmosaic, 
               gifski, ggpubr, ggdist, ggrain, GGally,
               qqplotr, gt, ggpmisc, webr,
               transformr, Hmisc, vcd, knitr, 
               kableExtra, DT, rstatix, urbnthemes)
```

## 1.2: Data Sets

Two datasets are provided for the task: *Participants.csv* and *FinancialJournal.csv*.\
These are uploaded as **demo_data** and **financial_data** respectively.

## 1.2.1: Summary Statistics of *demo_data*

```{r}
#| message: false
demo_data <- read_csv("data/Participants.csv")
```

::: panel-tabset
## **First 5 Rows**

**Displaying first 5 rows using `head()`:**

```{r}
#| code-fold: false
head(demo_data,5) %>%
  kbl() %>%
  kable_material()
```

## **Dataset Structure**

**Checking the structure of demo_data using `str()`:**

```{r}
#| code-fold: false
str(demo_data)
```

There are a total of 1011 rows and 7 variables. The output reveals that variables **participantId** and **householdSize** have been read as numeric, continuous data types, but should be analysed as nominal data instead.

## **Data Health**

**Checking for duplicates:**

```{r}
#| code-fold: false
demo_data[duplicated(demo_data),]
```

From the output, there are no duplicated rows found in *demo_data*.

**Checking for missing values:**

```{r}
#| code-fold: false
sum(is.na(demo_data))
```

From the output, there are zero missing values across all columns in **demo_data**.
:::

   

{{< fa gear >}} Changing Data Types:

-   **participantId** is classified as `<dbl>`, numerical continuous data, instead of nominal. This is cast as `<chr>` class using `as.character()`
-   **educationLevel** is classified as `<chr>` categorical data, and consists of four levels, with inherent hierarchy. This variable is cast as factor type on an ordinal scale using the `ordered()` function
-   **householdSize** and **interestGroup** are classified as `<dbl>` and `<chr>` respectively, but are categorical in nature with different levels. These variables are cast as factors using `as.factor()`

```{r}
demo_data_new <- demo_data %>%
  # Changing participantId to character 
  mutate(participantId = as.character(demo_data$participantId),

  # Updating educationLevel with ordinal scale
  educationLevel = ordered(demo_data$educationLevel, levels = c("Graduate", "Bachelors", "HighSchoolOrCollege", "Low")),

  # Casting householdSize and interestGroup as factors
  householdSize = as.factor(demo_data$householdSize),
  interestGroup = as.factor(demo_data$interestGroup)
  )
```

\
\
**Visual Summary of demo_data_new:**

```{r}
#| fig-height: 4
#| message: false
#| warning: false

# Setting default theme for all plots
set_urbn_defaults("print", base_family = "Lato")

# Assigning each plot to a variable name to patch together
demo_p1 <- ggplot(demo_data_new, aes(x = householdSize)) +
  geom_bar() +
  labs(
    title = "Household Size",
    x = NULL,
    y = NULL
  ) +
  # Set limit to ensure that geom_text annotation is not cut off
  ylim(0,420
  ) + 
  geom_text(
    stat = "count",
    aes(label = after_stat(count)),
    vjust = -1) #< Set count annotations above bar

demo_p2 <- ggplot(demo_data_new, aes(x = haveKids)) +
  geom_bar() +
  labs(
    title = "Households with Children",
    x = NULL,
    y = NULL
  ) +
  ylim(0,800
  ) +
  geom_text(
    stat = "count",
    aes(label = after_stat(count)),
    vjust = -1)

demo_p3 <- ggplot(demo_data_new, aes(x = age)) +
  geom_dotplot(
    binwidth = 1,
    stackratio = 1.2,
    stackdir = "up",
    fill = "#1696d2", #< Fill colour same as bar charts
    color = NA,
    dotsize = 0.6
  ) +
  labs(
    title = "Age",
    x = NULL,
    y = NULL)

demo_p4 <- ggplot(demo_data_new, aes(x = educationLevel)) +
  geom_bar() +
  labs(
    title = "Highest Education",
    x = NULL,
    y = NULL
  ) +
  ylim(0,600
  ) +
  geom_text(
    stat = "count",
    aes(label = after_stat(count)),
    vjust = -1)

demo_p5 <- ggplot(demo_data_new, aes(x = interestGroup)) +
  geom_bar() +
  labs(
    title = "Interest Group",
    x = NULL,
    y = NULL
  ) +
  ylim(0,150
  ) +
  geom_text(
    stat = "count",
    aes(label = after_stat(count)),
    vjust = -1)

demo_jov <- ggplot(
    demo_data_new, 
    aes(x = joviality)
  ) +
  geom_dotplot(
    stackratio = 1.2,
    stackdir = "up",
    fill = "#1696d2", #< Fill colour same as bar charts
    color = NA,
    dotsize = .3
  ) +
  labs(
    title = "Joviality",
    x = NULL,
    y = NULL
  ) +
  theme(
    axis.text.y = element_blank(), 
    panel.grid.major = element_blank(), 
    plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6")
  )

demo_jov
```

```{r}
#| fig-width: 10
#| fig-height: 8
# Patch all other summary plots together
house_patch <- demo_p1 + demo_p2 #< patch together first so that age plot takes up larger width
demo_patch <- ((demo_p3 + house_patch) / (demo_p5 + demo_p4)
              ) +
              plot_layout(heights = c(3,2.5)
              ) + 
              plot_annotation(
                title = "Summary Statistics of Demographic Data")

demo_patch & 
  theme(
  # Remove y axis since annotations already show count
  axis.text.y = element_blank(), 
  # Remove lines in panel background for cleaner design
  panel.grid.major = element_blank(), 
  # Same colour as webpage
  plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6")
  ) 
```

::: {.focusbox .focus data-latex="focus"}
**Initial Insights from Summary Statistics**

-   There seems to be a fairly even distribution of participants across **householdSize** and **interestGroup**. However, there is are uneven disributions across **joviality score** and **age**, with multimodal peaks in the dotplots.
-   There are twice as many households that have children than those without.
-   Approximately half of the participants have attained the highest education at high school or college level.

The distributions and correlations of these variables will be investigated further in subsequent sections, after appropriate data wrangling techniques have been applied.
:::

## 1.2.2: Summary Statistics of *financial_data*

```{r}
#| message: false
financial_data <- read_csv("data/FinancialJournal.csv")
```

::: panel-tabset
## **At a Glimpse**

```{r}
#| code-fold: false
glimpse(financial_data)
```

The dataset captures specific financial transactions by participants, with a single transaction recorded in each row. Participants may have multiple transactions over time.

## **Data Health**

**Checking for duplicates:**

```{r}
#| code-fold: false
financial_data[duplicated(financial_data),]
```

From the output, there are 1113 duplicated rows found in *financial_data*.

**Checking for missing values:**

```{r}
#| code-fold: false
sum(is.na(financial_data))
```

From the output, there are zero missing values across all columns in **financial_data**.
:::

\
\
{{< fa gear >}} **Data Quality Issues**:

-   `duplicated()` revealed that there were 1113 **duplicated entries** in the financial data. These are removed using `dplyr::unique()` function
-   **participantId** is classified as `<dbl>`, numerical continuous data, instead of nominal. This is cast as `<chr>` class using `as.character()`
-   **category** is classified as `<chr>`, but is categorical in nature with six different levels. This is cast as factor type using `as.factor()`
-   **timestamp** contains both Date and Time, which is not suitable for analysis. Year-Month is extracted and saved into a separate variable, **transDate**, and cast as factor (categorical).
-   **amount** is reflected as a numeric value with 3 decimal places. This is rounded to 2 d.p. to reflect standard currency structure while maintaing accuracy.\
-   Data format is unsuitable for analysis: pivot table with individual columns per **category** would give a better monthly summary of financial transactions by participant.\

**Altering table format of financial_data:**

::: panel-tabset
## **Step 1: Changing data types:**

```{r}
#| code-fold: false
# Ensuring that duplicates are removed
financial_data <- unique(financial_data)


financial_data_new <- financial_data %>%
  # Changing participantId to character 
  mutate(participantId = as.character(financial_data$participantId),

  # Casting category as factor
  category = as.factor(financial_data$category),

  # Extracting Month-Year from timestamp and casting as factor
  transDate = as.factor(format(parse_date_time(timestamp, "YmdHMS"), "%Y-%m")),
  
  # Rounding amount to 2 decimal places
  amount = as.integer(round(amount, digits = 2))) %>%
  
  # remove timestamp column
  select(-timestamp) %>%
  
  # Sort by Participant ID
  arrange(participantId)
```

## **Step 2: Create pivot table**

```{r}
#| code-fold: false
#| message: false
financial_pivot <- financial_data_new %>%
                    # Define row groups 
                    group_by(participantId, transDate) %>%
  
                    # Sum total amount per category for each month
                    summarise(
                      Education = sum(amount[category == "Education"]),
                      Food = sum(amount[category == "Food"]),
                      Recreation = sum(amount[category == "Recreation"]),
                      Shelter = sum(amount[category == "Shelter"]),
                      RentAdj = sum(amount[category == "RentAdjustment"]),
                      Wage = sum(amount[category == "Wage"])) %>%
                    ungroup()
```
:::

```{r}
head(financial_pivot,5) %>%
  kbl() %>%
  kable_styling(
    full_width = F, 
    bootstrap_options = c("condensed", "responsive"))
```

   

**Visualising Expenditure Trends over Data Time Range:**

::: {.pencilbox .pencil data-latex="pencil"}
**Design Considerations**

-   To visualise the different expenditure trends over time, a line plot was chosen\
-   Separate lines were used for each expenditure category in order to show trend and amount differences\
-   `geom_point()` dots were added to the trend lines to identify points in time, to visualise month-on-month changes
:::

{{< fa gear >}} Average expenditure per category is calculated from financial_pivot:

-   Use `group_by()` to condense transactions by year-month
-   `pivot_longer()` to transpose categories back into a single column with factor levels, such that each expenditure category can be represented by a different line.

```{r}
#| fig-width: 8
# Calculating mean amount per category
monthly_mean <- financial_pivot %>%
    group_by(transDate) %>%
    summarise(
      num_people = n_distinct(participantId),
      Education = abs(round((sum(Education)/num_people),2)),
      Food = abs(round((sum(Food)/num_people),2)),
      Recreation = abs(round((sum(Recreation)/num_people),2)),
      Shelter = abs(round((sum(Shelter)/num_people),2)),
      RentAdj = round((sum(RentAdj)/num_people),2),
      Wage = round((sum(Wage)/num_people),2)) %>% 
  # change transDate to ymd format to arrange by date in lineplot
    mutate(
      transDate = ymd(paste(transDate, "01", sep = "-"))) %>% 
    ungroup()

monthly_mean %>%
  kbl() %>%
  kable_styling(full_width = F, bootstrap_options = c("condensed", "responsive"))
```

From the table output, there were transactions from all 1011 participants in Mar-2022, but only 880 from Apr-2022 onwards. This suggests that the transactions from those 31 participants could have been skewing the data. financial data from 2022-03 will thus be excluded from datasets for further analysis using `filter()` function.

```{r}
# Removing records from transDate 
financial_data_new <- financial_data_new %>%
                        filter(transDate != "2022-03")

financial_pivot <- financial_pivot %>%
                    filter(transDate != "2022-03")

monthly_mean <- monthly_mean %>%
                  filter(transDate != "2022-03-01")
```

**Visual Summary of financial data: monthly_mean:**

```{r}
#| fig-width: 8
#| fig-height: 6

# Set font options
t <- list(
  family = "Lato, sans-serif",
  size = 16,
  color = "#000000")

t2 <- list(
  family = "Lato, sans-serif",
  size = 12,
  color = "#000000")

t3 <- list(
  family = "Lato, sans-serif",
  size = 9,
  color = "#000000")

# Build plot

frfig <- plot_ly(
    monthly_mean, 
    x = ~transDate
  ) %>%
  # Add Recreation TrendLine
  add_trace(
    y = ~Recreation, 
    type = 'scatter', 
    mode = 'lines+markers', 
    name = 'Recreation',
    # Specify Line and dot colors to match
    line = list(color = 'rgb(0,0,0)', width = 2),
    marker = list(color = 'rgb(0,0,0)')
  ) %>%
  # Add Food TrendLine
  add_trace(
    y = ~Food, 
    type = 'scatter', 
    mode = 'lines+markers', 
    name = 'Food',
    line = list(color = 'rgb(253,191,17)', width = 2)
  )%>%
  layout(
    title = "Decreasing Trend in Monthly Expenditure on Recreation", 
    # Remove x-axis title and ensure all months are shown in axis
    xaxis = list(title = '',
                 tickfont = t3,
                 nticks = 20),
    # Remove amount 
    yaxis = list(title = 'Amount Spent ($)',
                 font = t2,
                 showticklabels=FALSE), 
    legend = list(title = list(text = "<b> Category </b>",
                               font = t)),
              list(text = list(font = t2)),
    font = t, 
    # Add top margin to prevent title from being truncated
    margin = list(t = 80),
    # Specify plot and background colors
    plot_bgcolor = "#F8F3E6",
    paper_bgcolor = "#F8F3E6"
  ) 

frfig
```

```{r}
#| fig-width: 8
#| fig-height: 4

# Specify annotation
note1 <- list(
  xref = 'paper',
  yref = 'y',
  x = 0.25,
  y = 300,
  xanchor = 'left',
  yanchor = 'middle',
  text = "Large gap in monthly expenditure on both categories",
  font = list(size = 13,
              color = 'rgb(50,50,50)'),
  showarrow = FALSE)

# Plot Rent and Education Expenditures
refig <- plot_ly(
    monthly_mean, 
    x = ~transDate
  ) %>%
  # Add Rent TrendLine
  add_trace(
    y = ~Shelter, 
    type = 'scatter', 
    mode = 'lines+markers', 
    name = 'Recreation',
    # Specify Line and dot colors to match
    line = list(color = 'rgb(226,85,82)', width = 2),
    marker = list(color = 'rgb(226,85,82)')
  ) %>%
  add_trace(
    y = ~Education, 
    type = 'scatter', 
    mode = 'lines+markers', 
    name = 'Food',
    # Specify Line and dot colors to match
    line = list(color = '	rgb(22,150,210)', width = 2),
    marker = list(color = '	rgb(22,150,210)')
  )%>%
  layout(
    title = "Little Variation in Monthly Expenditure on Education and Shelter", 
    xaxis = list(title = '',
                 tickfont = t3,
                 nticks = 20),
    yaxis = list(title = 'Amount Spent ($)',
                 font = t2,
                 showticklabels=FALSE), 
    legend = list(title = list(text = "<b> Category </b>",
                               font = t)),
              list(text = list(font = t2)),
    font = t, 
    # Add top margin to prevent title from being truncated
    margin = list(t = 80),
    # Add annotation to plot
    annotations = note1,
    plot_bgcolor = "#F8F3E6",
    paper_bgcolor = "#F8F3E6"
  ) 

refig
```

::: {.focusbox .focus data-latex="focus"}
**Initial Insights from Line Chart and Table**

-   Expenditure on education is the lowest, and has remained constant \> probably refers to school fees, which is normally a fixed monthly amount
-   Expenditure on recreation and food shows monthly variation, and have decreased from Apr 2022 to Feb 2023
-   Expenditure on Shelter is significantly higher that other categories, and also remains constant \> probably refers to rent
:::

# 2: Data Wrangling

The flowchart below gives an overview of key variables used and derived for this study from both *demo_data* and *financial_data*:

```{mermaid}
%%| fig-width: 8
flowchart TD
A(Key Variables) --> B(Demographic)
A --> C(Financial)
B --- D[Age Group]
B --- E[Household Size]
B --- F[Interest Group]
B --- G[Education]
C --- H[Income Group]
C --- I[Expenses]
B & C --- K[Income Per Capita]
```

## 2.1: Computing Aggregate Transaction Variables based on *financial_data*

::: {.pencilbox .pencil data-latex="pencil"}
**Visual Considerations**

-   Raincloud plots are used to capture the density and range of values by expense, with dotplots beneath the half-density plots revealing patterns in consistency\
-   Separate plots were coded for -ve and +ve transactions, with Education, Food & Recreation and Shelter separated as well. This is due to the wide scale of y-axis values, which made the narrower density plots too condensed for the distribution to be viewed in full.\
-   `patchwork` package was used to group the plots together in a single figure, using `plot_layout(heights)` to configure height ratio of the overall patched plots
:::

```{r}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 8

# Filtering Food and Recreation from data
efr_range <- financial_data_new %>%
    filter(
      category %in% c("Education", "Food", "Recreation")) %>%
  # Getting Average amount per participant
    group_by(
      participantId, category) %>%
    summarise(
      num = n(),
      avgamount = round((sum(amount)/num),2)) %>%
  ungroup()

# Food and Recreation Plot
efr <- ggplot(efr_range, 
       aes(1, 
           y = avgamount, 
           fill = category,
          color = category)
  ) +
  # Raincloud Plot
  geom_rain(
    alpha = .7,
    # Adding outline to boxplot
    boxplot.args = list(
              color = "grey20", outlier.shape = NA),
    violin.args = list(alpha = .7)
  ) +
  # Specifying colors, to match previous graph
  scale_fill_manual(
    values = c("#1696d2","#fdbf11","grey10")
  ) +
  scale_color_manual(
    values = c("#1696d2","#fdbf11","grey10")
  ) +
  scale_y_continuous(
    breaks = scales::pretty_breaks(n = 5),
    labels = scales::dollar
  ) +
  labs(
    title = "I. Dot Patterns Reveal Consistent Amounts Spent on Education,\nDensity Shapes Reveal Differences in Expenditure Range"
  ) +
  theme(
    axis.title.y = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6")
  ) + 
  coord_flip() 

# Filtering Education amounts and computing average
sh_range <- financial_data_new %>%
    filter(
      category %in% c("Shelter")) %>%
    group_by(
      participantId, category) %>%
    summarise(
      num = n(),
      avgamount = round((sum(amount)/num),2)) %>%
  ungroup()

# Education plot
sh <- ggplot(sh_range, 
       aes(1, 
           y = avgamount, 
           fill = category,
           color = category)
  ) +
  geom_rain(
    alpha = .7,
    boxplot.args = list(
              color = "grey20", outlier.shape = NA),
    violin.args = list(alpha = .7)
  ) +
  scale_y_continuous(
    breaks = scales::pretty_breaks(n = 5),
    labels = scales::dollar
  ) +
  scale_fill_manual(
    values = "salmon"
  ) +
  scale_color_manual(
    values = "salmon"
  ) +
  labs(
    title = "II. Widest Range in Expenditure on Rent",
  ) + 
  theme(
    axis.title.y = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6")
  ) + 
  coord_flip() 

# Filtering out +ve transactions
inc_range <- financial_data_new %>%
                filter(category %in% c("Wage")) %>%
      group_by(
      participantId, category) %>%
    summarise(
      num = n(),
      avgamount = round((sum(amount)/num),2)) %>%
  ungroup()

inc <- ggplot(inc_range, 
       aes(1, 
           y = avgamount, 
           fill = category,
          color = category)
  ) +
  geom_rain(
    adjust = 1/6,
    alpha = .7,
    boxplot.args = list(
              color = "grey20", outlier.shape = NA),
    violin.args = list(alpha = .7)
  ) +
  # Specifying colors
  scale_fill_manual(
    values = c("#98cf90","salmon")
  ) +
  scale_color_manual(
    values = c("#98cf90","salmon")
  ) +
  scale_y_continuous(
    breaks = scales::pretty_breaks(n = 5),
    labels = scales::dollar
  ) +
  labs(
    title = "III. Right-skewed Distribution of Average Income"
  ) +
  theme(
    axis.title.y = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6")
  ) + 
  coord_flip() 

# Patchwork plots
bottompatch <- sh / inc
moneypatch <- (efr / bottompatch
    ) +
    plot_layout(
      heights = c(3,4)
    ) + 
    plot_annotation(
      title = "Variations in Distributions of Average Expenditure and Income:"
    )

moneypatch & theme(plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))

```

::: {.focusbox .focus data-latex="focus"}
**Insights from Raincloud Plots**

* Transactions are either outflows (-ve value) or inflows (+ve value)
* **Plot I:**
    + Dotplot forms lines in intervals below half-density plot for **Education**, which show fixed rates of expenditure
    + Flat, wider density of **Recreation** compared to narrow tall peaks in density of **Food** show that range of values spent on Food is much smaller than on Recreation. 
* **Plots II and III:**
    + **Wage** and **Shelter** have the widest range of average values for income and expenditure transactions respectively
    + Multiple peaks in density of **Shelter** suggests presence of 'clusters' of rental ranges 
    + Presence of long tail in distribution of **Wage** suggests a large wage gap across participants
* **RentAdjustment** was only recorded for a single participantId no.497, and was excluded from plots
:::

\
\
New aggregate variables are computed based on this for further analysis:

-   **totInflow & totOutflow**: Sum of cash inflow and outflow per participant
-   **monthly_in**: Average total cash inflow per month per participant (Income)
-   **monthly_out**: Average total cash outflow per month per participant (Expenditure)
-   **monthlyWage**: Average monthly income, per participant
-   **expenseRatio**: Ratio of outflow (expense) to inflow (income) per participant
-   **Education, Food, Recreation, Shelter**: Total expenditure by category

```{r}
# Create new dataframe with transformed variables
financial_agg <- financial_data_new %>%
                  group_by(participantId) %>% 
                  summarise(numTrans = n_distinct(transDate), #< Count number of distinct months 
                            netAmount = sum(amount), #< Sum net total amount per participantId
                            monthlyWage = (sum(amount[category == "Wage"]))/numTrans, #< Ave monthly income per participantId
                            
                            totRentAdj = sum(amount[category == "RentAdjustment"]),
                            
                            totInflow = sum(amount[category == "Wage"]) + 
                                        sum(amount[category == "RentAdjustment"]), #< Compute inflow value
                            totOutflow = sum(abs(amount[category == "Education"])) + 
                                         sum(abs(amount[category == "Food"])) +
                                         sum(abs(amount[category == "Recreation"])) +
                                         sum(abs(amount[category== "Shelter"])), #< Compute outflow value
                            expenseRatio = round((totOutflow/totInflow), 2), #< Compute outflow/inflow ratio
                        #< Monthly Income and Expenditure
                            monthly_in = round((totInflow/numTrans), 2), 
                            monthly_out = round((totOutflow/numTrans), 2), 
                        #< % of each category contribution to outflow    
                            Education = sum(abs(amount[category == "Education"])), 
                            Food = sum(abs(amount[category == "Food"])),
                            Recreation = sum(abs(amount[category == "Recreation"])),
                            Shelter = sum(abs(amount[category == "Shelter"]))
                            ) %>%
                  replace(is.na(.),0) %>%
                  select(-numTrans) %>% #< Drop column numTrans
                  arrange(as.numeric(participantId)) %>%
                  ungroup()
                          
```

**financial_agg:**

```{r}
head(financial_agg, 5) %>%
  kbl() %>%
  kable_styling(full_width = F, bootstrap_options = c("condensed", "responsive"))
```

   

## 2.2: Banding of Age and Wage into Groups

**Age**

The range of participants' ages is rather wide, spanning from 18-60 years old. There are also multiple peaks in the distribution:

```{r}
# Computing min and max age to annotate plot
min_age <- min(demo_data_new$age)
max_age <- max(demo_data_new$age)

demo_age <-demo_p3 + 
            annotate(geom = "text", x = min_age, y = 0.83,
            label = paste0("Youngest:\n", min_age)) + #< add text annotation to show age range
            annotate(geom = "text", x = max_age, y = 0.83,
            label = paste0("Oldest:\n", max_age)) +
            theme(axis.text.y = element_blank(), #< remove unnecessary elements from plot
            panel.grid.major = element_blank(),
            plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
demo_age
```

::: {.solvebox .solve data-latex="solve"}
These may be grouped together by percentile, and analysed as age groups instead to give a better overview of different demographics. Each band represents sequential 20th percentiles:

-   **Lowest 20th Percentile: 18-26**
-   **20-40th Percentile: 27-35**
-   **40-60th Percentile: 36-44**
-   **60-80th Percentile: 45-52**
-   **Top 20th Percentile: 53-60**
:::

```{r}
# Function to bin by 20th Percentile
cutpct <- function(x) {
  cut(x, breaks=c(quantile(demo_data_new$age, 
                           probs = seq(0, 1, by = 0.20))), 
      labels=c("18-26","27-35","36-44","45-52","53-60"), 
      include.lowest=TRUE)
}

# Applying to new column, grouping Age into Age Groups
demo_data_new$ageGroup <- sapply(demo_data_new$age, cutpct)


# Barchart of ageGroup
demo_agegrp<- ggplot(
  demo_data_new, 
  aes(x = ageGroup)
  ) +
  geom_bar() +
  labs(
    # Linebreak added to title so it does not get truncated
    title = "Participants are evenly\ndistributed across Age Groups", 
    x = "Age Group",
    y = NULL
  ) +
  geom_text(
    stat = "count",
    aes(label = after_stat(count)),
    vjust = -1
  ) +
  # Same y-axis limits for both age and wage plots to standardise
  ylim(0,250) + 
  theme(
    text = element_text(size = 12),
    plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6")
  )

```

**Wage**

From the boxplot diagram in section 2.2, there is a large variation in wage range, and a segregation between lower and higher wage bands.

```{r}
describe(financial_agg$monthlyWage)
```

::: {.solvebox .solve data-latex="solve"}
Based on the Mean and distribution of values across percentiles as shown above, participants are banded according to annual income:

-   **Bottom 20th Percentile: Low**
-   **20-40th Percentile: Mid-low**
-   **40-60th Percentile: Mid**
-   **60-80th Percentile: Mid-high**
-   **Top 20th Percentile: High**
:::

```{r}
# Function to bin by 20th Percentile
cutwpct <- function(x) {
  cut(x, breaks=c(quantile(financial_agg$monthlyWage, 
                           probs = seq(0, 1, by = 0.20))), 
      labels=c("Low","Mid-low","Mid","Mid-high","High"), 
      include.lowest=TRUE)
}

# Applying to new column, grouping Age into Age Groups
financial_agg$incomeGroup <- sapply(financial_agg$monthlyWage, cutwpct)

# Barchart of incomeGroup
fin_incgrp<- ggplot(financial_agg, aes(x = incomeGroup)) +
                geom_bar() +
                labs(title = "Number of Citizens by Income Group", #< Linebreak added to title so it does not get truncated
                    x = "Income Group",
                    y = NULL) +
                geom_text(stat = "count",
                          aes(label = after_stat(count)),
                          vjust = -1) +
                ylim(0,250) + #< Upper bound of y-axis limit is set so that geom_text annotations are not cut off
                theme(text = element_text(size = 12),
                      axis.text.y = element_blank(), #< Shared y-axis when used in patchwork with age chart
                      plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))

```

**Age and Income Groups**

```{r}
#| fig-width: 8
(demo_agegrp + fin_incgrp) & theme(plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
```

## 2.3: Combining Datasets and Computing Monthly Income per Capita

The dataframes are first combined into **df_combined**:

```{r}
#Inner join as only 880 participants are listed in financial data

df_combined <- merge(demo_data_new, financial_agg, by = "participantId") %>%
              select(unique(colnames(.))) %>%
              arrange(as.numeric(participantId)) 

DT::datatable(df_combined,
              class ="compact")
```

   

The formula used to determine Monthly Income per Capita for this study is as follows:  

$$Monthly\ Income\ per\ Capita = \frac{Monthly\ Wage}{Household\ Size}$$

```{r}
#| fig-width: 8
#| fig-height: 5
#| warning: false

# Compute income per capita and save as new variable
df_combined <- df_combined %>%
              mutate(incomePerCapita = round((monthlyWage/as.integer(householdSize)), 0))

# Calculate min, max, 95th percentile and median values for annotations
min_incomePC <- round(min(df_combined$incomePerCapita),0)
max_incomePC <- round(max(df_combined$incomePerCapita),0)
q_incomePC <- round(quantile(df_combined$incomePerCapita, probs = .95),0)
median_incomePC <- round(median(df_combined$incomePerCapita),0)

# Histogram of income per capita
h <- 
  ggplot(
    df_combined, 
    aes(x = incomePerCapita)
  ) +
  geom_histogram(
    bins = 25,
    color = "#F8F3E6"
  ) +
  scale_x_continuous(
    breaks = scales::pretty_breaks(n = 5),
    # Set same limits for both plots to ensure justification
    limits = c(500,12000), 
    # Label with $ unit
    labels = label_dollar()
  ) + 
  geom_vline(
    aes(xintercept = median_incomePC),
    colour="grey20", 
    linewidth = 0.7, 
    linetype = "dashed"
  ) +
  annotate(
    geom = "text", 
    x = 3900, 
    y = 290,
    label = paste0("Median Income per Capita: $", median_incomePC)
  ) +
  labs(x = NULL, y = NULL
  ) +
  theme_minimal() +
  theme(
    axis.text.y = element_blank(),
    panel.grid.major = element_blank(),
    plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6")
  )

#Boxplot of Income per capita
box <- 
  ggplot(
    df_combined, 
    aes(y = incomePerCapita)
  ) + 
  geom_boxplot(
    outlier.colour="salmon", 
    outlier.shape=16,
    outlier.size=1, 
    notch=FALSE
  ) + 
  coord_flip() + 
    #Annotate with amounts to show range of income on boxplot diagram
  annotate(
    geom = "text", 
    x = 0.38, 
    y = min_incomePC,
    label = paste0("$", min_incomePC),
    color = "grey20"
  ) + 
   annotate(
    geom = "text", 
    x = 0.38, 
    y = q_incomePC,
    label = paste0("$", q_incomePC),
    color = "grey20"
  ) +
  annotate(
    geom = "text", 
    x = 0.38, 
    y = max_incomePC,
    label = paste0("$", max_incomePC),
    color = "salmon"
  ) + 
  labs(
    title = "Right-skewed distribution of Income per Capita",
     y = "", 
    x = ""
  ) + 
   scale_y_continuous(
    limits = c(500,12000), 
    labels = label_dollar()
  ) +
  stat_boxplot(
    geom="errorbar", 
    width=0.5
  ) + 
  theme_minimal() +
  theme(
    axis.text = element_blank(), 
    axis.ticks = element_blank(),
    panel.grid.major = element_blank(),
     plot.background = element_rect(
       fill="#F8F3E6",colour="#F8F3E6")
  )

hbox <- (box / h) + 
        plot_layout(heights = c(1, 3.5)) #< Scale layout to keep boxplot height shorter

hbox & theme(plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))


```

::: {.focusbox .focus data-latex="focus"}
**Insights from Visualisation**

-   There is a right-skewed distribution of Income per Capita, with median value (\$1947) far from the 95th Percentile tail (\$5487)\
-   Trail of red points in the boxplot show the presence of outliers and Highest Income per Capita is 4 times that of median: this suggests a large income disparity among City residents\
-   **City Revitalisation Efforts could thus aim to increase affordability of spaces or services to cater to the larger concentration of citizens within or below median income range.**
:::

# 3: Exploratory Data Analysis

## 3.1: **Joviality**

Each participant has a **joviality** score on a scale of 0 to 1. For the purpose of this study, we assume that the closer the score is to 1 (maximum), the more jovial the participant was recorded at the start of the survey. Joviality will thus be analysed across different demographic and financial variables, to find significant patterns and trends. Key portions of the EDA are visualised to aid city revitalisation efforts in determining ways to increase overall joviality of the population.

### 3.1.1: Distribution

The distribution of joviality scores is first visualised to determine the variation of values across the sample population:

```{r}
#| fig-width: 8
# Calculate Median and Mean values for annotations, standard deviation for plotting normal curve
med_jov <- median(df_combined$joviality)
mean_jov <- mean(df_combined$joviality)
std_jov <- sd(df_combined$joviality)

ggplot(
    df_combined, 
    aes(x = joviality)
  ) +
  geom_density(
    color = "#1696d2",
  # Adjust bandwidth to reduce smoothness of density plot to reveal variations
    adjust = .2,
    alpha = .6
  ) +
  # Plot normal curve
  stat_function(
    fun = dnorm,
    args = list(mean = mean_jov,
                sd = std_jov),
    col = "grey30",
    size = .6
  ) +
  # Add vertical line to show mean across plot
  geom_vline(
    aes(xintercept = mean_jov),
    colour="#4d5887", 
    linewidth = .6, 
    linetype = "dashed"
  ) +
  # Add annotations to show mean value positioned next to geom_vline
  annotate(
    geom = "text", 
    x = mean_jov + 0.12, 
    y = 1.5,
    label = paste0("Mean Joviality: ", round((mean_jov),2)),
    color = "#4d5887"
  ) +
  # Add vertical line to show median across plot
  geom_vline(
    aes(xintercept = med_jov),
    colour = "#00AFBB", 
    linewidth = .6, 
    linetype = "dashed"
  ) +
  # Add annotations to show median value positioned next to geom_vline
  annotate(
    geom = "text", 
    x = med_jov - 0.12, 
    y = 1.5,
    label = paste0("Median Joviality: ", round((med_jov),2)),
    color = "#00AFBB"
  ) +
  labs(
    title = "Uneven Distribution of Joviality Score across Participants",
    subtitle = "Median joviality score is close to Mean score, but distribution density reveals multiple peaks and troughs",
    x = "Joviality Score"
  ) +
  theme(
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    panel.grid.major = element_blank(),
    plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6")
  )
  
```

### 3.1.2: **Are there differences in Joviality Across Income and Age Groups?**

This study first proposes to find out if specific groups within the population have reported lower or higher joviality scores, and if this difference between factor levels in the sample is significant enough to represent the overall city population.

```{mermaid}
flowchart LR
A((Joviality)) -->|differences?| B[Income Groups]
A -->|differences?| C[Age Groups]
B -.- C
```

 

A normality assumption test is first conducted across factor levels for joviality score across income and age groups. At a confidence level of 95%, we test the following hypothesis: 

$$H_0: Joviality\ is\ normally\ distributed\ across\ groups$$ $$H_1: Joviality\ is\ not\ normally\ distributed\ across\ groups$$  

**Income Groups**

::: panel-tabset
## **Distribution**

```{r}
#| fig-width: 8
ggplot(
    df_combined, 
    aes(x = joviality, 
        y = incomeGroup,
        fill = incomeGroup,
        color = incomeGroup)
  ) +
  geom_density_ridges(
    # Adjust bandwidth to reveal variations 
    bandwidth = .05, 
    alpha = .6
  ) +
  labs(
    title = "Distribution of Joviality Score Across Income Groups"
  ) +
  annotate(
    geom = "text", 
    x = 0.2, y = 5.9,
    label = "High income groups\nrecorded peaks in lower joviality"
  ) +
  annotate(
    geom = "text", 
    x = 0.8, y = 1.5,
    label = "Low income groups\nrecorded peaks in higher joviality"
  ) +
  theme(
    legend.position = "none",
    axis.title.y = element_blank(),
    panel.grid.major = element_blank(),
    plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6")
  )
```

## **Normality Test**

```{r}
#| fig-width: 8
#| fig-height: 5
ggplot(
    df_combined, 
    mapping = aes(sample = joviality, 
                  fill = incomeGroup)
  )+
  stat_qq_band(alpha=0.15) +
  stat_qq_line(alpha=0.15) +
  stat_qq_point(size=0.5) + 
  facet_wrap(
    ~ incomeGroup, 
    nrow = 1 #<nrow used to fit all plots into a line
  ) + 
  labs(
    title = "Deviation from Normality across Income Groups",
    subtitle = "Q-Q plots visually indicate that points diverge from diagonal",
    x = "", 
    y = ""
  ) +
  # theme selected as the border and colored title bar makes it easier to differentiate
  theme_bw() + 
  remove_ticks() +
  theme(
    # legend removed as it was unnecessary
    legend.position = "none", 
    axis.text.y = element_blank(),
    axis.text.x = element_blank(),
    panel.grid.minor = element_blank(),
    plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6")
  )
```

```{r}
df_combined %>%
      group_by(incomeGroup) %>%
      shapiro_test(joviality) %>%
      ungroup() %>%
      kbl() %>%
      kable_styling(full_width = F, bootstrap_options = "responsive")
```

Since the p-value across mid-low and high income groups is \< significance level 0.05, we reject the null hypothesis, concluding that **joviality does not follow a normal distribution across all income groups**. To test if there is a significant difference between groups, a non-parametric test will be used in subsequent analysis, with median value as measure of central tendency.

## **ANOVA**

A non-parametric Kruskal-Wallis one-way ANOVA test is conducted to determine if there is a significant difference in joviality score between income groups. At a significance level of 0.05, we test the following hypothesis:

$$H_0: There\ is\ no\ difference\ in\ \mu\ between\ income\ groups$$ $$H_0: There\ is\ a\ difference\ in\ \mu\ between\ two\ or\ more\ income\ groups$$

```{r}
#| fig-width: 8
set.seed(1234)
ggbetweenstats(data = df_combined,
               x = incomeGroup,
               y = joviality,
               type = "np",
               mean.ci = TRUE, 
              pairwise.comparisons = TRUE, 
              pairwise.display = "s",
              p.adjust.method = "fdr",
              messages = FALSE
              ) +
  theme_classic() +
  theme(legend.position = "none",
        plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
```

The p-value is \< significance level of 0.05, so we can reject the null hypothesis and conclude that median joviality differs among income groups. In fact, there is a large difference in mean joviality between low income and high income groups, **with participants in low income groups having significantly greater joviality (median = 0.69) than those in the high income group (median = 0.27).**
:::

  **Age Groups**

::: panel-tabset
## **Distribution**

```{r}
#| fig-width: 8
ggplot(
    df_combined, 
    aes(x = joviality, 
        y = ageGroup,
        fill = ageGroup,
        color = ageGroup)
  ) +
  geom_density_ridges(
    bandwidth = .05, 
    alpha = .6
  ) +
  scale_x_continuous(
    breaks = scales::pretty_breaks(n = 5)
  ) +
  labs(
    title = "Distribution of Joviality Score Across Age Groups",
    subtitle = "Variation of joviality across all age groups -- suggests possible influence of multiple factors"
  ) +
  theme(
    legend.position = "none",
    axis.title.y = element_blank(),
    panel.grid.major = element_blank(),
    plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6")
  )
```

## **Normality Test**

```{r}
#| fig-width: 8
#| fig-height: 5
ggplot(df_combined, 
       mapping = aes(sample = joviality, 
                     fill = ageGroup))+
      stat_qq_band(alpha=0.15) +
      stat_qq_line(alpha=0.15) +
      stat_qq_point(size=0.5) + 
      facet_wrap(~ ageGroup, nrow = 1) + #< nrow used to fit all plots into a line
      labs(title = "Deviation from normality across Age Groups",
           subtitle = "Q-Q plots visually indicate that points diverge from diagonal at tail ends",
           x = "", y = "") +
      theme_bw() + #< theme selected as the border and colored title bar makes it easier to differentiate
      theme(legend.position = "none", #< legend removed as it was unnecessary
            axis.text.y = element_blank(),
            axis.text.x = element_blank(),
            axis.ticks.y = element_blank(),
            axis.ticks.x = element_blank(),
            panel.grid.minor = element_blank(),
            plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
```

```{r}
df_combined %>%
  group_by(ageGroup) %>%
  shapiro_test(joviality) %>%
  ungroup() %>%
  kbl() %>%
  kable_styling(full_width = F, bootstrap_options = "responsive")
```

Since the p-value across all age groups is \< 0.05, we reject the null hypothesis, concluding that joviality does not follow a normal distribution across age groups either. To test if there is a significant difference between groups, a non-parametric test will be used in subsequent analysis.

## **ANOVA**

A non-parametric Kruskal-Wallis one-way ANOVA test is conducted to determine if there is a significant difference in mean joviality score between age groups. At a significance level of 0.05, we test the following hypothesis:

$$H_0: There\ is\ no\ difference\ in\ \mu\ between\ age\ groups$$  $$H_0: There\ is\ a\ difference\ in\ \mu\ between\ two\ or\ more\ age\ groups$$

```{r}
#| fig-width: 8
set.seed(1234)
ggbetweenstats(data = df_combined,
               x = ageGroup,
               y = joviality,
               type = "np",
               mean.ci = TRUE, 
              pairwise.comparisons = TRUE, 
              pairwise.display = "s",
              p.adjust.method = "fdr",
              messages = FALSE
              ) +
  theme_classic() +
  theme(legend.position = "none",
        plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
```

The p-value (0.17) is \> significant level of 0.05, so we conclude that **there is no significant difference in mean joviality score across age groups.**
:::

::: {.pencilbox .pencil data-latex="pencil"}
**Visual Considerations**

-   Density ridges were used to compare across groups to reveal 'peaks' between high and low income groups at opposite ends of the joviality spectrum. As there were multiple variations in the distribution of Income and Age Groups, `bandwidth` argument from `geom_density_ridges()` was used to alter the bandwidth such that the density estimation was less smoothed out. This enabled the visualisation of the variations present in joviality across the groups.
-   Transparency for each density plot was toggled to show overlapping layers. `color` argument was added to Age Group plot as transparency value was increased due to the multiple overlaps. This enabled clearer visualisation of each group without obscuring.
-   Annotations were added to emphasize on insights from analysis of density
-   Q-Q plots were used to reveal deviations from normality for each group. `facet_wrap()` was used to show the distribution of each group side-by-side for clarity
-   `kable` styling of tables were used to display p-value statistics below each Q_Q plot.
:::
  
  
### 3.1.3: **How are Age and Income Groups Related?**  
\  
\  

::: panel-tabset

## **Mosaic Plot**

**There seems to be a fairly even spread of age group across income groups:**

```{r}
#| warning: false
#| fig-height: 5
ggSpine(
    df_combined,
    aes(x = ageGroup, 
    fill = incomeGroup),
    addlabel = TRUE,
    interactive = TRUE
  )
```
## **Chi-square Test**

To determine if there is an association between both groups, a chi-square test of association is conducted at 95% confidence level.

$$H_0: There\ is\ no\ association\ between\ income\ and\ age\ groups$$ $$H_1: There\ is\ an\ association\ between\ income\ and\ age\ groups$$

```{r}
#fig-width: 8
set.seed(1234)
  ggbarstats(
    df_combined,
    x = ageGroup, 
    y = incomeGroup,
    bf.message = FALSE
  ) +
  theme(
    plot.background = element_rect(
      fill="#F8F3E6",colour="#F8F3E6")
  )
```

Since p-value (0.76) is \> significance level of 0.05, we conclude that **there is no significant association between Income Group and Education Level.**

:::

### 3.1.4 **Joviality Across Both Income and Age**

The one-way ANOVA tests reported significant differences in joviality between income groups but not between age groups. There was also no reported association between income and age groups. However, there are still trends that can be observed when comparing multiple groups and different factor levels. This could give more specific insight into demographic patterns, as visualised in the following chart that compares joviality score across both Age and Income groups:

::: {.pencilbox .pencil data-latex="pencil"}
**Design Considerations**

-   A heatmap was selected to visualise the density of joviality by two different categorical variables.
-   Gradient fill could show the variation in joviality across both categories, with "lighter" gradients representing "happier" or higher joviality scores. This variation was made more obvious with a diverging yellow-blue palette.
-   The plot was made interactive, such that the user could access specific information per tile, without cluttering the plot with figures or annotations.
-   Subtitle was added to highlight most important insight from the analysis
-   Ideally, I would have changed the font output to match the rest of my visualisations -- this proved tricky due to the interactive layer, which had different parameters.
:::

```{r}
#| warning: false
# Calculate mean joviality per tile
gbcols <- c("ageGroup", "incomeGroup")

# Calculate Mean joviality score by agegroup and incomegroup and save in new dataframe
cal_joviality <- df_combined %>% 
  group_by(
    across(all_of(gbcols))) %>% 
  # Create new variable for mean joviality score by both groups
  summarise(
    mean_joviality = round(mean(joviality),2), 
    .groups = "drop") %>%
  ungroup()

# Style tooltip
tooltip_css <- "background-color:#3E4254; font-style:bold; color:#F8F3E6;" 

# Tile Plot
gg_tile <-
  ggplot(
    cal_joviality,
    aes(x = ageGroup, 
        y = incomeGroup)
  ) +
  geom_tile_interactive(
    aes(fill = mean_joviality,
        # Format tooltip information
        tooltip = paste("Age Group: ", ageGroup, "<br>",
                        "Income Group: ", incomeGroup, "<br>",
                        "Mean Joviality Score: ", mean_joviality))
  ) + 
  # Specify gradient colors for divergent scale 
  scale_fill_gradient(
    low = "#0a4c6a",
    high = "#fdd870",
    space = "Lab",
    na.value = "grey50",
    guide = "colourbar",
    aesthetics = "fill"
  ) +  
 labs(
   title = "Joviality across Income and Age Groups",
    subtitle = "Younger People from lower Income Groups had the highest joviality scores",
    x = "Age Group",
    y = "Income Group"
  ) +
  theme(
    # Move legend to right and change orientation so values are not overlapping 
    legend.position = "right",
    legend.direction = "vertical",
    axis.line.x = element_blank(),
    panel.grid.major.y = element_blank(),
    text = element_text(family = "Lato")
  ) +
  # Remove plot ticks as they are distracting and unnecessary
  remove_ticks() +
  theme(
    plot.background = element_rect(
      fill="#F8F3E6",colour="#F8F3E6")
  )

# Make into interactive ggiraph object
ggiraph::girafe(ggobj = gg_tile,
                width_svg = 6,
                height_svg = 6*0.7,
                options = list(opts_tooltip(css = tooltip_css)))                   
  
```  
\  
\  

::: {.focusbox .focus data-latex="focus"}
**Insights from Visualisations**

-   Interestingly, participants from lower income brackets reported much higher joviality scores than those in the highest income group, with age group 30-39 having the highest mean joviality. This is suggestive of social segregation within the city based on income.
-   Across all age bands in the highest income group, joviality scores were lower than median score of 0.44
-   Participants from higher income groups in the 51-60 age group reported lowest mean joviality score of 0.21\
-   **To cater to the wide range of income groups and age groups, city revitalisation efforts could focus on investing in developing community hubs that could foster a more inclusive environment. This could promote greater social interaction between diverse groups of citizens that may lead to a better sense of community.**
:::

## 3.2 **What makes these groups more or less jovial?**

To address this gap in joviality scores, there was a need to investigate if there are associations between high and low income groups and other categorical variables such as education level, interest group, household size, as well as expenses. These differences could also cast some insight into the wide variation in joviality scores.

```{mermaid}
%%| fig-height: 3
flowchart LR
A((Joviality)) --> B[Income Groups]
A --> C[Age Groups]
B -.- C
B -->|association?| D[Education]
B -->|association?| E[Interest Groups]
B -->|association?| F[Household Size]
B --> G[Children]
F -.- G
```

### 3.2.1: Tests of Association

To determine if there are significant associations between income group, education level, interest group and household size, we conduct a chi-square test of association. At a significance level of 0.05:

$$H_0: There\ is\ no\ association\ between\ groups$$ $$H_1: There\ is\ an\ association\ between\ groups$$

::: panel-tabset
## **Overview**

A Summary of results from Chi-Square Tests of Association:

| Significant <br>Association? | **Education** | **Interest Groups** | **Household Size** | **Children** |
|:-------------:|:-------------:|:-------------:|:-------------:|:-------------:|
|       **Income Group**       |      Yes      |         No          |        Yes         |     Yes      |
|           p-value            |   8.26e-48    |        0.09         |      7.06e-18      |   5.58e-09   |

## **Education**

```{r}
# As we want to compare only high and low groups, filter out into new df
df_highlow <- df_combined %>%
  filter(incomeGroup %in% c("Low", "High"))

set.seed(1234)
test_edu <- ggbarstats(df_highlow,
                        x = educationLevel, y = incomeGroup,
                        bf.message = FALSE) +
            labs(title = "Higher Income Groups are Significantly More Highly Educated",
                 x = "Income Group") +
            theme(panel.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"),
                  plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))

test_edu          
```

Since p-value is \< significance level of 0.05, we reject the null hypothesis and conclude that **there is an association between Income Group and Education Level.**

## **Interest Groups**

```{r}
#| message: false
set.seed(1234)
test_interest <- ggbarstats(df_highlow,
                            x = interestGroup, y = incomeGroup,
                            bf.message = FALSE) +
            labs(title = "No Significant Association Between Income and Interest",
                 x = "Income Group") +
            theme(panel.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"),
                plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
test_interest
```

Since p-value is \> significance level of 0.05, we conclude that **there is no dependent association between Income Group and Education Level.**

## **Household Size**

```{r}
set.seed(1234)
test_hhsize <- ggbarstats(df_highlow,
                          x = householdSize, y = incomeGroup,
                          bf.message = FALSE) +
            labs(title = "Significantly Higher Proportion of Singles in Lower Income Groups",
                 x = "Income Group") +
            theme(panel.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"),
                  plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
test_hhsize
```

Since p-value is \< significance level of 0.05, we reject the null hypothesis and conclude that **there is an association between Income Group and Household Size.**

## **Children**

```{r}
set.seed(1234)
test_kids <- ggbarstats(df_highlow,
                          x = haveKids, y = incomeGroup, 
                        bf.message = FALSE)+
            labs(title = "Lower Proportion of Children in Households with Lower Income",
                 x = "Income Group") +
            theme(
              panel.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"),
              plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
test_kids
```

Since p-value is \< significance level of 0.05, we reject the null hypothesis and conclude that **there is an association between Income Group and whether the household includes Children.**
:::



### 3.2.2: Comparing Joviality across Income Groups and Education Level

From the chi-square Tests of Association conducted above, income and education level are significantly associated. This relationship is visualised in an interactive boxplot grid:


::: {.pencilbox .pencil data-latex="pencil"}
**Design Considerations**

-   An interactive boxplot grid using `ggplotly()` enables the user to filter by income group, which is useful to compare across education levels and age groups
-   To find out if education level is indicative of age (i.e. older participants have higher qualifications) or if there are patterns related to both categorical groups, `facet_grid()` was used to segregate the plots by age group as well
-   Y-axis breaks were limited to n=3, to prevent over-cluttering. Light grid lines in the panel background were kept such that axis text could be read across the grid.
-   X-axis title, text and ticks were removed as there are only two distinct groups, which are labelled in the legend and colour coded across the graph. These unnecessary elements were removed to present a cleaner overall visual.
:::

```{r}
#| fig-height: 8 
#| fig-width: 8

edu2 <- ggplot(
    df_highlow, 
    aes(x = incomeGroup, 
        y = joviality, 
        # Different colors for income groups for greater differentiation
        fill = incomeGroup)
  ) + 
  geom_boxplot() + 
  facet_grid(ageGroup~educationLevel) + 
  # Use this theme as the border makes each plot clearly defined
  theme_bw() +  
  scale_y_continuous(breaks = scales::pretty_breaks(n=3)) + 
  theme(
    # Add panel spacing so that plots are not too clustered
    panel.spacing = unit(1, 'lines'),  
    axis.text.x = element_blank(), 
    axis.ticks.x = element_blank(), 
    axis.title.x = element_blank(), 
    panel.background = element_rect(
      fill="#F8F3E6",colour="#F8F3E6"), 
    plot.background = element_rect(
      fill="#F8F3E6",colour="#F8F3E6")
  )

# Make into interactive diagram to show Statistics

ggplotly(edu2)
```
  
  

::: {.focusbox .focus data-latex="focus"}

 **Insights from Visualisation**
 
-   Filtering by Income Group revealed that citizens from the high income group generally have higher educational qualifications, with a minimum level of High School or College education. 
-   For the low income group, variation in joviality scores was significantly wider in the High School/College and Low education levels, compared to Graduate and Bachelors. Joviality score range and median was also much higher for the latter.
-   **From these insights, it is possible to deduce that affordability is an obstacle to attaining higher education. City planners could look into improving the educational infrastructure, or providing grants and greater access to higher education, especially for the lower income groups.**

:::  
  

### 3.2.3: Comparing Joviality across Income Groups and Household Composition

**Household Composition**  

Before comparing joviality score with Household data, there is a need to understand the relationship between **householdSize** -- how large the household is -- and **haveKids** -- whether there are children present in the household. 

```{r}
ggbarstats(df_combined,
    x = haveKids, 
    y = householdSize,
    bf.message = FALSE
  ) +
  labs(
    title = "All 3-member Households Have Children",
    x = "Household Size"
  ) +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    panel.grid.major = element_blank(),
    panel.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"),
    plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6")
  )
```

From the output plot, **we can use householdSize as a proxy for Household Composition, with household size = 3 referring to families with children.**

```{r}
#| message: false
#| fig-width: 8

ggplot(df_highlow, 
    aes(x = joviality, 
        y = incomeGroup, 
      # Fill with cumulative probability density
        fill = 0.5 - abs(0.5 - after_stat(ecdf)))
  ) + 
  geom_density_ridges_gradient(
    calc_ecdf = TRUE, 
  # Reduce space between high and low 
    scale = 3
  ) +
  facet_wrap(~householdSize) + 
  scale_fill_viridis(
    alpha = .7,
  # Select Colour Palette
    option = "E"
  ) +
  labs(
    title = "Probability Density of Joviality Score Across Income Groups and Households",
    subtitle = "Brighter yellow colors suggest higher probability of joviality score occurring",
    x = "Joviality", 
    y = "Income Groups"
  ) +
  theme(
    legend.position = "right",
    legend.direction = "vertical",
    plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6")
  )

```

::: {.focusbox .focus data-latex="focus"}

 **Insights from Visualisation**
 
-   Peaks in Joviality seem to increase in larger households with children in low income groups 
-   Joviality distribution is similarly right-skewed across household sizes in high income groups, suggesting that the presence of children does not have a large effect on joviality score in this income group. 

:::  



### 3.2.4: Comparing Joviality and Expenses

```{mermaid}
%%| fig-height: 3
flowchart LR
A((Joviality)) --> B[Income Groups]
A --> C[Age Groups]
B -.- C
B --> D[Education]
B --> E[Interest Groups]
B --> F[Household Size]
B --> G[Children]
F -.- G
B -->|correlation?| H[Expenses]
H -.- I(Expense Ratio)
```

   

**What proportion of income does the average citizen spend?**

```{r}
ggplot(financial_agg, 
    aes(x = expenseRatio, 
        y = incomeGroup)
  ) +
  geom_point(
    alpha = 0.2, 
    size = 7
  ) +
  stat_summary(
    color = "#fdbf11", 
    fun = "median", 
    geom = "point", 
    size = 7, 
    alpha = 0.8
  ) +
  scale_x_continuous(
    expand = expansion(mult = c(0.002, 0)), 
    limits = c(0, 1),
    breaks = scales::pretty_breaks(n=3)
  ) +  
  labs(
    title = "Lower Income Groups Tend to Spend a Higher Proportion of Their Income",
    subtitle = "Median values are highlighted in Yellow",
    x = "Expense Ratio",
    y = NULL
  ) +
  theme(
    axis.ticks.y = element_blank(),
    plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6")
  )

```

   

::: {.pencilbox .pencil data-latex="pencil"}
**Design Considerations**

-   To visualise the variation as well as differences in range between groups, a strip chart was used to represent all data points in linear fashion\
-   `alpha` value was set low to allow translucency of overlapping points. Since the points would tend to cluster, using a lower alpha value would enable visibility of points. It also creates a visual density, where higher proportion of overlaps produce darker colours.\
-   Using `stat_summary()` enabled the visualisation of median value per group, specifying a contrasting color to make it stand out from the other points.
:::

   

To find understand the spending patterns across Income Groups, average total expense is calculated and visualised:

```{r}
#| message: false

# Get Average amount spent per category
df_ave_expense <- df_combined %>%
                  select(
                    participantId, incomeGroup, Education, Food, Recreation, Shelter, totOutflow) %>%
                  group_by(
                    incomeGroup) %>%
                  summarise(
                    num = n(),
                    AvgOutflow = sum(totOutflow)/num,
                    Education = round((sum(Education)/num),0),
                    Food = round((sum(Food)/num),0), 
                    Recreation = round((sum(Recreation)/num),0), 
                    Shelter = round((sum(Shelter)/num),0))
                            

# reshape the dataframe to long format
df_longer <- df_ave_expense %>%
              select(c(incomeGroup, Education, Food, Recreation, Shelter)) %>%
              pivot_longer(!incomeGroup, names_to = "Expense", values_to = "Amount")


xform <- list(title = 'Income Group',
              categoryorder = "array",
              # Specify category titles
              categoryarray = c("Low",
                                "Mid-low",
                                "Mid",
                                "Mid-high",
                                "High"))


expfig <- plot_ly(df_longer, 
               x = ~incomeGroup, 
               y = ~Amount,
               type = "bar",
               color = ~Expense,
               colors = c("salmon", "grey10", "#fdbf11","#1696d2")) %>%
          layout(barmode = "stack", 
                 xaxis = xform, 
                 yaxis = list(title = "Total Expenditure ($)"), 
                 title = "Highest Expenditure on Shelter across Income Groups",
                 plot_bgcolor = "#F8F3E6",
                 paper_bgcolor = "#F8F3E6" )
expfig
```  
  
\  

From this initial visualisation, all groups spent the most on Shelter. **Subsidised or improved housing facilities, especially for larger households, could also be explored to improve overall quality of life.**  
  
\  

**What is the correlation between Joviality and Expenditure amounts by category?**

```{r}
#| warning: false
#| fig-height: 4.5
#| fig-width: 4.5

df_corr <- df_combined %>%
  select(joviality, Shelter, Recreation, Food, Education)

corrplot <- ggcorr(
    df_corr,
    low = "salmon", 
    mid = "#cfe8f3",
    high = "#062635",
  # Styling label title size, position and color
    label = TRUE,
    size = 3.5,
    hjust = .5,
    vjust = 3,
    color = "grey20"
  ) +
  labs(
    title = "Strongest Correlation Between Joviality and\nExpenditure on Food"
  ) +
  theme(
    legend.direction = "vertical",
    panel.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"),
    plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6")
  )

corrplot
```

    

The correlation matrix revealed that there was a stronger positive correlation between joviality and amount spent on Food and Recreation. 
**Visualising Correlations between Food and Recreation Expenditure by Income Group**  
\  

::: {.pencilbox .pencil data-latex="pencil"}
**Visual Considerations**

-   The aim of this visualisation was to show the relation between joviality and expense on Food and Recreation, by income group.
* Recreation Plots: A separate group at Expense = $0 was emphasized by: 
  - using `geom_vline`to visualise the trend, 
  - using `annotate` to identify and label the separate group on the plot panel,
  - Formatting the label using linebreaks `\n` such that it was not obscured by the points on the plot.
-   Plots were coded separately and put side-by-side for comparison by income groups using `patchwork`  

:::

```{r}
#| fig-width: 10
#| message: false

Hfscat <- df_highlow %>%
  filter(incomeGroup == "High") %>%
  ggscatterstats(
    x = Food, 
    y = joviality, 
    conf.level = 0.95,
    bf.message = FALSE
  ) +
  scale_x_continuous(
    breaks = scales::pretty_breaks(n = 4),
    labels = label_dollar()
  ) +
  labs(
    title = "High Income Group:",
    x = "Amount Spent on Food"
  ) +
  theme(
    panel.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"),
    plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6")
  )

Lfscat <- df_highlow %>%
  filter(incomeGroup == "Low") %>%
  ggscatterstats(
    x = Food, 
    y = joviality, 
    conf.level = 0.95,
    bf.message = FALSE
  ) +
  scale_x_continuous(
    breaks = scales::pretty_breaks(n = 4),
    labels = label_dollar()
  ) +
  labs(
    title = "Low Income Group:",
    x = "Amount Spent on Food"
  ) +
  theme(
    panel.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"),
    plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6")
  )

foodpatch <- (Hfscat | Lfscat) +
   plot_annotation(
      title = "Stronger Positive Correlation Between Food and Joviality in High Income Group")

foodpatch & theme(plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
```

```{r}
#| fig-width: 10
#| message: false

Hrecscat <- df_highlow %>%
  filter(incomeGroup == "High") %>%
  ggscatterstats(
    x = Recreation, 
    y = joviality, 
    conf.level = 0.95,
    bf.message = FALSE
  ) +
  scale_x_continuous(
    breaks = scales::pretty_breaks(n = 4),
    labels = label_dollar()
  ) +
  geom_vline(
    xintercept = 0,
    colour="blue", linewidth = 1
  ) +
annotate(
    geom = "text", x = 1200, y = 0.6,
    label = "Splinter group\nwith Expense=$0"
  ) +
  labs(
    title = "High Income Group:",
    x = "Amount Spent on Recreation"
  ) +
  theme(
    panel.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"),
    plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6")
  )

Lrecscat <- df_highlow %>%
  filter(incomeGroup == "Low") %>%
  ggscatterstats(
    x = Recreation, 
    y = joviality, 
    conf.level = 0.95,
    bf.message = FALSE
  ) +
  scale_x_continuous(
    breaks = scales::pretty_breaks(n = 4),
    labels = label_dollar()
  ) +
  geom_vline(
    xintercept = 0,
    colour="blue", linewidth = 1
  ) +
annotate(
    geom = "text", x = 1200, y = 0.6,
    label = "Splinter group\nwith Expense=$0"
  ) +
  labs(
    title = "Low Income Group:",
    x = "Amount Spent on Recreation"
  ) +
  theme(
    panel.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"),
    plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6")
  )

recpatch <- (Hrecscat | Lrecscat) +
   plot_annotation(
      title = "Stronger Positive Correlation Between Recreation and Joviality in Low Income Group")

recpatch & theme(plot.background = element_rect(fill="#F8F3E6",colour="#F8F3E6"))
```  

::: {.focusbox .focus data-latex="focus"}

**Insights from Visualisations**  

* **Food and Joviality:**
  - There is a stronger positive linear correlation between expenditure on food and higher joviality in High income participants compared to those in lower income groups. 
  - Multiple clumps of points across both graphs seem to suggest presence of multiple groups, which may indicate other factors affecting expenditure. 

* **Recreation and Joviality:**
  - There is a stronger positive linear correlation between expenditure on recreation and higher jovialiaty in Low income participants compared to those in the High income group
  - Distribution of points in the High Income Group is more widely scattered around the middle expenditure range, indicative of lower expenditure range compared to Low income groups
  - However, there is a diverging line in the correlation scatterplots for both groups, identifying a group of participants who have spent $0 on recreation, yet recorded a range of low-high joviality scores. This splinter group represents a smaller portion of the overall sample. 
  - From Section 1.2.2, which summarized expenditure trends over time range of transactions, average spending on Recreation declined over the year. While associated changes in joviality cannot be determined due to lack of data, **community revitalisation plans could involve developing communal recreational infrastructure, increasing recreational spaces in the City such as parks or cultural attractions that are free for use or subsidised.**
:::


# 4: **Conclusion**

## 4.1 Data Limitations

Despite the discovery of various insights from the datasets, there are a few caveats that the user should be aware of:

-   **Sampling Bias:** It cannot be accurately determined if the sample data is representative of the entire City population. As there is no geographic data included, the sample may be biased towards certain areas within the city. There was also a much higher proportion of households without children, and participants with lower educational qualifications surveyed. The sample thus may not accurately reflect the broader population.\

-   **Incomplete Data:** Financial data was not representative of all survey participants (covered in Section 1.2.2)

-   **Response Bias:** As data was collected through a survey, the dataset may rely on self-reported statistics that may be partially influenced by a variety of factors. This may limit the accuracy of data collected, especially regarding financial transactions.\

-   **Time-based Limitations:** Joviality score was recorded only at the start of the survey, but financial statements were taken over the course of the year. Declining expenditure on Food and Recreation were observed, but any potential changes in joviality were not recorded, which could lead to different insights. Changes in personal circumstances could also affect joviality score, and may have occurred in the course of the data collection process.

-   **Correlation is not Causation:** While the data exploration and visualisations have given some interesting insights and highlighted some correlations between variables affecting joviality, it is unclear if these factors directly **cause** changes in joviality. Several rounds of surveys could be conducted to collect a more complete data set, or findings from this initial survey could be tested against a separate sample for comparison.

## 4.2 A Visual Summary

```{mermaid}
%%| fig-width: 8
flowchart LR
A((Joviality)) --> B[Income Groups] --- E[Age Group]
B -.-|fa:fa-circle-up joviality| C(High Income)
B -.- D(fa:fa-face-smile Low Income)
E -.- F(fa:fa-face-smile Younger) ===|fa:fa-face-smile Most Jovial| D
E -.-|fa:fa-circle-up joviality| G(Older)
A ---> H[Expenses] -.-> I[Expense ratio] -.- D
H -.- J(fa:fa-up-long fa:fa-sack-dollar Recreation)
C -.-|fa:fa-circle-up joviality| J
H -.-|fa:fa-circle-up joviality| K(fa:fa-down-long fa:fa-sack-dollar Shelter)
H -.-|fa:fa-circle-up joviality| S(fa:fa-up-long fa:fa-sack-dollar Food)
A --> L[Household Size] -.- M(fa:fa-face-smile Single)
L -.-|fa:fa-circle-up joviality| N(2-3) --- O[Have Kids]
A ---> P[Education] -.- Q(fa:fa-face-smile Higher Edu) -.- D
P -.-|fa:fa-circle-up joviality| R(Lower Edu)
B ----> T((fa:fa-tree-city Plans))
E ----> T
H ----> T
L ----> T
P ----> T
```

An overarching theme (`urbnthemes`) was used to ensure standardised colors and chart styles throughout the study. In general, density plots, dotplots in various configurations, as well as histograms were chosen to visualise the underlying undulations in distribution of variables. Interactive elements were also deployed to enable filtering through the data to uncover trends and differences. Insights from each visualisation have been added after each visual, or added as titles/subtitles in the charts themselves.
