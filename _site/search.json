[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "haileycsy",
    "section": "",
    "text": "gif source"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands on Exercise 1",
    "section": "",
    "text": "pacman::p_load(tidyverse, forcats)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nsummary(exam_data)\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-themes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-themes",
    "title": "Hands on Exercise 1",
    "section": "1: Working with Themes",
    "text": "1: Working with Themes\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n    geom_bar() + \n    coord_flip()+\n    theme_minimal() + \n    theme(\n      panel.background=element_rect(fill='lightblue', colour='lightblue'),\n      panel.border=element_blank(),\n      panel.grid.major=element_line(linewidth=0.2, linetype='solid', colour=\"white\"), \n      panel.grid.minor=element_line(linewidth=0.2, linetype='solid', colour=\"white\"),\n      plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-pupil-count-by-race",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-pupil-count-by-race",
    "title": "Hands on Exercise 1",
    "section": "2: Makeover Design for Pupil Count by Race",
    "text": "2: Makeover Design for Pupil Count by Race\n\nFormulaForcats\n\n\n\nggplot(data = exam_data, \n       aes(x = reorder(RACE, RACE, function(x)-length(x)))) +\n    geom_bar()+\n    ylim(0, 220) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-1) +\n    labs(x = \"Race\",\n         y = \"No. of\\nPupils\") + \n    theme_grey() +\n    theme(\n      axis.title.y = element_text(hjust=1, angle=0),\n      plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n    )\n\n\n\n\n\n\n\nexam_data %>%\n  mutate(RACE = fct_infreq(RACE)) %>%\n  ggplot(aes(x = RACE)) + \n  geom_bar()+\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0),\n        plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-distribution-of-math-scores",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-distribution-of-math-scores",
    "title": "Hands on Exercise 1",
    "section": "3: Makeover Design for Distribution of Math Scores",
    "text": "3: Makeover Design for Distribution of Math Scores\n\nggplot(data=exam_data,\n       aes(x=MATHS)) + \n    geom_histogram(bins=20, \n                   color=\"grey30\", \n                   fill=\"lightblue\") +\n    labs(x = \"Math Score\",\n         y = \"No. of Pupils\",\n         title = \"Distribution of Math Scores\") + \n    geom_vline(aes(xintercept=median(exam_data$MATHS, na.rm=T)),\n               color=\"grey30\", linewidth=1, linetype=\"dashed\") + \n    geom_vline(aes(xintercept=mean(exam_data$MATHS, na.rm=T)),\n               colour=\"red\", linewidth=1, linetype=\"dashed\") + \n    theme(plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-distribution-of-english-score-by-gender",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-distribution-of-english-score-by-gender",
    "title": "Hands on Exercise 1",
    "section": "4: Makeover Design for Distribution of English Score by Gender",
    "text": "4: Makeover Design for Distribution of English Score by Gender\n\neng_data <- exam_data[\"ENGLISH\"]\n\nggplot(data=exam_data,\n       aes(x=ENGLISH, fill=GENDER)) +\n    geom_histogram(bins=20, data=eng_data, fill=\"grey\", alpha=0.7, na.rm=T) + \n    geom_histogram(bins=20, color=\"black\", na.rm=T) + \n    facet_wrap(~ GENDER) +\n    xlim(20,100) + \n    labs(x = \"English Score\",\n         y = \"No. of Pupils\",\n         title = \"Distribution of English Scores by Gender\") + \n    theme_bw() + \n    theme(plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n    )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-scatterplot-of-english-and-math-scores",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-scatterplot-of-english-and-math-scores",
    "title": "Hands on Exercise 1",
    "section": "5: Makeover Design for Scatterplot of English and Math Scores",
    "text": "5: Makeover Design for Scatterplot of English and Math Scores\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  geom_vline(aes(xintercept=50),\n               color=\"grey\", linewidth=0.8, linetype=\"dashed\") + \n  geom_hline(aes(yintercept=50),\n               color=\"grey\", linewidth=0.8, linetype=\"dashed\") + \n  labs(x = \"Math Score\",\n       y = \"English Score\",\n       title = \"Correlation between English and Math Scores\") + \n  theme_gray() +\n  theme(plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands on Exercise 2",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, ggpmisc,\n               ggthemes, hrbrthemes, InraeThemes, ggthemr,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#annotations-with-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#annotations-with-ggrepel",
    "title": "Hands on Exercise 2",
    "section": "1: Annotations with ggrepel",
    "text": "1: Annotations with ggrepel\nA comparison between annotations using geom_label(), geom_text() and package ggrepel\n\nwith ggrepelwithout\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5,\n              formula = y~x) +  \n  geom_label_repel(aes(label = ID), \n                   fontface=\"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  labs(x=\"Math\",\n       y=\"English\",\n       title=\"Correlation between English and Maths scores for Primary 3\",\n       subtitle=\"There is a positive correlation between English and Math Scores\") +\n  theme(text=element_text(family=\"mono\"),\n        plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5,\n              formula = y~x) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  labs(x=\"Math\",\n       y=\"English\",\n       title=\"Correlation between English and Maths scores for Primary 3\",\n       subtitle=\"There are too many annotations to see the points clearly\") +\n  theme(plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#customising-themes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#customising-themes",
    "title": "Hands on Exercise 2",
    "section": "2: Customising themes",
    "text": "2: Customising themes\n\n2.1: ggtheme package\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  labs(x = \"Math Scores\",\n       y = \"No. of Students\",\n       title = \"Distribution of Math Scores\") +\n  theme_economist()\n\n\n\n\n\n\n2.2: hbrthemes package\n\nPlot 1Code 1Plot 2Code 2\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  labs(x = \"Math Scores\",\n       y = \"No. of Students\",\n       title = \"Distribution of Math Scores\") +\n  theme_ipsum()\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  labs(x = \"Math Scores\",\n       y = \"Number of Students\",\n       title = \"Distribution of Math Scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 12,\n              grid = \"Y\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#composite-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#composite-graphs",
    "title": "Hands on Exercise 2",
    "section": "3: Composite Graphs",
    "text": "3: Composite Graphs\n\n3.1 Combining 2 graphs: ‘+’ operator\n\np1 <- ggplot(data=exam_data, \n            aes(x = MATHS)) +\n        geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey90\", \n                 fill=\"#3A3B60\") +\n        labs(x = \"Math Scores\",\n             y = \"Number of Students\",\n             title = \"Distribution of Math Scores\")\n\np2 <- ggplot(data=exam_data, \n            aes(x = ENGLISH)) +\n        geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey90\", \n                 fill=\"#4d5887\") +\n        labs(x = \"English Scores\",\n             title = \"Distribution of English Scores\") +\n        theme(axis.title.y = element_blank())\n\np1 + p2\n\n\n\n\n\n\n3.2 Combining 3 graphs: ‘|’, ‘/’, ‘()’\n\nUse different operators to specify composition\n\n“|” operator to stack two ggplot2 graphs\n“/” operator to place the plots beside each other\n“()” operator defines the sequence of the plotting\n\n\n\np3 <- ggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n      geom_point() +\n      geom_smooth(method=lm, \n              linewidth=0.5,\n              formula = y~x) + \n      stat_poly_line() +\n      stat_poly_eq() +\n      coord_cartesian(xlim=c(0,100),\n                      ylim=c(0,100)) +\n      labs(x=\"Math\",\n           y=\"English\",\n           title=\"Correlation between Math and English Scores\")\n\n(p1/p2) | p3\n\n\n\n\n\n\n3.3: Adding Annotations\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\nApplying themes to composite\ntheme_economist()\n\npatchwork <- ((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\npatchwork & theme_economist()\n\n\n\n\ntheme_inrae()\n\npatchwork <- ((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\npatchwork & theme_inrae()\n\n\n\n\ntheme_solarized_2()\n\npatchwork <- ((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\npatchwork & theme_solarized_2()\n\n\n\n\nggthemr: chalk\n\nggthemr(\"chalk\")\n\npatchwork <- ((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\npatchwork\n\n\n\n\n\n\n3.4: Inset Figures\nUsing inset_element() to place a plot within another plot\n\nggthemr_reset()\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "code block\npacman::p_load(ggiraph, plotly, gganimate,\n               gifski, gapminder,\n               DT, tidyverse, patchwork, readxl,\n               urbnthemes, ggthemr, wesanderson)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#ggiraph-package",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#ggiraph-package",
    "title": "Hands-on Exercise 3",
    "section": "ggiraph package",
    "text": "ggiraph package\n\nInteractive Arguments of ggiraph\n\nTooltip: displayed when hovering over chart elements\nOnclick: executed when elements are clicked\nData_id: Uses columns as id to show association of elements"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#tooltips",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#tooltips",
    "title": "Hands-on Exercise 3",
    "section": "1: Tooltips",
    "text": "1: Tooltips\nOriginal ggplot dotplot:\n\n\ncode block\nset_urbn_defaults(style = \"print\")\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_dotplot(stackdir = \"up\", \n               binwidth = 1,\n               dotsize = 1) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(x = \"Math Scores\") + \n  theme(axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank())\n\n\n\n\n\nWith ggiraph tooltips:\n\n\ncode block\np <- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1,\n    dotsize = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(x = \"Math Scores\")\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n1.1: Controlling Information in Tooltips\nCustomise information to be included in tooltips by creating a new list\n\n\ncode block\nexam_data$tooltip <- c(paste0(\n  \"Name:\", exam_data$ID,\n  \"\\n Class:\", exam_data$CLASS\n))\n\np <- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip),\n    stackgroups = TRUE, \n    binwidth = 1,\n    dotsize = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(x = \"Math Scores\")\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\n1.2: Formatting style of Tooltips\nAdding css arguments to opts_tooltip() of ggiraph\n\n\ncode block\ntooltip_css <- \"background-color:#dfdfeb; font-style:bold; color:black;\"  #<<\n\nexam_data$tooltip <- c(paste0(\n  \"Name:\", exam_data$ID,\n  \"\\n Class:\", exam_data$CLASS\n))\n\np <- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip),\n    stackgroups = TRUE, \n    binwidth = 1,\n    dotsize = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(x = \"Math Scores\")\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618,\n  options = list(    #<<\n    opts_tooltip(    #<<\n      css = tooltip_css)) #<<\n)                               \n\n\n\n\n\n\n\n\n1.3: Displaying Statistics in tooltips\nAdding stat_summary() calculations in ggplot\n\n\ncode block\nggthemr(\"flat\")\n\ntooltip <- function(y, ymax, accuracy = .01) {   #<<\n  mean <- scales::number(y, accuracy = accuracy) #<<\n  sem <- scales::number(ymax - y, accuracy = accuracy) #<<\n  paste(\"Mean Math Score:\", mean, \"+/-\", sem) #<<\n} #<<\n\np2 <- ggplot(data=exam_data, \n                   aes(x = RACE)) +\n  stat_summary(aes(y = MATHS, \n                  tooltip = after_stat(tooltip(y, ymax))),\n                  fun.data =\"mean_se\",\n                  geom = GeomInteractiveCol,\n                  fill = \"light blue\") +\n  stat_summary(aes(y = MATHS),\n               fun.data = mean_se,\n               geom =\"errorbar\", \n               width = 0.2, linewidth = 0.2) +\n  labs(y =\"Math Scores\") + \n  theme(axis.title.x = element_blank(),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\ngirafe(ggobj = p2,\n       width_svg = 8,\n       height_svg = 8*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#hover-effect-with-data_id",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#hover-effect-with-data_id",
    "title": "Hands-on Exercise 3",
    "section": "2: Hover effect with data_id",
    "text": "2: Hover effect with data_id\n\ndata_id is specified as an aes() argument in the interactive geom functions\ne.g: geom_dotplot_interactive(aes(data_id = variablename))\n\n\n\ncode block\np <- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             #<<\n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL) + \n  labs(x =\"Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)        \n\n\n\n\n\n\n\n2.1: Formatting Style of Hover Effect\n\nCustomisation Options\n\nopts_hover(css = NULL, reactive = FALSE, nearest_distance = NULL) > effect on geometries\n\nopts_hover_inv(css = NULL) > effect on other geometries, while one is hovered\nopts_hover_key(css = NULL, reactive = FALSE) > interactive scales\nopts_hover_theme(css = NULL, reactive = FALSE) > interactive theme elements\n\n\n\n\ncode block\np <- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL) + \n  labs(x =\"Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                     #<<\n  opts_hover(css = \"fill: #202020;\"), #<<\n  opts_hover_inv(css = \"opacity:0.2;\") #<<\n  )                                   #<<  \n) \n\n\n\n\n\n\n\n\n1 + 2: Tooltip + Hover Powers Combined!!\n\n\ncode block\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, #<<\n        data_id = CLASS),#<<              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  labs(x =\"Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\n2.2: Coordinated Multiple Views\n\nWhen a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too\n\nUse interactive functions of ggiraph to create multiple views\n\nPatchwork function from patchwork package weaves views together as coordinated plots\n\n\n\n\ncode block\np1 <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + #<<\n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  labs(x =\"Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\np2 <- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS,\n        data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + #<<\n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  labs(x =\"English Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\ngirafe(code = print(p1 / p2), #<<\n       width_svg = 6,\n       height_svg = 6,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#onlick",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#onlick",
    "title": "Hands-on Exercise 3",
    "section": "3: Onlick",
    "text": "3: Onlick\nonclick argument opens link up in new window when clicked.\n\n\ncode block\ntt <- \"click me\"\n\nexam_data$onclick <- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.onemap.gov.sg/main/v2/schoolquery\",\nas.character(exam_data$ID))\n\np <- ggplot(data=exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(aes(tooltip = tt,\n                               onclick = exam_data$onclick),\n                           stackgroups = TRUE,\n                           binwidth = 1,\n                           method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  labs(x =\"Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-package",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-package",
    "title": "Hands-on Exercise 3",
    "section": "plotly package",
    "text": "plotly package\nCreate interactive graphs using:\n\nplot_ly()\nggplotly()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#using-plot_ly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#using-plot_ly",
    "title": "Hands-on Exercise 3",
    "section": "3.1: Using plot_ly()",
    "text": "3.1: Using plot_ly()\n\n\ncode block\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n3.1.2: Adding Visual Variables\nAdding color argument to code chunk to vary marker colors by specified category\n\n\ncode block\nplot_ly(data = exam_data, \n        x = ~ENGLISH,\n        y = ~MATHS,\n        color = ~RACE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#using-ggplotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#using-ggplotly",
    "title": "Hands-on Exercise 3",
    "section": "3.2: Using ggplotly()",
    "text": "3.2: Using ggplotly()\n\n\ncode block\nmoonrise_cols <- wes_palette(\"Moonrise2\", type = \"discrete\")\n\np <- ggplot(data = exam_data,\n            aes(x = ENGLISH,\n                y = MATHS,\n                color = RACE,\n                text = paste(\"<b>English Score:</b>\", ENGLISH, \"<br><b>Math Score:</b>\", MATHS,\"<br>Race:\", RACE))) +\n      geom_point(size = 1.5) +\n      labs(title = \"Math and English Scores by Race\",\n           x = \"English Score\",\n           y = \"Math Score\") +\n      scale_color_manual(values = wes_palette(\"Moonrise2\", n = 4)) + \n      theme_grey() +\n      theme(plot.title = element_text(color = moonrise_cols[4], size = 14, face = \"bold\"),\n            axis.title.x = element_text(color = moonrise_cols[1], size = 10, face = \"bold\"),\n            axis.title.y = element_text(color = moonrise_cols[1], size = 10, face = \"bold\"),\n            plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\")\n           )\n\nggplotly(p, tooltip = \"text\")\n\n\n\n\n\n\n\n3.2.2: Coordinated Multiple views with ggplotly\n\nThis involves three steps:\n\nhighlight_key() of plotly package is used as shared data\ncreate scatterplots using ggplot2 functions\nsubplot() of plotly package is used to place them side-by-side\n\n\n\n\ncode block\nd <- highlight_key(exam_data)\n\np1 <- ggplot(data = d, \n            aes(x = MATHS,\n                y = ENGLISH,\n                text = paste(\"<b>Math Score:</b>\", MATHS,\"<br><b>English Score:\", ENGLISH))) +\n  geom_point(size = 1, shape = 18) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) + \n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\np2 <- ggplot(data = d, \n            aes(x = MATHS,\n                y = SCIENCE,\n                text = paste(\"<b>Math Score:</b>\", MATHS,\"<br><b>Science Score:\", SCIENCE))) +\n  geom_point(size = 1) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) +\n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\nsubplot(ggplotly(p1, tooltip = \"text\"),\n        ggplotly(p2, tooltip = \"text\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#crosstalk-and-dt",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#crosstalk-and-dt",
    "title": "Hands-on Exercise 3",
    "section": "Crosstalk and DT",
    "text": "Crosstalk and DT\nCrosstalk is an add-on to the htmlwidgets package. It extends htmlwidgets with a set of classes, functions, and conventions for implementing cross-widget interactions (currently, linked brushing and filtering).\n\nLimitations of Crosstalk:\n\nHTML widgets must be specifically modified to support Crosstalk\nOnly works for linked brushing and filtering of views that show individual data points, not aggregate or summary views\nBecause all data must be loaded into the browser, Crosstalk is not appropriate for large data sets"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#datatables-using-dt-package",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#datatables-using-dt-package",
    "title": "Hands-on Exercise 3",
    "section": "4.1: DataTables using DT package",
    "text": "4.1: DataTables using DT package\nDT package allow rendering of data objects as HTML tables\n\n\ncode block\nDT::datatable(exam_data[c(\"ID\",\"CLASS\",\"GENDER\",\"RACE\",\"ENGLISH\",\"MATHS\",\"SCIENCE\")],\n              caption = htmltools::tags$caption(style = \"caption-side: bottom; text-align: center;\",\n                                                \"Table 1: \", htmltools::em(\"Exam Data for Primary 3\")),\n              class = \"compact\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#linking-plot-to-table",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#linking-plot-to-table",
    "title": "Hands-on Exercise 3",
    "section": "4.2: Linking Plot to Table",
    "text": "4.2: Linking Plot to Table\n\n\ncode block\nexam_data <- subset(exam_data, select = c(1:7))\nd <- highlight_key(exam_data)\n\np <- ggplot(data = d, \n            aes(x = MATHS,\n                y = ENGLISH,\n                text = paste(\"<b>Math Score:</b>\", MATHS,\"<br><b>English Score:\", ENGLISH))) +\n  geom_point(size = 1) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) + \n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\ngg <- highlight(ggplotly(p, tooltip = \"text\"),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#gganimate-and-gifski-packages",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#gganimate-and-gifski-packages",
    "title": "Hands-on Exercise 3",
    "section": "gganimate and gifski packages",
    "text": "gganimate and gifski packages\ngganimate provides a range of new grammar classes that can be added to the plot object in order to customise how it should change with time.\n\ntransition_*() defines how the data should be spread out and how it relates to itself across time\nview_*() defines how the positional scales should change along the animation\nshadow_*() defines how data from other points in time should be presented in the given point in time\nenter_*()/exit_*() defines how new data should appear and how old data should disappear during the course of the animation\nease_aes() defines how different aesthetics should be eased during transitions\n\ngifski converts video frames to GIF animations\n*Importing Data**\n\n\ncode block\ncol <- c(\"Ethnicity\")\n\nmsia_pop <- read_csv(\"data/Malaysia_demographics.csv\") %>%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-bubble-plot-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-bubble-plot-1",
    "title": "Hands-on Exercise 3",
    "section": "5.1: Animated Bubble Plot 1",
    "text": "5.1: Animated Bubble Plot 1\n\nThis involves three steps:\n\nCreate a static Bubble Plot using ggplot\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year)\nease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce\n\n\n\n\ncode block\nggplot(msia_pop, aes(x = Pct_Old, y = Pct_Young, \n                      size = Population, \n                      colour = Ethnicity)) +\n  geom_point(alpha = 0.7) +\n  scale_colour_manual(values = wes_palette(\"Darjeeling1\")) +\n  scale_size(range = c(5, 25)) +\n  labs(title = 'Malaysian Population by Ethnicity for Year: {frame_time}',\n       subtitle = \"Data Source: https://www.kaggle.com/datasets/jasonkwm/malaysia-demographic-20102019\",\n       x = '% Aged', \n       y = '% Young') +\n  guides(size = \"none\") +\n  theme(legend.position = \"bottom\",\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\")) + \n  transition_time(Year) +       #<<\n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-bubble-plot-2",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-bubble-plot-2",
    "title": "Hands-on Exercise 3",
    "section": "5.2: Animated Bubble Plot 2",
    "text": "5.2: Animated Bubble Plot 2\n*Importing data**\n\n\ncode block\nglobalPop <- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %>%\n  mutate(across(where(is.character), as.factor)) %>%\n  mutate(Year = as.integer(Year))\n\n\n\n\ncode block\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  theme_gray() + \n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\")) + \n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-frame-animations",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-frame-animations",
    "title": "Hands-on Exercise 3",
    "section": "Plotly Frame Animations",
    "text": "Plotly Frame Animations"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#ggplotly-animated-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#ggplotly-animated-bubble-plot",
    "title": "Hands-on Exercise 3",
    "section": "6.1: ggplotly Animated Bubble Plot",
    "text": "6.1: ggplotly Animated Bubble Plot\nggplotly() is used to convert the R graphic object into an animated svg object.\n\n\ncode block\ngg <- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),  #<<\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme_gray() + \n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\nggplotly(gg)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plot_ly-animated-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plot_ly-animated-bubble-plot",
    "title": "Hands-on Exercise 3",
    "section": "6.2: plot_ly() Animated Bubble Plot",
    "text": "6.2: plot_ly() Animated Bubble Plot\n\n\ncode block\nbp <- globalPop %>%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent, \n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          )\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands on Exercise 4",
    "section": "",
    "text": "Load and Install R Packages\n\npacman::p_load(ggstatsplot, tidyverse)\n\n\n\nImporting the data\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nhead(exam_data, 10)\n\n# A tibble: 10 × 7\n   ID         CLASS GENDER RACE    ENGLISH MATHS SCIENCE\n   <chr>      <chr> <chr>  <chr>     <dbl> <dbl>   <dbl>\n 1 Student321 3I    Male   Malay        21     9      15\n 2 Student305 3I    Female Malay        24    22      16\n 3 Student289 3H    Male   Chinese      26    16      16\n 4 Student227 3F    Male   Chinese      27    77      31\n 5 Student318 3I    Male   Malay        27    11      25\n 6 Student306 3I    Female Malay        31    16      16\n 7 Student313 3I    Male   Chinese      31    21      25\n 8 Student316 3I    Male   Malay        31    18      27\n 9 Student312 3I    Male   Malay        33    19      15\n10 Student297 3H    Male   Indian       34    49      37\n\n\n\n\nOne-Sample Test: gghistostats()\n\nset.seed(1234)\n\ngghistostats(\n  data = exam_data,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\") + \n  theme_classic() +\n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\n\n\n\n\nBayes factor is the ratio of the likelihood of one particular hypothesis to the likelihood of another. It can be interpreted as a measure of the strength of evidence in favor of one theory among two competing theories.\n\n\n\nTwo-Sample Test of difference in means: ggbetweenstats()\n\nggbetweenstats(\n  data = exam_data,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE) +\n  theme_classic() +\n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\n\n\n\n\n\nOne-way ANOVA Test of difference in means: ggbetweenstats()\n\nggbetweenstats(\n  data = exam_data,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE) +\n  theme_classic() +\n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\n\n\n\n\n\nCorrelation Test: ggscatterstats()\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE) +\n  theme_classic() +\n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\n\n\n\n\n\nAssociation Test (Dependence): ggbarstats()\n\nexam1 <- exam_data %>% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER) +\n  theme_classic() +\n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "Links to Tableau Visualisations:\nSuperstore Orders\nExam Data"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-Class Exercise 4",
    "section": "",
    "text": "Loading and Installing R Packages\n\npacman::p_load(tidyverse, rstatix, gt, patchwork, webshot2)\n\n\n\nImporting Data\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\n\nVisualising the Normal Distribution\n\nThe plotThe Code\n\n\nQ-Q Plot: quantile-quantile plot determines whether\n\n\n\n\n\n\n\n\n# QQ plots use 'sample' argument instead of 'x' or 'y'\nggplot(exam_data,\n       aes(sample = ENGLISH)) +\n  stat_qq() +\n  stat_qq_line()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can see that the points on the plot deviate significantly from the straight diagonal line. This is a clear indication that the set of data is not normally distributed.\n\n\n\n\nPatchwork\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\nqq <- ggplot(exam_data,\n        aes(sample = ENGLISH)) +\n        stat_qq() +\n        stat_qq_line()\n\nsw_t <- exam_data %>%\n          shapiro_test(ENGLISH) %>%\n          gt() #< save as gt table (static)\n\n#create a temp folder to save tibble as an image\ntmp <- tempfile(fileext = \".png\")\ngtsave(sw_t, tmp)\n\n# Assign table image to a variable name to call into patchwork\ntable_png <- png::readPNG(tmp,\n                          native = TRUE)\n\nqq + table_png"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "haileycsy",
    "section": "",
    "text": "ISSS608_VAA <- c( \"Data\", \"R\", \"Tableau\", \"Coffee\", \"Tears\", \"StackOverflow\", \"ChatGPT\" )"
  },
  {
    "objectID": "Projects/Superstore_Orders.html",
    "href": "Projects/Superstore_Orders.html",
    "title": "Market Basket Analysis",
    "section": "",
    "text": "Frequent Pattern Mining: Market Basket Analysis\nThis project aims to discover links between items frequently purchased together through analysing transaction data.\nLink to reference article"
  },
  {
    "objectID": "Projects/Superstore_Orders.html#r-packages",
    "href": "Projects/Superstore_Orders.html#r-packages",
    "title": "Market Basket Analysis",
    "section": "1.1: R Packages",
    "text": "1.1: R Packages\n\npacman::p_load(readxl, tidyverse, plyr, dplyr,\n               ggplot2, lubridate,\n               RcolorBrewer,\n               arules, arulesViz)"
  },
  {
    "objectID": "Projects/Superstore_Orders.html#data-loading-and-transformation",
    "href": "Projects/Superstore_Orders.html#data-loading-and-transformation",
    "title": "Market Basket Analysis",
    "section": "1.2: Data Loading and Transformation",
    "text": "1.2: Data Loading and Transformation\nThis Project uses Online Retail dataset from UCI Machine Learning Repository\nThe dataset contains the following attributes:\n\n\nInvoiceNo: Invoice number. Nominal, a 6-digit integral number uniquely assigned to each transaction. If this code starts with letter ‘c’, it indicates a cancellation.\n\nStockCode: Product (item) code. Nominal, a 5-digit integral number uniquely assigned to each distinct product.\n\nDescription: Product (item) name.\n\nQuantity: The quantities of each product (item) per transaction.\n\nInvoiceDate: Invoice Date and time. Numeric, the day and time when each transaction was generated.\n\nUnitPrice: Unit price. Numeric, Product price per unit in sterling.\n\nCustomerID: Customer number. Nominal, a 5-digit integral number uniquely assigned to each customer.\n\nCountry: Country name. Nominal, the name of the country where each customer resides.\n\n\n\norder_data <- read_excel(\"data/Online_Retail.xlsx\")\n\ncomplete.cases(data) returns a logical vector indicating which rows have no missing values. data[,] filters out the rows with missing values:\n\norder_data <- order_data[complete.cases(order_data), ]\nsummary(order_data)\n\n  InvoiceNo          StockCode         Description           Quantity        \n Length:406829      Length:406829      Length:406829      Min.   :-80995.00  \n Class :character   Class :character   Class :character   1st Qu.:     2.00  \n Mode  :character   Mode  :character   Mode  :character   Median :     5.00  \n                                                          Mean   :    12.06  \n                                                          3rd Qu.:    12.00  \n                                                          Max.   : 80995.00  \n  InvoiceDate                       UnitPrice          CustomerID   \n Min.   :2010-12-01 08:26:00.00   Min.   :    0.00   Min.   :12346  \n 1st Qu.:2011-04-06 15:02:00.00   1st Qu.:    1.25   1st Qu.:13953  \n Median :2011-07-31 11:48:00.00   Median :    1.95   Median :15152  \n Mean   :2011-07-10 16:30:57.88   Mean   :    3.46   Mean   :15288  \n 3rd Qu.:2011-10-20 13:06:00.00   3rd Qu.:    3.75   3rd Qu.:16791  \n Max.   :2011-12-09 12:50:00.00   Max.   :38970.00   Max.   :18287  \n   Country         \n Length:406829     \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n\n\n\nmutate() character data types to factor using as.factor()\nConvert InvoiceNo to Numeric\nStore InvoiceDate as date in new variable, ‘TransDate’\nExtract time from InvoiceDate and store in another variable, ‘TransTime’\n\n\norder_data %>%\n  mutate(across(where(is.character), as.factor()))\n\n# A tibble: 406,829 × 8\n   InvoiceNo StockCode Description        Quantity InvoiceDate         UnitPrice\n   <chr>     <chr>     <chr>                 <dbl> <dttm>                  <dbl>\n 1 536365    85123A    WHITE HANGING HEA…        6 2010-12-01 08:26:00      2.55\n 2 536365    71053     WHITE METAL LANTE…        6 2010-12-01 08:26:00      3.39\n 3 536365    84406B    CREAM CUPID HEART…        8 2010-12-01 08:26:00      2.75\n 4 536365    84029G    KNITTED UNION FLA…        6 2010-12-01 08:26:00      3.39\n 5 536365    84029E    RED WOOLLY HOTTIE…        6 2010-12-01 08:26:00      3.39\n 6 536365    22752     SET 7 BABUSHKA NE…        2 2010-12-01 08:26:00      7.65\n 7 536365    21730     GLASS STAR FROSTE…        6 2010-12-01 08:26:00      4.25\n 8 536366    22633     HAND WARMER UNION…        6 2010-12-01 08:28:00      1.85\n 9 536366    22632     HAND WARMER RED P…        6 2010-12-01 08:28:00      1.85\n10 536367    84879     ASSORTED COLOUR B…       32 2010-12-01 08:34:00      1.69\n# ℹ 406,819 more rows\n# ℹ 2 more variables: CustomerID <dbl>, Country <chr>\n\norder_data$InvoiceNo <- as.numeric(order_data$InvoiceNo)\n\nWarning: NAs introduced by coercion\n\norder_data$TransDate <- as.Date(order_data$InvoiceDate)\n\norder_data$TransTime <- format(order_data$InvoiceDate, format = \"%H:%M:%S\")\n\nglimpse(order_data)\n\nRows: 406,829\nColumns: 10\n$ InvoiceNo   <dbl> 536365, 536365, 536365, 536365, 536365, 536365, 536365, 53…\n$ StockCode   <chr> \"85123A\", \"71053\", \"84406B\", \"84029G\", \"84029E\", \"22752\", …\n$ Description <chr> \"WHITE HANGING HEART T-LIGHT HOLDER\", \"WHITE METAL LANTERN…\n$ Quantity    <dbl> 6, 6, 8, 6, 6, 2, 6, 6, 6, 32, 6, 6, 8, 6, 6, 3, 2, 3, 3, …\n$ InvoiceDate <dttm> 2010-12-01 08:26:00, 2010-12-01 08:26:00, 2010-12-01 08:2…\n$ UnitPrice   <dbl> 2.55, 3.39, 2.75, 3.39, 3.39, 7.65, 4.25, 1.85, 1.85, 1.69…\n$ CustomerID  <dbl> 17850, 17850, 17850, 17850, 17850, 17850, 17850, 17850, 17…\n$ Country     <chr> \"United Kingdom\", \"United Kingdom\", \"United Kingdom\", \"Uni…\n$ TransDate   <date> 2010-12-01, 2010-12-01, 2010-12-01, 2010-12-01, 2010-12-0…\n$ TransTime   <chr> \"08:26:00\", \"08:26:00\", \"08:26:00\", \"08:26:00\", \"08:26:00\"…"
  },
  {
    "objectID": "Projects/Superstore_Orders.html#creating-a-basket-and-storing-it-as-transactiondata",
    "href": "Projects/Superstore_Orders.html#creating-a-basket-and-storing-it-as-transactiondata",
    "title": "Market Basket Analysis",
    "section": "1.3: Creating a basket and storing it as transactionData",
    "text": "1.3: Creating a basket and storing it as transactionData\n\ntransactionData <- ddply(order_data, c(\"InvoiceNo\",\"TransDate\"),\n                         function(df1)paste(df1$Description,\n                                            collapse = \",\"))\ntransactionData$InvoiceNo <- NULL\ntransactionData$Date <- NULL\n\ncolnames(transactionData) <- c(\"items\")\n\nwrite.csv(transactionData,\"data/market_basket_transactions.csv\", quote = FALSE, row.names = FALSE)\n\nRead transaction data:\n\ntrans <- read.transactions('data/market_basket_transactions.csv', \n                           format = 'basket', \n                           quote = \"\",\n                           sep=',')\n\nWarning in asMethod(object): removing duplicated items in transactions\n\ndim(trans)\n\n[1] 18839  4231\n\n\ndim(data) shows that there are 18,839 transactions (rows) and 4231 items (columns).\n\nsummary(trans)\n\ntransactions as itemMatrix in sparse format with\n 18839 rows (elements/itemsets/transactions) and\n 4231 columns (items) and a density of 0.005236714 \n\nmost frequent items:\nWHITE HANGING HEART T-LIGHT HOLDER           REGENCY CAKESTAND 3 TIER \n                              2011                               1830 \n           JUMBO BAG RED RETROSPOT                      PARTY BUNTING \n                              1635                               1397 \n     ASSORTED COLOUR BIRD ORNAMENT                            (Other) \n                              1385                             409149 \n\nelement (itemset/transaction) length distribution:\nsizes\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1 1401  734  644  635  667  611  576  589  621  524  551  502  476  521  548 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n 547  469  440  481  424  414  349  337  312  245  267  251  221  265  232  204 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n 173  170  173  149  125  139  110  129  123  115  110   98   92   87   90   82 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n  79   79   80   68   59   65   68   63   49   55   49   47   37   45   35   33 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n  35   32   40   39   38   23   29   32   14   27   32   25   21   19   17   10 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n  17   18   19   16   20   16   11   15   13    9    8   11   15   12   10    5 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   8   10   11    3    7   13    4    9    7    2    3    3    6    4    3    3 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   2    5    4    4    7    5    5    5    5    4    8    5    1    4    5    3 \n 129  131  133  134  135  136  137  138  139  140  141  142  143  144  145  147 \n   4    2    1    4    1    1    3    3    1    1    2    2    2    2    1    5 \n 149  150  151  152  153  156  158  159  160  165  166  168  171  172  178  179 \n   1    1    1    2    1    2    1    1    1    1    1    1    1    2    3    2 \n 181  182  186  188  194  195  197  205  206  209  212  221  231  251  260  264 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 274  284  340  352  357  367  380  388  423  441  443  530  534  548 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   1.00    8.00   16.00   22.16   28.00  548.00 \n\nincludes extended item information - examples:\n                      labels\n1                   1 HANGER\n2     10 COLOUR SPACEBOY PEN\n3 12 COLOURED PARTY BALLOONS\n\n\nsummary() data reveals that the 2-itemset size is 1401, the largest amongst all k-itemsets."
  },
  {
    "objectID": "Projects/Superstore_Orders.html#select-only-association-rules-with-confidence-greater-than-0.6-or-60",
    "href": "Projects/Superstore_Orders.html#select-only-association-rules-with-confidence-greater-than-0.6-or-60",
    "title": "Market Basket Analysis",
    "section": "4.1: Select only association rules with confidence greater than 0.6 or 60%",
    "text": "4.1: Select only association rules with confidence greater than 0.6 or 60%\n\nsubRules<-association_rules[quality(association_rules)$confidence > 0.6]\n\nsummary(subRules)\n\nset of 274262 rules\n\nrule length distribution (lhs + rhs):sizes\n    2     3     4     5     6     7     8     9    10 \n  128  8208 24106 57299 85063 66943 27329  4826   360 \n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  2.000   5.000   6.000   6.025   7.000  10.000 \n\nsummary of quality measures:\n    support           confidence        coverage             lift        \n Min.   :0.001009   Min.   :0.8000   Min.   :0.001009   Min.   :  7.494  \n 1st Qu.:0.001062   1st Qu.:0.8333   1st Qu.:0.001168   1st Qu.: 16.174  \n Median :0.001115   Median :0.8750   Median :0.001327   Median : 19.893  \n Mean   :0.001288   Mean   :0.8856   Mean   :0.001461   Mean   : 32.820  \n 3rd Qu.:0.001327   3rd Qu.:0.9231   3rd Qu.:0.001539   3rd Qu.: 29.643  \n Max.   :0.025054   Max.   :1.0000   Max.   :0.030893   Max.   :897.095  \n     count       \n Min.   : 19.00  \n 1st Qu.: 20.00  \n Median : 21.00  \n Mean   : 24.26  \n 3rd Qu.: 25.00  \n Max.   :472.00  \n\nmining info:\n  data ntransactions support confidence\n trans         18839   0.001        0.8\n                                                                           call\n apriori(data = trans, parameter = list(supp = 0.001, conf = 0.8, maxlen = 10))\n\n\nInteractive Scatterplot:\n\nplot(subRules, \n     method = \"scatterplot\", \n     measure = c(\"support\", \"confidence\"),\n     shading = \"lift\",\n     max = 100,\n     jitter = 0,\n     engine = \"plotly\")\n\nWarning: Too many rules supplied. Only plotting the best 100 using 'lift'\n(change control parameter max if needed)."
  },
  {
    "objectID": "Projects/Superstore_Orders.html#generating-rules-for-specific-items",
    "href": "Projects/Superstore_Orders.html#generating-rules-for-specific-items",
    "title": "Market Basket Analysis",
    "section": "4.2 Generating rules for specific items",
    "text": "4.2 Generating rules for specific items\nSuppose we would like to find out more about rules regarding most frequent item, “WHITE HANGING HEART T-LIGHT HOLDER”:\n\nrules_frequent_item <- apriori (data=trans, \n                                parameter=list (supp=0.001,conf = 0.6), \n                                appearance = list (default=\"lhs\",rhs=\"WHITE HANGING HEART T-LIGHT HOLDER\"), \n                                control = list (verbose=F))\n\nrules_frequent_item <-sort(rules_frequent_item,\n                               decreasing = TRUE,\n                               by = \"confidence\")\n\n# remove redundant rules that are subsets of larger rules\nsubsetRules <- which(colSums(is.subset(rules_frequent_item, rules_frequent_item)) > 1) \n#length(subsetRules) #> 584\nrules_frequent_item <- rules_frequent_item[-subsetRules]\n\ninspect(sort(rules_frequent_item[1:20], by = \"lift\"))\n\n     lhs                                       rhs                                      support confidence    coverage     lift count\n[1]  {KNITTED UNION FLAG HOT WATER BOTTLE,                                                                                           \n      SET 7 BABUSHKA NESTING BOXES}         => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001220872  1.0000000 0.001220872 9.367976    23\n[2]  {GLASS STAR FROSTED T-LIGHT HOLDER,                                                                                             \n      SET 7 BABUSHKA NESTING BOXES}         => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001220872  0.9583333 0.001273953 8.977644    23\n[3]  {GLASS STAR FROSTED T-LIGHT HOLDER,                                                                                             \n      WHITE METAL LANTERN}                  => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001114709  0.9545455 0.001167790 8.942159    21\n[4]  {GLASS STAR FROSTED T-LIGHT HOLDER,                                                                                             \n      KNITTED UNION FLAG HOT WATER BOTTLE}  => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001114709  0.9545455 0.001167790 8.942159    21\n[5]  {GLASS STAR FROSTED T-LIGHT HOLDER,                                                                                             \n      RED WOOLLY HOTTIE WHITE HEART.}       => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001061627  0.9090909 0.001167790 8.516342    20\n[6]  {SET 7 BABUSHKA NESTING BOXES,                                                                                                  \n      WHITE METAL LANTERN}                  => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001061627  0.9090909 0.001167790 8.516342    20\n[7]  {KNITTED UNION FLAG HOT WATER BOTTLE,                                                                                           \n      WHITE METAL LANTERN}                  => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001008546  0.9047619 0.001114709 8.475788    19\n[8]  {GLASS STAR FROSTED T-LIGHT HOLDER,                                                                                             \n      WOOD 2 DRAWER CABINET WHITE FINISH}   => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001061627  0.8333333 0.001273953 7.806647    20\n[9]  {CREAM CUPID HEARTS COAT HANGER,                                                                                                \n      KNITTED UNION FLAG HOT WATER BOTTLE}  => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001008546  0.8260870 0.001220872 7.738763    19\n[10] {PACK OF 60 DINOSAUR CAKE CASES,                                                                                                \n      POPCORN HOLDER,                                                                                                                \n      SET OF 4 PANTRY JELLY MOULDS}         => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001008546  0.8260870 0.001220872 7.738763    19\n[11] {CREAM CUPID HEARTS COAT HANGER,                                                                                                \n      SET 7 BABUSHKA NESTING BOXES}         => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001061627  0.8000000 0.001327034 7.494381    20\n[12] {SET 7 BABUSHKA NESTING BOXES,                                                                                                  \n      WOOD 2 DRAWER CABINET WHITE FINISH}   => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001061627  0.8000000 0.001327034 7.494381    20\n[13] {HEART OF WICKER LARGE,                                                                                                         \n      HOME BUILDING BLOCK WORD,                                                                                                      \n      NATURAL SLATE HEART CHALKBOARD}       => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001061627  0.8000000 0.001327034 7.494381    20\n[14] {VINTAGE BILLBOARD LOVE/HATE MUG,                                                                                               \n      WOOD 2 DRAWER CABINET WHITE FINISH}   => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001008546  0.7916667 0.001273953 7.416314    19\n[15] {RED WOOLLY HOTTIE WHITE HEART.,                                                                                                \n      WHITE METAL LANTERN}                  => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001008546  0.7916667 0.001273953 7.416314    19\n[16] {SAVE THE PLANET MUG,                                                                                                           \n      SET 7 BABUSHKA NESTING BOXES}         => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001008546  0.7916667 0.001273953 7.416314    19\n[17] {CREAM CUPID HEARTS COAT HANGER,                                                                                                \n      WHITE METAL LANTERN}                  => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001167790  0.7857143 0.001486278 7.360553    22\n[18] {SET 7 BABUSHKA NESTING BOXES,                                                                                                  \n      WOODEN PICTURE FRAME WHITE FINISH}    => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001167790  0.7857143 0.001486278 7.360553    22\n[19] {RED WOOLLY HOTTIE WHITE HEART.,                                                                                                \n      SET 7 BABUSHKA NESTING BOXES}         => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001327034  0.7812500 0.001698604 7.318731    25\n[20] {GLASS STAR FROSTED T-LIGHT HOLDER,                                                                                             \n      WOODEN FRAME ANTIQUE WHITE}           => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001061627  0.7692308 0.001380116 7.206135    20\n\n\nPlot top 10 rules for item by confidence:\n\nrules_frequent_item <-sort(rules_frequent_item,\n                          decreasing = TRUE,\n                          by = \"confidence\")\n\ntop10_rules <- rules_frequent_item[1:10]\n\nplot(top10_rules,\n     method = \"graph\",\n     engine = \"htmlwidget\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Exploring Population Statistics of the City of Engagement\nDesign a user-friendly and interactive solution that helps city managers and planners to explore complex population data in an engaging way and reveal hidden patterns. This project aims to reveal the demographic and financial characteristics of the City of Engagement, using appropriate static and interactive statistical graphics methods in R."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#installing-r-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#installing-r-packages",
    "title": "Take-home Exercise 1",
    "section": "1.1: Installing R packages",
    "text": "1.1: Installing R packages\npacman::p_load() function from the pacman package is used in the following code chunk to install and call the libraries of multiple R packages:\n\npacman::p_load(tidyverse, ggstatsplot, ggridges, plotly, patchwork, scales,\n               ggiraph, gganimate, gifski, ggpubr, ggdist, qqplotr, gt,\n               Hmisc, vcd, knitr, kableExtra, DT, rstatix,\n               urbnthemes)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-sets",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-sets",
    "title": "Take-home Exercise 1",
    "section": "1.2: Data Sets",
    "text": "1.2: Data Sets\nTwo datasets are provided for the task: Participants.csv and FinancialJournal.csv.\nThese are uploaded as demo_data and financial_data respectively."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary-statistics-of-demo_data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary-statistics-of-demo_data",
    "title": "Take-home Exercise 1",
    "section": "1.2.1: Summary Statistics of demo_data",
    "text": "1.2.1: Summary Statistics of demo_data\n\n\ncode block\ndemo_data <- read_csv(\"data/Participants.csv\")\n\n\n\nFirst 10 RowsDataset StructureSummary Statistics\n\n\nDisplaying first 10 rows using head():\n\nhead(demo_data,10) %>%\n  kbl() %>%\n  kable_material()\n\n\n\n \n  \n    participantId \n    householdSize \n    haveKids \n    age \n    educationLevel \n    interestGroup \n    joviality \n  \n \n\n  \n    0 \n    3 \n    TRUE \n    36 \n    HighSchoolOrCollege \n    H \n    0.0016267 \n  \n  \n    1 \n    3 \n    TRUE \n    25 \n    HighSchoolOrCollege \n    B \n    0.3280865 \n  \n  \n    2 \n    3 \n    TRUE \n    35 \n    HighSchoolOrCollege \n    A \n    0.3934696 \n  \n  \n    3 \n    3 \n    TRUE \n    21 \n    HighSchoolOrCollege \n    I \n    0.1380634 \n  \n  \n    4 \n    3 \n    TRUE \n    43 \n    Bachelors \n    H \n    0.8573967 \n  \n  \n    5 \n    3 \n    TRUE \n    32 \n    HighSchoolOrCollege \n    D \n    0.7729578 \n  \n  \n    6 \n    3 \n    TRUE \n    26 \n    HighSchoolOrCollege \n    I \n    0.8339807 \n  \n  \n    7 \n    3 \n    TRUE \n    27 \n    Bachelors \n    A \n    0.9581894 \n  \n  \n    8 \n    3 \n    TRUE \n    20 \n    Bachelors \n    G \n    0.6975548 \n  \n  \n    9 \n    3 \n    TRUE \n    35 \n    Bachelors \n    D \n    0.4671314 \n  \n\n\n\n\n\n\n\nChecking the structure of demo_data using str():\n\nstr(demo_data)\n\nspc_tbl_ [1,011 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ participantId : num [1:1011] 0 1 2 3 4 5 6 7 8 9 ...\n $ householdSize : num [1:1011] 3 3 3 3 3 3 3 3 3 3 ...\n $ haveKids      : logi [1:1011] TRUE TRUE TRUE TRUE TRUE TRUE ...\n $ age           : num [1:1011] 36 25 35 21 43 32 26 27 20 35 ...\n $ educationLevel: chr [1:1011] \"HighSchoolOrCollege\" \"HighSchoolOrCollege\" \"HighSchoolOrCollege\" \"HighSchoolOrCollege\" ...\n $ interestGroup : chr [1:1011] \"H\" \"B\" \"A\" \"I\" ...\n $ joviality     : num [1:1011] 0.00163 0.32809 0.39347 0.13806 0.8574 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   participantId = col_double(),\n  ..   householdSize = col_double(),\n  ..   haveKids = col_logical(),\n  ..   age = col_double(),\n  ..   educationLevel = col_character(),\n  ..   interestGroup = col_character(),\n  ..   joviality = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\nThere are a total of 1011 rows and 7 variables. The output reveals that variables participantId and householdSize have been read as numeric, continuous data types, but should be analysed as nominal data instead.\n\n\nInspecting summary statistics of the dataset using describe() from Hmisc pacakage:\n\nHmisc::describe(demo_data)\n\ndemo_data \n\n 7  Variables      1011  Observations\n--------------------------------------------------------------------------------\nparticipantId \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    1011        0     1011        1      505    337.3     50.5    101.0 \n     .25      .50      .75      .90      .95 \n   252.5    505.0    757.5    909.0    959.5 \n\nlowest :    0    1    2    3    4, highest: 1006 1007 1008 1009 1010\n--------------------------------------------------------------------------------\nhouseholdSize \n       n  missing distinct     Info     Mean      Gmd \n    1011        0        3    0.886    1.964   0.8635 \n                            \nValue          1     2     3\nFrequency    337   373   301\nProportion 0.333 0.369 0.298\n--------------------------------------------------------------------------------\nhaveKids \n       n  missing distinct \n    1011        0        2 \n                      \nValue      FALSE  TRUE\nFrequency    710   301\nProportion 0.702 0.298\n--------------------------------------------------------------------------------\nage \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    1011        0       43    0.999    39.07     14.3       20       22 \n     .25      .50      .75      .90      .95 \n      29       39       50       56       58 \n\nlowest : 18 19 20 21 22, highest: 56 57 58 59 60\n--------------------------------------------------------------------------------\neducationLevel \n       n  missing distinct \n    1011        0        4 \n                                                                      \nValue                Bachelors            Graduate HighSchoolOrCollege\nFrequency                  232                 170                 525\nProportion               0.229               0.168               0.519\n                              \nValue                      Low\nFrequency                   84\nProportion               0.083\n--------------------------------------------------------------------------------\ninterestGroup \n       n  missing distinct \n    1011        0       10 \n\nlowest : A B C D E, highest: F G H I J\n                                                                      \nValue          A     B     C     D     E     F     G     H     I     J\nFrequency    102    91   102    96    83   106   108   111    96   116\nProportion 0.101 0.090 0.101 0.095 0.082 0.105 0.107 0.110 0.095 0.115\n--------------------------------------------------------------------------------\njoviality \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    1011        0     1011        1   0.4938   0.3364  0.05642  0.10871 \n     .25      .50      .75      .90      .95 \n 0.24007  0.47754  0.74682  0.90645  0.96024 \n\nlowest : 0.000204000 0.000265000 0.000985000 0.001365799 0.001626703\nhighest: 0.992601749 0.997604884 0.997670843 0.998644049 0.999233967\n--------------------------------------------------------------------------------\n\n\nFrom the output, there are zero missing values across all columns in demo_data.\n\n\n\n\nInitial Insights from Summary Statistics\n\nThere seems to be a fairly even distribution of participants across joviality, householdSize, age and interestGroup. There are more participants who do not have children, and approximately half of them have attained the highest education at high school or college level. The distributions and correlations of these variables will be investigated further in subsequent sections, after appropriate data wrangling techniques have been applied.\n\n\n\nChanging Data Types:\n\nparticipantId is classified as <dbl>, numerical continuous data, instead of nominal. This is cast as <chr> class using as.character()\neducationLevel is classified as <chr> categorical data, and consists of four levels, with inherent hierarchy. This variable is cast as factor type on an ordinal scale using the ordered() function\nhouseholdSize and interestGroup are classified as <dbl> and <chr> respectively, but are categorical in nature with different levels. These variables are cast as factors using as.factor()\n\n\n\ncode block\ndemo_data_new <- demo_data %>%\n  # Changing participantId to character \n  mutate(participantId = as.character(demo_data$participantId),\n\n  # Updating educationLevel with ordinal scale\n  educationLevel = ordered(demo_data$educationLevel, levels = c(\"Graduate\", \"Bachelors\", \"HighSchoolOrCollege\", \"Low\")),\n\n  # Casting householdSize and interestGroup as factors\n  householdSize = as.factor(demo_data$householdSize),\n  interestGroup = as.factor(demo_data$interestGroup)\n  )\n\n\n\n\ndemo_data_new:\n\n\ncode block\nhead(demo_data_new, 10) %>%\n  kbl() %>%\n  kable_styling(full_width = F, bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n \n  \n    participantId \n    householdSize \n    haveKids \n    age \n    educationLevel \n    interestGroup \n    joviality \n  \n \n\n  \n    0 \n    3 \n    TRUE \n    36 \n    HighSchoolOrCollege \n    H \n    0.0016267 \n  \n  \n    1 \n    3 \n    TRUE \n    25 \n    HighSchoolOrCollege \n    B \n    0.3280865 \n  \n  \n    2 \n    3 \n    TRUE \n    35 \n    HighSchoolOrCollege \n    A \n    0.3934696 \n  \n  \n    3 \n    3 \n    TRUE \n    21 \n    HighSchoolOrCollege \n    I \n    0.1380634 \n  \n  \n    4 \n    3 \n    TRUE \n    43 \n    Bachelors \n    H \n    0.8573967 \n  \n  \n    5 \n    3 \n    TRUE \n    32 \n    HighSchoolOrCollege \n    D \n    0.7729578 \n  \n  \n    6 \n    3 \n    TRUE \n    26 \n    HighSchoolOrCollege \n    I \n    0.8339807 \n  \n  \n    7 \n    3 \n    TRUE \n    27 \n    Bachelors \n    A \n    0.9581894 \n  \n  \n    8 \n    3 \n    TRUE \n    20 \n    Bachelors \n    G \n    0.6975548 \n  \n  \n    9 \n    3 \n    TRUE \n    35 \n    Bachelors \n    D \n    0.4671314"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary-statistics-of-financial_data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary-statistics-of-financial_data",
    "title": "Take-home Exercise 1",
    "section": "1.2.2: Summary Statistics of financial_data",
    "text": "1.2.2: Summary Statistics of financial_data\n\n\ncode block\nfinancial_data <- read_csv(\"data/FinancialJournal.csv\")\n\n\n\nAt a GlimpseSummary Statistics\n\n\n\nglimpse(financial_data)\n\nRows: 1,513,636\nColumns: 4\n$ participantId <dbl> 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6,…\n$ timestamp     <dttm> 2022-03-01, 2022-03-01, 2022-03-01, 2022-03-01, 2022-03…\n$ category      <chr> \"Wage\", \"Shelter\", \"Education\", \"Wage\", \"Shelter\", \"Educ…\n$ amount        <dbl> 2472.50756, -554.98862, -38.00538, 2046.56221, -554.9886…\n\n\nThe dataset captures specific financial transactions by participants, with a single transaction recorded in each row. Participants may have multiple transactions over time.\n\n\n\nHmisc::describe(financial_data)\n\nfinancial_data \n\n 4  Variables      1513636  Observations\n--------------------------------------------------------------------------------\nparticipantId \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n 1513636        0     1011        1    480.9    341.2       43       86 \n     .25      .50      .75      .90      .95 \n     222      464      726      918      967 \n\nlowest :    0    1    2    3    4, highest: 1006 1007 1008 1009 1010\n--------------------------------------------------------------------------------\ntimestamp \n                  n             missing            distinct                Info \n            1513636                   0               87366                   1 \n               Mean                 Gmd                 .05                 .10 \n2022-08-26 05:00:48            10684501 2022-03-14 14:00:00 2022-03-31 07:20:00 \n                .25                 .50                 .75                 .90 \n2022-05-24 13:25:00 2022-08-25 15:00:00 2022-11-27 07:25:00 2023-01-22 10:20:00 \n                .95 \n2023-02-09 20:10:00 \n\nlowest : 2022-03-01 00:00:00 2022-03-01 04:50:00 2022-03-01 05:30:00 2022-03-01 05:40:00 2022-03-01 05:45:00\nhighest: 2023-02-28 23:35:00 2023-02-28 23:40:00 2023-02-28 23:45:00 2023-02-28 23:50:00 2023-02-28 23:55:00\n--------------------------------------------------------------------------------\ncategory \n       n  missing distinct \n 1513636        0        6 \n\nlowest : Education      Food           Recreation     RentAdjustment Shelter       \nhighest: Food           Recreation     RentAdjustment Shelter        Wage          \n                                                                      \nValue           Education           Food     Recreation RentAdjustment\nFrequency            3319         790051         296013            131\nProportion          0.002          0.522          0.196          0.000\n                                        \nValue             Shelter           Wage\nFrequency           11463         412659\nProportion          0.008          0.273\n--------------------------------------------------------------------------------\namount \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n 1513636        0     6690    0.981    20.05    66.15  -21.050  -15.182 \n     .25      .50      .75      .90      .95 \n  -5.594   -4.000   21.598  107.467  159.561 \n\nlowest : -1562.726 -1556.356 -1499.254 -1475.672 -1458.686\nhighest:  4059.861  4069.449  4078.119  4085.387  4096.526\n--------------------------------------------------------------------------------\n\n\nFrom the output, there are zero missing values across all columns in financial_data. Summary statistics revealed that a total of 1,513,636 financial transactions were captured over a year from March 2022 to February 2023.\n\n\n\n\nInitial Insights from Summary Statistics\nThere seems to be a skewed distribution of transactions, with a higher proportion (0.522) falling under category: Food followed by category: Wage. Transaction amount has a wide range due to negative and positive values, and a skewed distribution due to large difference between 95th percentile value (159.561) and highest value (4096.526). The distributions and correlations of these variables will be investigated further in subsequent sections, after appropriate data wrangling and transformation techniques have been applied.\n\n\n\nData Quality Issues:\n\nparticipantId is classified as <dbl>, numerical continuous data, instead of nominal. This is cast as <chr> class using as.character()\ncategory is classified as <chr>, but is categorical in nature with six different levels. These is cast as factor type using as.factor()\ntimestamp contains both Date and Time, which is not suitable for analysis. Year-Month is extracted and saved into a separate variable, transDate.\namount is reflected as a numeric value with 3 decimal places. This is rounded to 2 d.p. to reflect standard currency structure while maintaing accuracy.\n\n\n\ncode block\nfinancial_data_new <- financial_data %>%\n  # Changing participantId to character \n  mutate(participantID = as.character(financial_data$participantId),\n\n  # Casting category as factor\n  category = as.factor(financial_data$category),\n\n  # Extracting Year-Month from timestamp\n  transDate = as.character(format(as.Date(financial_data$timestamp), \"%Y-%m\")),\n  \n  # Rounding amount to 2 decimal places\n  amount = round(amount, digits = 2)\n  ) %>%\n  \n  # remove timestamp column\n  select(-timestamp) %>%\n  \n  # Sort by Participant ID\n  arrange(participantId)\n\n\nfinancial_data_new:\n\n\ncode block\nhead(financial_data_new, 10) %>%\n  kbl() %>%\n  kable_styling(full_width = F, bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n \n  \n    participantId \n    category \n    amount \n    participantID \n    transDate \n  \n \n\n  \n    0 \n    Wage \n    2472.51 \n    0 \n    2022-03 \n  \n  \n    0 \n    Shelter \n    -554.99 \n    0 \n    2022-03 \n  \n  \n    0 \n    Education \n    -38.01 \n    0 \n    2022-03 \n  \n  \n    0 \n    Shelter \n    -554.99 \n    0 \n    2022-03 \n  \n  \n    0 \n    Education \n    -38.01 \n    0 \n    2022-03 \n  \n  \n    0 \n    Wage \n    4.28 \n    0 \n    2022-03 \n  \n  \n    0 \n    Food \n    -4.17 \n    0 \n    2022-03 \n  \n  \n    0 \n    Wage \n    385.58 \n    0 \n    2022-03 \n  \n  \n    0 \n    Food \n    -4.17 \n    0 \n    2022-03 \n  \n  \n    0 \n    Wage \n    21.42 \n    0 \n    2022-03"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#banding-of-age-into-age-groups",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#banding-of-age-into-age-groups",
    "title": "Take-home Exercise 1",
    "section": "2.1: Banding of Age into Age Groups",
    "text": "2.1: Banding of Age into Age Groups\nThe range of participants’ ages is rather wide, spanning from 18-60 years old:\n\n\ncode block\noptions(width = 100)\ndescribe(demo_data_new$age)\n\n\ndemo_data_new$age \n       n  missing distinct     Info     Mean      Gmd      .05      .10      .25      .50      .75 \n    1011        0       43    0.999    39.07     14.3       20       22       29       39       50 \n     .90      .95 \n      56       58 \n\nlowest : 18 19 20 21 22, highest: 56 57 58 59 60\n\n\n\nThese may be grouped together by percentile, and analysed as age groups instead to give a better overview of different demographics. Each band is approximately grouped into 10-year age ranges:\n\n25th Percentile: 18-29yo\n25-50th Percentile: 30-39yo\n50-75th Percentile: 40-50yo\n75th Percentile: 51-60yo\n\n\n\n\ncode block\n# Grouping Age into Age Groups\ndemo_data_new$ageGroup <- as.factor(cut(demo_data_new$age,\n                                        breaks = c(0,29,39,50,60),\n                                        labels = c(\"18-29\", \"30-39\", \"40-50\", \"51-60\")))\n\n# Setting default theme for all plots\nset_urbn_defaults(style = \"print\")\n\n# Barchart of ageGroup\nggplot(demo_data_new, aes(x = ageGroup)) +\n  geom_bar() +\n  labs(title = \"Participants are evenly distributed across Age Groups\",\n       x = NULL,\n       y = NULL) +\n  geom_text(stat = \"count\",\n            aes(label = after_stat(count)),\n            vjust = -1) +\n  theme(text = element_text(size = 12),\n        plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#computing-new-variables-based-on-financial-transactions",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#computing-new-variables-based-on-financial-transactions",
    "title": "Take-home Exercise 1",
    "section": "2.2: Computing New Variables based on financial transactions",
    "text": "2.2: Computing New Variables based on financial transactions\nfinancial_data_new lists out individual transactions by participant, and records both cash inflows and outflows. A boxplot is used to visualise the range of values by category:\n\n\ncode block\nggplot(financial_data_new, aes(x = amount,\n                               y = category)) +\n  stat_boxplot(geom = \"errorbar\", width = 0.2) +\n  geom_boxplot() +\n  labs(title = \"Transaction Amount Range by Category\",\n       x = NULL,\n       y = NULL) +\n  geom_vline(aes(xintercept = 0),\n             colour=\"#f53b5d\", linewidth = 0.5, linetype = \"dashed\") +\n  theme(axis.ticks.y = element_blank(),\n        plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\n\nInsights from Boxplot\n\nTransactions are either outflows (-ve value) or inflows (+ve value)\nWage, Shelter and RentAdjustment have a larger range of values compared to Recreation, Food and Education\nWage seems to be made up of ‘clusters’ of points, with a gap in between higher wage groups and lower wage groups\n\n\n\n\nNew aggregate variables are computed based on this for further analysis:\n\nnumTrans: Total Number of transactions per participant\nnetAmount: Net Total amount ($) of transactions per participant = (Inflow - Outflow)\nexpenseRatio: % of inflow that is spent (outflow) per participant\nout_pctEdu, out_pctFood, out_pctRec, out_pctShelter: % contribution to cash outflow by category\nin_pctWage, in_pctRentAdj: % contribution to cash inflow by category\n\n\n\ncode block\n# Create new dataframe with transformed variables\nfinancial_agg <- financial_data_new %>%\n                  group_by(participantId) %>% \n                  summarise(numTrans = n(), #< Count number of rows per participantId\n                            netAmount = sum(amount), #< Sum net total amount per participantId\n                            annualWage = sum(amount[category == \"Wage\"]), #< Sum total income per participantId\n                            \n                            totInflow = sum(amount[category == \"Wage\"]) + \n                                        sum(amount[category == \"RentAdjustment\"]), #< Compute inflow value\n                            totOutflow = sum(abs(amount[category == \"Education\"])) + \n                                         sum(abs(amount[category == \"Food\"])) +\n                                         sum(abs(amount[category == \"Recreation\"])) +\n                                         sum(abs(amount[category== \"Shelter\"])), #< Compute outflow value\n                            expenseRatio = round((totOutflow/totInflow), 2), #< Compute outflow/inflow ratio\n                        #< % of each category contribution to inflow\n                            in_pctWage = round((sum(amount[category == \"Wage\"])/totInflow), 2), \n                            in_pctRentAdj = round((sum(amount[category == \"RentAdjustment\"])/totInflow), 2),\n                        #< % of each category contribution to outflow    \n                            out_pctEdu = round((sum(abs(amount[category == \"Education\"]))/totOutflow), 2), \n                            out_pctFood = round((sum(abs(amount[category == \"Food\"]))/totOutflow), 2),\n                            out_pctRec = round((sum(abs(amount[category == \"Recreation\"]))/totOutflow), 2),\n                            out_pctShelter = round((sum(abs(amount[category == \"Shelter\"]))/totOutflow), 2) \n                            ) %>%\n                  replace(is.na(.),0) %>%\n                  ungroup()\n\n\nfinancial_agg:\n\n\ncode block\nhead(financial_agg, 10) %>%\n  kbl() %>%\n  kable_styling(full_width = F, bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n \n  \n    participantId \n    numTrans \n    netAmount \n    annualWage \n    totInflow \n    totOutflow \n    expenseRatio \n    in_pctWage \n    in_pctRentAdj \n    out_pctEdu \n    out_pctFood \n    out_pctRec \n    out_pctShelter \n  \n \n\n  \n    0 \n    1617 \n    94582.68 \n    109816.59 \n    109816.59 \n    15233.91 \n    0.14 \n    1.00 \n    0.00 \n    0.03 \n    0.21 \n    0.29 \n    0.47 \n  \n  \n    1 \n    1560 \n    78860.22 \n    96374.57 \n    96374.57 \n    17514.35 \n    0.18 \n    1.00 \n    0.00 \n    0.03 \n    0.18 \n    0.38 \n    0.41 \n  \n  \n    2 \n    1543 \n    70068.50 \n    85108.65 \n    85108.65 \n    15040.15 \n    0.18 \n    1.00 \n    0.00 \n    0.01 \n    0.23 \n    0.28 \n    0.48 \n  \n  \n    3 \n    1644 \n    66460.86 \n    82269.18 \n    82269.18 \n    15808.32 \n    0.19 \n    1.00 \n    0.00 \n    0.03 \n    0.21 \n    0.30 \n    0.46 \n  \n  \n    4 \n    1730 \n    82711.54 \n    106056.88 \n    110866.16 \n    28154.62 \n    0.25 \n    0.96 \n    0.04 \n    0.01 \n    0.12 \n    0.22 \n    0.65 \n  \n  \n    5 \n    1426 \n    5958.28 \n    23208.92 \n    23208.92 \n    17250.64 \n    0.74 \n    1.00 \n    0.00 \n    0.01 \n    0.24 \n    0.30 \n    0.45 \n  \n  \n    6 \n    1606 \n    4296.42 \n    23407.25 \n    23407.25 \n    19110.83 \n    0.82 \n    1.00 \n    0.00 \n    0.01 \n    0.20 \n    0.40 \n    0.40 \n  \n  \n    7 \n    2235 \n    47704.46 \n    72877.03 \n    72877.03 \n    25172.57 \n    0.35 \n    1.00 \n    0.00 \n    0.01 \n    0.24 \n    0.23 \n    0.52 \n  \n  \n    8 \n    2197 \n    17774.97 \n    44544.72 \n    44544.72 \n    26769.75 \n    0.60 \n    1.00 \n    0.00 \n    0.01 \n    0.22 \n    0.20 \n    0.57 \n  \n  \n    9 \n    1639 \n    136200.02 \n    152575.41 \n    152575.41 \n    16375.39 \n    0.11 \n    1.00 \n    0.00 \n    0.07 \n    0.21 \n    0.28 \n    0.44"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#banding-of-participants-by-wage",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#banding-of-participants-by-wage",
    "title": "Take-home Exercise 1",
    "section": "2.3: Banding of participants by Wage",
    "text": "2.3: Banding of participants by Wage\nFrom the boxplot diagram in section 2.2, there is a large variation in wage range, and a segregation between lower and higher wage bands.\n\n\ncode block\ndescribe(financial_agg$annualWage)\n\n\nfinancial_agg$annualWage \n       n  missing distinct     Info     Mean      Gmd      .05      .10      .25      .50      .75 \n    1011        0     1011        1    45102    31841     2482     2704    28096    40995    57654 \n     .90      .95 \n   79184   101220 \n\nlowest :   2098.36   2209.24   2235.99   2241.90   2252.72\nhighest: 174221.60 176406.39 179331.79 211439.15 211734.65\n\n\n\nBased on the Mean and distribution of values across percentiles as shown above, participants are banded according to annual wage:\n\nBottom 10th Percentile: low\n11-50th Percentile: mid-low\n50-90th Percentile: mid-high\nTop 10th Percentile: high\n\n\n\n\n\ncode block\n# Grouping Annual wage into income Groups\nfinancial_agg$incomeGroup <- as.factor(cut(financial_agg$annualWage,\n                                        breaks = c(0,2704,40995,79184,Inf),\n                                        labels = c(\"low\", \"mid-low\", \"mid-high\", \"high\")))\n\n# Barchart of incomeGroup\nggplot(financial_agg, aes(x = incomeGroup)) +\n  geom_bar() +\n  labs(title = \"Higher concentration of Participants in Middle Income Groups\",\n       x = NULL,\n       y = NULL) +\n  geom_text(stat = \"count\",\n            aes(label = after_stat(count)),\n            vjust = -1) +\n  theme(text = element_text(size = 12),\n        plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#home-ownership",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#home-ownership",
    "title": "Take-home Exercise 1",
    "section": "2.4: Home Ownership",
    "text": "2.4: Home Ownership\nTo derive home ownership from financial transactions, we filter out participants with transactions in the ‘RentAdjustment’ category. This is based on the assumption that ‘RentAdjustment’ is additional rental income for the participant, who is the home owner. A new boolean variable, homeOwner, is created to reflect this.\n\n\ncode block\n# Create new column homeOwner with boolean values, true if participant gets income from rent adjustment\nfinancial_agg <- financial_agg %>%\n              mutate(homeOwner = if_else(in_pctRentAdj > 0, TRUE, FALSE))\n\n# Barchart of homeOwner\nggplot(financial_agg, aes(x = homeOwner)) +\n  geom_bar() +\n  labs(title = \"The City has a very small proportion of Home Owners\",\n       x = \"Home Owner?\",\n       y = NULL) +\n  geom_text(stat = \"count\",\n            aes(label = after_stat(count)),\n            vjust = -1) +\n  theme(text = element_text(size = 12),\n        plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#computing-annual-income-per-capita",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#computing-annual-income-per-capita",
    "title": "Take-home Exercise 1",
    "section": "2.5: Computing Annual Income per Capita",
    "text": "2.5: Computing Annual Income per Capita\nThe dataframes are first combined into df_combined:\n\n\ncode block\ndf_combined <- cbind(demo_data_new, financial_agg) %>%\n              select(unique(colnames(.)))\n\nDT::datatable(df_combined[c(\"participantId\", \"ageGroup\", \"incomeGroup\", \"householdSize\", \"educationLevel\", \"haveKids\", \"interestGroup\", \"joviality\", \"numTrans\", \"expenseRatio\", \"out_pctEdu\", \"out_pctFood\", \"out_pctRec\", \"out_pctShelter\")],\n              class =\"compact\")\n\n\n\n\n\n\n\n   \nThe formula used to determine Income per Capita for this study is as follows: \\[Income\\ per\\ Capita = \\frac{Total\\ Annual\\ Wage}{Household\\ Size}\\]\n\n\ncode block\n# Compute income per capita and save as new variable\ndf_combined <- df_combined %>%\n              mutate(incomePerCapita = round((annualWage/as.integer(householdSize)), 0))\n\n# Calculate min, max, 95th percentile and median values for annotations\nmin_incomePC <- round(min(df_combined$incomePerCapita),0)\nmax_incomePC <- round(max(df_combined$incomePerCapita),0)\nq_incomePC <- round(quantile(df_combined$incomePerCapita, probs = .95),0)\nmedian_incomePC <- round(median(df_combined$incomePerCapita),0)\n\n# Histogram of income per capita\nh <- ggplot(df_combined, aes(x = incomePerCapita)) +\n      geom_histogram(bins = 15,\n                    color = \"#F8F3E6\") +\n      scale_x_continuous(breaks = scales::pretty_breaks(n = 10),\n                        limits = c(500,140000),\n                        labels = label_dollar()) +\n      geom_vline(aes(xintercept = median_incomePC),\n                    colour=\"grey40\", linewidth = 0.8, linetype = \"dashed\") +\n      annotate(geom = \"text\", x = 50000, y = 250,\n              label = paste0(\"Median Income per Capita: $\", median_incomePC)) +\n      labs(x = NULL, y = NULL) +\n      theme_minimal() +\n      theme(axis.text.y = element_blank(),\n           panel.grid.major = element_blank(),\n           plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n#Boxplot of Income per capita\nbox <- ggplot(df_combined, aes(y = incomePerCapita)) + \n          geom_boxplot(outlier.colour=\"salmon\", outlier.shape=16,\n                        outlier.size=1, notch=FALSE) + \n          coord_flip() + \n          annotate(geom = \"text\", x = 0.38, y = min_incomePC,\n                  label = paste0(\"$\", min_incomePC),\n                  color = \"grey30\") + \n          annotate(geom = \"text\", x = 0.38, y = q_incomePC,\n                  label = paste0(\"$\", q_incomePC),\n                  color = \"grey30\") +\n          annotate(geom = \"text\", x = 0.38, y = max_incomePC,\n                  label = paste0(\"$\", max_incomePC),\n                  color = \"salmon\") + \n          labs(title = \"Right-skewed distribution of Income per Capita\",\n               y = \"\", x = \"\") + \n          scale_y_continuous(limits = c(500,140000), \n                             labels = label_dollar()) +\n          stat_boxplot(geom=\"errorbar\", width=0.5) + \n          theme_minimal() +\n          theme(axis.text = element_blank(), \n                axis.ticks = element_blank(),\n                panel.grid.major = element_blank(),\n                plot.background =\n                  element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\nhbox <- (box / h) + \n        plot_layout(heights = c(0.8, 4))\n\nhbox\n\n\n\n\n\n\n\ncode block\ndescribe(df_combined$incomePerCapita)\n\n\ndf_combined$incomePerCapita \n       n  missing distinct     Info     Mean      Gmd      .05      .10      .25      .50      .75 \n    1011        0      987        1    27241    21160    923.5   1321.0  14741.0  23559.0  34914.0 \n     .90      .95 \n 53265.0  64212.0 \n\nlowest :    745    747    752    756    763, highest: 119282 122003 122060 124221 130647"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#joviality",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#joviality",
    "title": "Take-home Exercise 1",
    "section": "3.1: Joviality",
    "text": "3.1: Joviality\nEach participant has a joviality score on a scale of 0 to 1. For the purpose of this study, we assume that the closer the score is to 1 (maximum), the more jovial the participant was recorded at the start of the survey. Joviality will thus be analysed across different demographic and financial variables, to find significant patterns and trends.\n\n3.1.1: Distribution\nThe distribution of joviality scores is first visualised to determine the variation of values across the sample population:\n\n\ncode block\n#mean_jov <- mean(df_combined$joviality)\n#std_jov <-\n  \nggplot(df_combined, aes(x = joviality)) +\n  geom_histogram(bins = 15,\n                 color = \"#F8F3E6\") +\n  #stat_function(fun = dnorm, args = list(mean = mean_jov, sd = std_jov), col=\"#93c7c2\", size = .7)+\n  scale_x_continuous(breaks = scales::pretty_breaks(n = 10),\n                     limits = c(0,1)) +\n  geom_vline(aes(xintercept = mean(joviality)),\n             colour=\"#f53b5d\", linewidth = 0.8, linetype = \"dashed\") +\n  geom_vline(aes(xintercept = median(joviality)),\n             colour=\"grey40\", linewidth = 0.8, linetype = \"dashed\") +\n  labs(x = \"Joviality Score\",\n       y = NULL) +\n  theme(axis.ticks.y = element_blank(),\n        plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\nThe mean joviality score is close to the median, suggesting that joviality resembles a normal distribution.\n\n\n3.1.2: Are there differences in Joviality Scores Across Income and Age Groups?\nWe seek to find out if specific groups within the population have reported lower or higher joviality scores, and if this difference between factor levels in the sample is significant enough to represent the overall city population.\nA normality assumption test is first conducted across factor levels for joviality score across income and age groups. At a confidence level of 95%, we test the following hypothesis:\n  \\[H_0: Joviality\\ is\\ normally\\ distributed\\ across\\ groups\\]\n\\[H_1: Joviality\\ is\\ not\\ normally\\ distributed\\ across\\ groups\\]\n  Income Groups\n\nDisributionNormality TestANOVA\n\n\n\n\ncode block\nggplot(df_combined, aes(x = joviality, fill = incomeGroup)) +\n  geom_density(alpha = 0.4) +\n  labs(title = \"Distribution of Joviality Score Across Income Groups\") +\n  annotate(geom = \"text\", x = 0.2, y = 2.4,\n           label = \"High income groups recorded lower joviality\") +\n  annotate(geom = \"text\", x = 0.8, y = 2.05,\n           label = \"Low income groups recorded higher joviality\") +\n  theme(axis.text.y = element_blank(),\n        axis.title.y = element_blank(),\n        panel.grid.major = element_blank(),\n        plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\n\n\n\n\ncode block\nggplot(df_combined, \n       mapping = aes(sample = joviality, \n                     fill = incomeGroup))+\n      stat_qq_band(alpha=0.15) +\n      stat_qq_line(alpha=0.15) +\n      stat_qq_point(size=0.5) + \n      facet_wrap(~ incomeGroup, nrow = 1) +\n      labs(title = \"Deviation from normality across Income Groups\",\n           subtitle = \"Q-Q plots visually indicate that the data is not normally distributed\",\n           x = \"\", y = \"\") +\n      theme_bw() +\n      theme(legend.position = \"none\",\n            axis.text.y = element_blank(),\n            axis.text.x = element_blank(),\n            axis.ticks.y = element_blank(),\n            axis.ticks.x = element_blank(),\n            panel.grid.minor = element_blank(),\n            plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\n\n\ncode block\ndf_combined %>%\n      group_by(incomeGroup) %>%\n      shapiro_test(joviality) %>%\n      ungroup() %>%\n      kbl() %>%\n      kable_styling(full_width = F, bootstrap_options = \"responsive\")\n\n\n\n\n \n  \n    incomeGroup \n    variable \n    statistic \n    p \n  \n \n\n  \n    low \n    joviality \n    0.9179184 \n    9.10e-06 \n  \n  \n    mid-low \n    joviality \n    0.9467014 \n    0.00e+00 \n  \n  \n    mid-high \n    joviality \n    0.9534245 \n    0.00e+00 \n  \n  \n    high \n    joviality \n    0.9249118 \n    2.37e-05 \n  \n\n\n\n\n\nSince the p-value across each income group is < significance level 0.05, we reject the null hypothesis, concluding that joviality does not follow a normal distribution across income groups. To test if there is a significant difference between groups, a non-parametric test will be used in subsequent analysis, with median value as measure of central tendency.\n\n\nA non-parametric Kruskal-Wallis one-way ANOVA test is conducted to determine if there is a significant difference in joviality score between income groups. At a significance level of 0.05, we test the following hypothesis:\n\\[H_0: There\\ is\\ no\\ difference\\ in\\ \\mu\\ between\\ income\\ groups\\] \\[H_0: There\\ is\\ a\\ difference\\ in\\ \\mu\\ between\\ two\\ or\\ more\\ income\\ groups\\]\n\n\ncode block\nggbetweenstats(data = df_combined,\n               x = incomeGroup,\n               y = joviality,\n               type = \"np\",\n               mean.ci = TRUE, \n              pairwise.comparisons = TRUE, \n              pairwise.display = \"s\",\n              p.adjust.method = \"fdr\",\n              messages = FALSE\n              ) +\n  theme_classic() +\n  theme(legend.position = \"none\",\n        plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\nThe p-value is < significance level of 0.05, so we can reject the null hypothesis and conclude that median joviality differs among income groups. In fact, there is a large difference in mean joviality between low income and high income groups, with participants in low income groups having greater joviality (median = 0.75) than higher income groups (median = 0.23).\n\n\n\n  Age Groups\n\nDistributionNormality TestANOVA\n\n\n\n\ncode block\nggplot(df_combined, aes(x = joviality, fill = ageGroup)) +\n  geom_density(alpha = 0.4) +\n  facet_wrap(~ageGroup, nrow = 2, ncol = 2) +\n  remove_ticks() +\n  labs(title = \"Distribution of Joviality Score Across Age Groups\",\n       subtitle = \"Older participants seem to have higher concentration of low joviality scores\") +\n  theme(axis.text.y = element_blank(),\n        axis.title.y = element_blank(),\n        panel.grid.major = element_blank(),\n        plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\n\n\n\n\ncode block\ndf_combined %>%\n  group_by(ageGroup) %>%\n  shapiro_test(joviality) %>%\n  ungroup() %>%\n  kbl() %>%\n  kable_styling(full_width = F, bootstrap_options = \"responsive\")\n\n\n\n\n \n  \n    ageGroup \n    variable \n    statistic \n    p \n  \n \n\n  \n    18-29 \n    joviality \n    0.9502827 \n    1e-07 \n  \n  \n    30-39 \n    joviality \n    0.9384257 \n    0e+00 \n  \n  \n    40-50 \n    joviality \n    0.9526016 \n    2e-07 \n  \n  \n    51-60 \n    joviality \n    0.9519616 \n    6e-07 \n  \n\n\n\n\n\nSince the p-value across each age group is < 0.05, we reject the null hypothesis, concluding that joviality does not follow a normal distribution across age groups either. To test if there is a significant difference between groups, a non-parametric test will be used in subsequent analysis.\n\n\nA non-parametric Kruskal-Wallis one-way ANOVA test is conducted to determine if there is a significant difference in mean joviality score between age groups. At a significance level of 0.05, we test the following hypothesis:\n\\[H_0: There\\ is\\ no\\ difference\\ in\\ \\mu\\ between\\ age\\ groups\\] \\[H_0: There\\ is\\ a\\ difference\\ in\\ \\mu\\ between\\ two\\ or\\ more\\ age\\ groups\\]\n\n\ncode block\nggbetweenstats(data = df_combined,\n               x = ageGroup,\n               y = joviality,\n               type = \"np\",\n               mean.ci = TRUE, \n              pairwise.comparisons = TRUE, \n              pairwise.display = \"s\",\n              p.adjust.method = \"fdr\",\n              messages = FALSE\n              ) +\n  theme_classic() +\n  theme(legend.position = \"none\",\n        plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\nThe p-value 0.08 is > significant level of 0.05, so we conclude that there is no significant difference in mean joviality score across age groups.\n\n\n\n  While the one-way ANOVA tests reported significant differences in joviality between income groups and not age groups, there are still trends that can be observed when comparing multiple groups and factor levels. This gives more specific insight into demographic patterns, as visualised in the following chart that compares joviality score across both Age and Income groups:\n\n\ncode block\n# Calculate mean joviality per tile\ngbcols <- c(\"ageGroup\", \"incomeGroup\")\n\ncal_joviality <- df_combined %>% \n  group_by(across(all_of(gbcols))) %>% \n  summarise(mean_joviality = round(mean(joviality),2), .groups = \"drop\") %>%\n  ungroup()\n\n# Style tooltip\ntooltip_css <- \"background-color:#3E4254; font-style:bold; color:#F8F3E6;\" \n\n# Tile Plot\ngg_tile <-ggplot(cal_joviality,\n                aes(x = ageGroup, y = incomeGroup)) +\n          geom_tile_interactive(aes(fill = mean_joviality,\n                                    tooltip = paste(\"Age Group: \", ageGroup, \"<br>\",\n                                             \"Income Group: \", incomeGroup, \"<br>\",\n                                             \"Mean Joviality Score: \", mean_joviality))) + \n          scale_fill_gradient(low = \"#0a4c6a\",\n                              high = \"#F8F3E6\",\n                              space = \"Lab\",\n                              na.value = \"grey50\",\n                              guide = \"colourbar\",\n                              aesthetics = \"fill\") +  \n          labs(title = \"Joviality across Income and Age Groups\",\n               x = \"Age Group\",\n               y = \"Income Group\") +\n          theme(legend.position = \"right\",\n                legend.direction = \"vertical\",\n                axis.line.x = element_blank(),\n                panel.grid.major.y = element_blank()) +\n          remove_ticks() +\n          theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\nggiraph::girafe(ggobj = gg_tile,\n                width_svg = 6,\n                height_svg = 6*0.618,\n                fonts = list(sans = \"Lato Regular\"),\n                options = list(opts_tooltip(css = tooltip_css)))                   \n\n\n\n\n\n\n\nDesign Considerations\n\nA heatmap was selected to visualise two categorical variables with tiles filled by the value of"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#age",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#age",
    "title": "Take-home Exercise 1",
    "section": "3.2 Age:",
    "text": "3.2 Age:\n\n\n\nWhat is the mean amount of transactions in each category across all participants?\n\n\ncode block\ncat_amount <- financial_data_new %>%\n                group_by(category) %>%\n                summarise(amount = mean(amount)) %>%\n                ungroup()\n\nggplot(cat_amount, aes(x = amount, y = category)) +\n  geom_bar(stat = \"identity\", \n           aes(fill = ifelse(amount < 0, \"Negative\", \"Positive\"))) +\n  geom_text(aes(label = paste0(ifelse(amount < 0, \"-$\", \"$\"), abs(round(amount, 2)))),\n            vjust = -3, hjust = 0.5) +\n  scale_fill_manual(name = \"Values\", \n                    values = c(\"Positive\" = \"#1696d2\", \"Negative\" = \"salmon\")) +\n  labs(x = \" Mean Amount ($)\") +\n  theme(axis.title.y = element_blank(),\n        legend.position = \"none\",\n        plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\n\n\ncode block\nggplot(financial_agg, aes(x = incomeGroup,\n                          y = expenseRatio)) +\n  geom_boxplot() +\n  labs(title = \"Expense Ratio is Higher in Middle Income Groups\",\n       x = NULL,\n       y = NULL) +\n  theme(text = element_text(size = 12),\n        plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))"
  }
]