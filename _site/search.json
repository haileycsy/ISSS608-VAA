[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "haileycsy",
    "section": "",
    "text": "gif source"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands on Exercise 1",
    "section": "",
    "text": "pacman::p_load(tidyverse, forcats)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nsummary(exam_data)\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-themes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-themes",
    "title": "Hands on Exercise 1",
    "section": "1: Working with Themes",
    "text": "1: Working with Themes\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n    geom_bar() + \n    coord_flip()+\n    theme_minimal() + \n    theme(\n      panel.background=element_rect(fill='lightblue', colour='lightblue'),\n      panel.border=element_blank(),\n      panel.grid.major=element_line(linewidth=0.2, linetype='solid', colour=\"white\"), \n      panel.grid.minor=element_line(linewidth=0.2, linetype='solid', colour=\"white\"),\n      plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-pupil-count-by-race",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-pupil-count-by-race",
    "title": "Hands on Exercise 1",
    "section": "2: Makeover Design for Pupil Count by Race",
    "text": "2: Makeover Design for Pupil Count by Race\n\nFormulaForcats\n\n\n\nggplot(data = exam_data, \n       aes(x = reorder(RACE, RACE, function(x)-length(x)))) +\n    geom_bar()+\n    ylim(0, 220) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-1) +\n    labs(x = \"Race\",\n         y = \"No. of\\nPupils\") + \n    theme_grey() +\n    theme(\n      axis.title.y = element_text(hjust=1, angle=0),\n      plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n    )\n\n\n\n\n\n\n\nexam_data %>%\n  mutate(RACE = fct_infreq(RACE)) %>%\n  ggplot(aes(x = RACE)) + \n  geom_bar()+\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0),\n        plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-distribution-of-math-scores",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-distribution-of-math-scores",
    "title": "Hands on Exercise 1",
    "section": "3: Makeover Design for Distribution of Math Scores",
    "text": "3: Makeover Design for Distribution of Math Scores\n\nggplot(data=exam_data,\n       aes(x=MATHS)) + \n    geom_histogram(bins=20, \n                   color=\"grey30\", \n                   fill=\"lightblue\") +\n    labs(x = \"Math Score\",\n         y = \"No. of Pupils\",\n         title = \"Distribution of Math Scores\") + \n    geom_vline(aes(xintercept=median(exam_data$MATHS, na.rm=T)),\n               color=\"grey30\", linewidth=1, linetype=\"dashed\") + \n    geom_vline(aes(xintercept=mean(exam_data$MATHS, na.rm=T)),\n               colour=\"red\", linewidth=1, linetype=\"dashed\") + \n    theme(plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-distribution-of-english-score-by-gender",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-distribution-of-english-score-by-gender",
    "title": "Hands on Exercise 1",
    "section": "4: Makeover Design for Distribution of English Score by Gender",
    "text": "4: Makeover Design for Distribution of English Score by Gender\n\neng_data <- exam_data[\"ENGLISH\"]\n\nggplot(data=exam_data,\n       aes(x=ENGLISH, fill=GENDER)) +\n    geom_histogram(bins=20, data=eng_data, fill=\"grey\", alpha=0.7, na.rm=T) + \n    geom_histogram(bins=20, color=\"black\", na.rm=T) + \n    facet_wrap(~ GENDER) +\n    xlim(20,100) + \n    labs(x = \"English Score\",\n         y = \"No. of Pupils\",\n         title = \"Distribution of English Scores by Gender\") + \n    theme_bw() + \n    theme(plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n    )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-scatterplot-of-english-and-math-scores",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-scatterplot-of-english-and-math-scores",
    "title": "Hands on Exercise 1",
    "section": "5: Makeover Design for Scatterplot of English and Math Scores",
    "text": "5: Makeover Design for Scatterplot of English and Math Scores\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  geom_vline(aes(xintercept=50),\n               color=\"grey\", linewidth=0.8, linetype=\"dashed\") + \n  geom_hline(aes(yintercept=50),\n               color=\"grey\", linewidth=0.8, linetype=\"dashed\") + \n  labs(x = \"Math Score\",\n       y = \"English Score\",\n       title = \"Correlation between English and Math Scores\") + \n  theme_gray() +\n  theme(plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands on Exercise 2",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, ggpmisc,\n               ggthemes, hrbrthemes, InraeThemes, ggthemr,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#annotations-with-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#annotations-with-ggrepel",
    "title": "Hands on Exercise 2",
    "section": "1: Annotations with ggrepel",
    "text": "1: Annotations with ggrepel\nA comparison between annotations using geom_label(), geom_text() and package ggrepel\n\nwith ggrepelwithout\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5,\n              formula = y~x) +  \n  geom_label_repel(aes(label = ID), \n                   fontface=\"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  labs(x=\"Math\",\n       y=\"English\",\n       title=\"Correlation between English and Maths scores for Primary 3\",\n       subtitle=\"There is a positive correlation between English and Math Scores\") +\n  theme(text=element_text(family=\"mono\"),\n        plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5,\n              formula = y~x) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  labs(x=\"Math\",\n       y=\"English\",\n       title=\"Correlation between English and Maths scores for Primary 3\",\n       subtitle=\"There are too many annotations to see the points clearly\") +\n  theme(plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#customising-themes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#customising-themes",
    "title": "Hands on Exercise 2",
    "section": "2: Customising themes",
    "text": "2: Customising themes\n\n2.1: ggtheme package\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  labs(x = \"Math Scores\",\n       y = \"No. of Students\",\n       title = \"Distribution of Math Scores\") +\n  theme_economist()\n\n\n\n\n\n\n2.2: hbrthemes package\n\nPlot 1Code 1Plot 2Code 2\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  labs(x = \"Math Scores\",\n       y = \"No. of Students\",\n       title = \"Distribution of Math Scores\") +\n  theme_ipsum()\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  labs(x = \"Math Scores\",\n       y = \"Number of Students\",\n       title = \"Distribution of Math Scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 12,\n              grid = \"Y\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#composite-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#composite-graphs",
    "title": "Hands on Exercise 2",
    "section": "3: Composite Graphs",
    "text": "3: Composite Graphs\n\n3.1 Combining 2 graphs: ‘+’ operator\n\np1 <- ggplot(data=exam_data, \n            aes(x = MATHS)) +\n        geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey90\", \n                 fill=\"#3A3B60\") +\n        labs(x = \"Math Scores\",\n             y = \"Number of Students\",\n             title = \"Distribution of Math Scores\")\n\np2 <- ggplot(data=exam_data, \n            aes(x = ENGLISH)) +\n        geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey90\", \n                 fill=\"#4d5887\") +\n        labs(x = \"English Scores\",\n             title = \"Distribution of English Scores\") +\n        theme(axis.title.y = element_blank())\n\np1 + p2\n\n\n\n\n\n\n3.2 Combining 3 graphs: ‘|’, ‘/’, ‘()’\n\nUse different operators to specify composition\n\n“|” operator to stack two ggplot2 graphs\n“/” operator to place the plots beside each other\n“()” operator defines the sequence of the plotting\n\n\n\np3 <- ggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n      geom_point() +\n      geom_smooth(method=lm, \n              linewidth=0.5,\n              formula = y~x) + \n      stat_poly_line() +\n      stat_poly_eq() +\n      coord_cartesian(xlim=c(0,100),\n                      ylim=c(0,100)) +\n      labs(x=\"Math\",\n           y=\"English\",\n           title=\"Correlation between Math and English Scores\")\n\n(p1/p2) | p3\n\n\n\n\n\n\n3.3: Adding Annotations\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\nApplying themes to composite\ntheme_economist()\n\npatchwork <- ((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\npatchwork & theme_economist()\n\n\n\n\ntheme_inrae()\n\npatchwork <- ((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\npatchwork & theme_inrae()\n\n\n\n\ntheme_solarized_2()\n\npatchwork <- ((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\npatchwork & theme_solarized_2()\n\n\n\n\nggthemr: chalk\n\nggthemr(\"chalk\")\n\npatchwork <- ((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\npatchwork\n\n\n\n\n\n\n3.4: Inset Figures\nUsing inset_element() to place a plot within another plot\n\nggthemr_reset()\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "code block\npacman::p_load(ggiraph, plotly, gganimate,\n               gifski, gapminder,\n               DT, tidyverse, patchwork, readxl,\n               urbnthemes, ggthemr, wesanderson)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#ggiraph-package",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#ggiraph-package",
    "title": "Hands-on Exercise 3",
    "section": "ggiraph package",
    "text": "ggiraph package\n\nInteractive Arguments of ggiraph\n\nTooltip: displayed when hovering over chart elements\nOnclick: executed when elements are clicked\nData_id: Uses columns as id to show association of elements"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#tooltips",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#tooltips",
    "title": "Hands-on Exercise 3",
    "section": "1: Tooltips",
    "text": "1: Tooltips\nOriginal ggplot dotplot:\n\n\ncode block\nset_urbn_defaults(style = \"print\")\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_dotplot(stackdir = \"up\", \n               binwidth = 1,\n               dotsize = 1) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(x = \"Math Scores\") + \n  theme(axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank())\n\n\n\n\n\nWith ggiraph tooltips:\n\n\ncode block\np <- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1,\n    dotsize = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(x = \"Math Scores\")\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n1.1: Controlling Information in Tooltips\nCustomise information to be included in tooltips by creating a new list\n\n\ncode block\nexam_data$tooltip <- c(paste0(\n  \"Name:\", exam_data$ID,\n  \"\\n Class:\", exam_data$CLASS\n))\n\np <- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip),\n    stackgroups = TRUE, \n    binwidth = 1,\n    dotsize = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(x = \"Math Scores\")\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\n1.2: Formatting style of Tooltips\nAdding css arguments to opts_tooltip() of ggiraph\n\n\ncode block\ntooltip_css <- \"background-color:#dfdfeb; font-style:bold; color:black;\"  #<<\n\nexam_data$tooltip <- c(paste0(\n  \"Name:\", exam_data$ID,\n  \"\\n Class:\", exam_data$CLASS\n))\n\np <- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip),\n    stackgroups = TRUE, \n    binwidth = 1,\n    dotsize = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(x = \"Math Scores\")\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618,\n  options = list(    #<<\n    opts_tooltip(    #<<\n      css = tooltip_css)) #<<\n)                               \n\n\n\n\n\n\n\n\n1.3: Displaying Statistics in tooltips\nAdding stat_summary() calculations in ggplot\n\n\ncode block\nggthemr(\"flat\")\n\ntooltip <- function(y, ymax, accuracy = .01) {   #<<\n  mean <- scales::number(y, accuracy = accuracy) #<<\n  sem <- scales::number(ymax - y, accuracy = accuracy) #<<\n  paste(\"Mean Math Score:\", mean, \"+/-\", sem) #<<\n} #<<\n\np2 <- ggplot(data=exam_data, \n                   aes(x = RACE)) +\n  stat_summary(aes(y = MATHS, \n                  tooltip = after_stat(tooltip(y, ymax))),\n                  fun.data =\"mean_se\",\n                  geom = GeomInteractiveCol,\n                  fill = \"light blue\") +\n  stat_summary(aes(y = MATHS),\n               fun.data = mean_se,\n               geom =\"errorbar\", \n               width = 0.2, linewidth = 0.2) +\n  labs(y =\"Math Scores\") + \n  theme(axis.title.x = element_blank(),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\ngirafe(ggobj = p2,\n       width_svg = 8,\n       height_svg = 8*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#hover-effect-with-data_id",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#hover-effect-with-data_id",
    "title": "Hands-on Exercise 3",
    "section": "2: Hover effect with data_id",
    "text": "2: Hover effect with data_id\n\ndata_id is specified as an aes() argument in the interactive geom functions\ne.g: geom_dotplot_interactive(aes(data_id = variablename))\n\n\n\ncode block\np <- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             #<<\n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL) + \n  labs(x =\"Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)        \n\n\n\n\n\n\n\n2.1: Formatting Style of Hover Effect\n\nCustomisation Options\n\nopts_hover(css = NULL, reactive = FALSE, nearest_distance = NULL) > effect on geometries\n\nopts_hover_inv(css = NULL) > effect on other geometries, while one is hovered\nopts_hover_key(css = NULL, reactive = FALSE) > interactive scales\nopts_hover_theme(css = NULL, reactive = FALSE) > interactive theme elements\n\n\n\n\ncode block\np <- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL) + \n  labs(x =\"Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                     #<<\n  opts_hover(css = \"fill: #202020;\"), #<<\n  opts_hover_inv(css = \"opacity:0.2;\") #<<\n  )                                   #<<  \n) \n\n\n\n\n\n\n\n\n1 + 2: Tooltip + Hover Powers Combined!!\n\n\ncode block\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, #<<\n        data_id = CLASS),#<<              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  labs(x =\"Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\n2.2: Coordinated Multiple Views\n\nWhen a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too\n\nUse interactive functions of ggiraph to create multiple views\n\nPatchwork function from patchwork package weaves views together as coordinated plots\n\n\n\n\ncode block\np1 <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + #<<\n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  labs(x =\"Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\np2 <- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS,\n        data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + #<<\n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  labs(x =\"English Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\ngirafe(code = print(p1 / p2), #<<\n       width_svg = 6,\n       height_svg = 6,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#onlick",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#onlick",
    "title": "Hands-on Exercise 3",
    "section": "3: Onlick",
    "text": "3: Onlick\nonclick argument opens link up in new window when clicked.\n\n\ncode block\ntt <- \"click me\"\n\nexam_data$onclick <- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.onemap.gov.sg/main/v2/schoolquery\",\nas.character(exam_data$ID))\n\np <- ggplot(data=exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(aes(tooltip = tt,\n                               onclick = exam_data$onclick),\n                           stackgroups = TRUE,\n                           binwidth = 1,\n                           method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  labs(x =\"Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-package",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-package",
    "title": "Hands-on Exercise 3",
    "section": "plotly package",
    "text": "plotly package\nCreate interactive graphs using:\n\nplot_ly()\nggplotly()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#using-plot_ly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#using-plot_ly",
    "title": "Hands-on Exercise 3",
    "section": "3.1: Using plot_ly()",
    "text": "3.1: Using plot_ly()\n\n\ncode block\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n3.1.2: Adding Visual Variables\nAdding color argument to code chunk to vary marker colors by specified category\n\n\ncode block\nplot_ly(data = exam_data, \n        x = ~ENGLISH,\n        y = ~MATHS,\n        color = ~RACE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#using-ggplotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#using-ggplotly",
    "title": "Hands-on Exercise 3",
    "section": "3.2: Using ggplotly()",
    "text": "3.2: Using ggplotly()\n\n\ncode block\nmoonrise_cols <- wes_palette(\"Moonrise2\", type = \"discrete\")\n\np <- ggplot(data = exam_data,\n            aes(x = ENGLISH,\n                y = MATHS,\n                color = RACE,\n                text = paste(\"<b>English Score:</b>\", ENGLISH, \"<br><b>Math Score:</b>\", MATHS,\"<br>Race:\", RACE))) +\n      geom_point(size = 1.5) +\n      labs(title = \"Math and English Scores by Race\",\n           x = \"English Score\",\n           y = \"Math Score\") +\n      scale_color_manual(values = wes_palette(\"Moonrise2\", n = 4)) + \n      theme_grey() +\n      theme(plot.title = element_text(color = moonrise_cols[4], size = 14, face = \"bold\"),\n            axis.title.x = element_text(color = moonrise_cols[1], size = 10, face = \"bold\"),\n            axis.title.y = element_text(color = moonrise_cols[1], size = 10, face = \"bold\"),\n            plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\")\n           )\n\nggplotly(p, tooltip = \"text\")\n\n\n\n\n\n\n\n3.2.2: Coordinated Multiple views with ggplotly\n\nThis involves three steps:\n\nhighlight_key() of plotly package is used as shared data\ncreate scatterplots using ggplot2 functions\nsubplot() of plotly package is used to place them side-by-side\n\n\n\n\ncode block\nd <- highlight_key(exam_data)\n\np1 <- ggplot(data = d, \n            aes(x = MATHS,\n                y = ENGLISH,\n                text = paste(\"<b>Math Score:</b>\", MATHS,\"<br><b>English Score:\", ENGLISH))) +\n  geom_point(size = 1, shape = 18) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) + \n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\np2 <- ggplot(data = d, \n            aes(x = MATHS,\n                y = SCIENCE,\n                text = paste(\"<b>Math Score:</b>\", MATHS,\"<br><b>Science Score:\", SCIENCE))) +\n  geom_point(size = 1) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) +\n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\nsubplot(ggplotly(p1, tooltip = \"text\"),\n        ggplotly(p2, tooltip = \"text\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#crosstalk-and-dt",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#crosstalk-and-dt",
    "title": "Hands-on Exercise 3",
    "section": "Crosstalk and DT",
    "text": "Crosstalk and DT\nCrosstalk is an add-on to the htmlwidgets package. It extends htmlwidgets with a set of classes, functions, and conventions for implementing cross-widget interactions (currently, linked brushing and filtering).\n\nLimitations of Crosstalk:\n\nHTML widgets must be specifically modified to support Crosstalk\nOnly works for linked brushing and filtering of views that show individual data points, not aggregate or summary views\nBecause all data must be loaded into the browser, Crosstalk is not appropriate for large data sets"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#datatables-using-dt-package",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#datatables-using-dt-package",
    "title": "Hands-on Exercise 3",
    "section": "4.1: DataTables using DT package",
    "text": "4.1: DataTables using DT package\nDT package allow rendering of data objects as HTML tables\n\n\ncode block\nDT::datatable(exam_data[c(\"ID\",\"CLASS\",\"GENDER\",\"RACE\",\"ENGLISH\",\"MATHS\",\"SCIENCE\")],\n              caption = htmltools::tags$caption(style = \"caption-side: bottom; text-align: center;\",\n                                                \"Table 1: \", htmltools::em(\"Exam Data for Primary 3\")),\n              class = \"compact\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#linking-plot-to-table",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#linking-plot-to-table",
    "title": "Hands-on Exercise 3",
    "section": "4.2: Linking Plot to Table",
    "text": "4.2: Linking Plot to Table\n\n\ncode block\nexam_data <- subset(exam_data, select = c(1:7))\nd <- highlight_key(exam_data)\n\np <- ggplot(data = d, \n            aes(x = MATHS,\n                y = ENGLISH,\n                text = paste(\"<b>Math Score:</b>\", MATHS,\"<br><b>English Score:\", ENGLISH))) +\n  geom_point(size = 1) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) + \n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\ngg <- highlight(ggplotly(p, tooltip = \"text\"),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#gganimate-and-gifski-packages",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#gganimate-and-gifski-packages",
    "title": "Hands-on Exercise 3",
    "section": "gganimate and gifski packages",
    "text": "gganimate and gifski packages\ngganimate provides a range of new grammar classes that can be added to the plot object in order to customise how it should change with time.\n\ntransition_*() defines how the data should be spread out and how it relates to itself across time\nview_*() defines how the positional scales should change along the animation\nshadow_*() defines how data from other points in time should be presented in the given point in time\nenter_*()/exit_*() defines how new data should appear and how old data should disappear during the course of the animation\nease_aes() defines how different aesthetics should be eased during transitions\n\ngifski converts video frames to GIF animations\n*Importing Data**\n\n\ncode block\ncol <- c(\"Ethnicity\")\n\nmsia_pop <- read_csv(\"data/Malaysia_demographics.csv\") %>%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-bubble-plot-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-bubble-plot-1",
    "title": "Hands-on Exercise 3",
    "section": "5.1: Animated Bubble Plot 1",
    "text": "5.1: Animated Bubble Plot 1\n\nThis involves three steps:\n\nCreate a static Bubble Plot using ggplot\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year)\nease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce\n\n\n\n\ncode block\nggplot(msia_pop, aes(x = Pct_Old, y = Pct_Young, \n                      size = Population, \n                      colour = Ethnicity)) +\n  geom_point(alpha = 0.7) +\n  scale_colour_manual(values = wes_palette(\"Darjeeling1\")) +\n  scale_size(range = c(5, 25)) +\n  labs(title = 'Malaysian Population by Ethnicity for Year: {frame_time}',\n       subtitle = \"Data Source: https://www.kaggle.com/datasets/jasonkwm/malaysia-demographic-20102019\",\n       x = '% Aged', \n       y = '% Young') +\n  guides(size = \"none\") +\n  theme(legend.position = \"bottom\",\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\")) + \n  transition_time(Year) +       #<<\n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-bubble-plot-2",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-bubble-plot-2",
    "title": "Hands-on Exercise 3",
    "section": "5.2: Animated Bubble Plot 2",
    "text": "5.2: Animated Bubble Plot 2\n*Importing data**\n\n\ncode block\nglobalPop <- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %>%\n  mutate(across(where(is.character), as.factor)) %>%\n  mutate(Year = as.integer(Year))\n\n\n\n\ncode block\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  theme_gray() + \n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\")) + \n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-frame-animations",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-frame-animations",
    "title": "Hands-on Exercise 3",
    "section": "Plotly Frame Animations",
    "text": "Plotly Frame Animations"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#ggplotly-animated-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#ggplotly-animated-bubble-plot",
    "title": "Hands-on Exercise 3",
    "section": "6.1: ggplotly Animated Bubble Plot",
    "text": "6.1: ggplotly Animated Bubble Plot\nggplotly() is used to convert the R graphic object into an animated svg object.\n\n\ncode block\ngg <- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),  #<<\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme_gray() + \n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\nggplotly(gg)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plot_ly-animated-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plot_ly-animated-bubble-plot",
    "title": "Hands-on Exercise 3",
    "section": "6.2: plot_ly() Animated Bubble Plot",
    "text": "6.2: plot_ly() Animated Bubble Plot\n\n\ncode block\nbp <- globalPop %>%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent, \n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          )\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands on Exercise 4",
    "section": "",
    "text": "Load and Install R Packages\n\npacman::p_load(ggstatsplot, tidyverse)\n\n\n\nImporting the data\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nhead(exam_data, 10)\n\n# A tibble: 10 × 7\n   ID         CLASS GENDER RACE    ENGLISH MATHS SCIENCE\n   <chr>      <chr> <chr>  <chr>     <dbl> <dbl>   <dbl>\n 1 Student321 3I    Male   Malay        21     9      15\n 2 Student305 3I    Female Malay        24    22      16\n 3 Student289 3H    Male   Chinese      26    16      16\n 4 Student227 3F    Male   Chinese      27    77      31\n 5 Student318 3I    Male   Malay        27    11      25\n 6 Student306 3I    Female Malay        31    16      16\n 7 Student313 3I    Male   Chinese      31    21      25\n 8 Student316 3I    Male   Malay        31    18      27\n 9 Student312 3I    Male   Malay        33    19      15\n10 Student297 3H    Male   Indian       34    49      37\n\n\n\n\nOne-Sample Test: gghistostats()\n\nset.seed(1234)\n\ngghistostats(\n  data = exam_data,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\") + \n  theme_classic() +\n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\n\n\n\n\nBayes factor is the ratio of the likelihood of one particular hypothesis to the likelihood of another. It can be interpreted as a measure of the strength of evidence in favor of one theory among two competing theories.\n\n\n\nTwo-Sample Test of difference in means: ggbetweenstats()\n\nggbetweenstats(\n  data = exam_data,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE) +\n  theme_classic() +\n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\n\n\n\n\n\nOne-way ANOVA Test of difference in means: ggbetweenstats()\n\nggbetweenstats(\n  data = exam_data,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE) +\n  theme_classic() +\n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\n\n\n\n\n\nCorrelation Test: ggscatterstats()\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE) +\n  theme_classic() +\n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\n\n\n\n\n\nAssociation Test (Dependence): ggbarstats()\n\nexam1 <- exam_data %>% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER) +\n  theme_classic() +\n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "Links to Tableau Visualisations:\nSuperstore Orders\nExam Data"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-Class Exercise 4",
    "section": "",
    "text": "Loading and Installing R Packages\n\npacman::p_load(tidyverse, rstatix, gt, patchwork, webshot2)\n\n\n\nImporting Data\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\n\nVisualising the Normal Distribution\n\nThe plotThe Code\n\n\nQ-Q Plot: quantile-quantile plot determines whether\n\n\n\n\n\n\n\n\n# QQ plots use 'sample' argument instead of 'x' or 'y'\nggplot(exam_data,\n       aes(sample = ENGLISH)) +\n  stat_qq() +\n  stat_qq_line()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can see that the points on the plot deviate significantly from the straight diagonal line. This is a clear indication that the set of data is not normally distributed.\n\n\n\n\nPatchwork\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\nqq <- ggplot(exam_data,\n        aes(sample = ENGLISH)) +\n        stat_qq() +\n        stat_qq_line()\n\nsw_t <- exam_data %>%\n          shapiro_test(ENGLISH) %>%\n          gt() #< save as gt table (static)\n\n#create a temp folder to save tibble as an image\ntmp <- tempfile(fileext = \".png\")\ngtsave(sw_t, tmp)\n\n# Assign table image to a variable name to call into patchwork\ntable_png <- png::readPNG(tmp,\n                          native = TRUE)\n\nqq + table_png"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "haileycsy",
    "section": "",
    "text": "ISSS608_VAA <- c( \"Data\", \"R\", \"Tableau\", \"Coffee\", \"Tears\", \"StackOverflow\", \"ChatGPT\" )"
  },
  {
    "objectID": "Projects/Superstore_Orders.html",
    "href": "Projects/Superstore_Orders.html",
    "title": "Market Basket Analysis",
    "section": "",
    "text": "Frequent Pattern Mining: Market Basket Analysis\nThis project aims to discover links between items frequently purchased together through analysing transaction data.\nLink to reference article"
  },
  {
    "objectID": "Projects/Superstore_Orders.html#r-packages",
    "href": "Projects/Superstore_Orders.html#r-packages",
    "title": "Market Basket Analysis",
    "section": "1.1: R Packages",
    "text": "1.1: R Packages\n\npacman::p_load(readxl, tidyverse, plyr, dplyr,\n               ggplot2, lubridate,\n               RcolorBrewer,\n               arules, arulesViz)"
  },
  {
    "objectID": "Projects/Superstore_Orders.html#data-loading-and-transformation",
    "href": "Projects/Superstore_Orders.html#data-loading-and-transformation",
    "title": "Market Basket Analysis",
    "section": "1.2: Data Loading and Transformation",
    "text": "1.2: Data Loading and Transformation\nThis Project uses Online Retail dataset from UCI Machine Learning Repository\nThe dataset contains the following attributes:\n\n\nInvoiceNo: Invoice number. Nominal, a 6-digit integral number uniquely assigned to each transaction. If this code starts with letter ‘c’, it indicates a cancellation.\n\nStockCode: Product (item) code. Nominal, a 5-digit integral number uniquely assigned to each distinct product.\n\nDescription: Product (item) name.\n\nQuantity: The quantities of each product (item) per transaction.\n\nInvoiceDate: Invoice Date and time. Numeric, the day and time when each transaction was generated.\n\nUnitPrice: Unit price. Numeric, Product price per unit in sterling.\n\nCustomerID: Customer number. Nominal, a 5-digit integral number uniquely assigned to each customer.\n\nCountry: Country name. Nominal, the name of the country where each customer resides.\n\n\n\norder_data <- read_excel(\"data/Online_Retail.xlsx\")\n\ncomplete.cases(data) returns a logical vector indicating which rows have no missing values. data[,] filters out the rows with missing values:\n\norder_data <- order_data[complete.cases(order_data), ]\nsummary(order_data)\n\n  InvoiceNo          StockCode         Description           Quantity        \n Length:406829      Length:406829      Length:406829      Min.   :-80995.00  \n Class :character   Class :character   Class :character   1st Qu.:     2.00  \n Mode  :character   Mode  :character   Mode  :character   Median :     5.00  \n                                                          Mean   :    12.06  \n                                                          3rd Qu.:    12.00  \n                                                          Max.   : 80995.00  \n  InvoiceDate                       UnitPrice          CustomerID   \n Min.   :2010-12-01 08:26:00.00   Min.   :    0.00   Min.   :12346  \n 1st Qu.:2011-04-06 15:02:00.00   1st Qu.:    1.25   1st Qu.:13953  \n Median :2011-07-31 11:48:00.00   Median :    1.95   Median :15152  \n Mean   :2011-07-10 16:30:57.88   Mean   :    3.46   Mean   :15288  \n 3rd Qu.:2011-10-20 13:06:00.00   3rd Qu.:    3.75   3rd Qu.:16791  \n Max.   :2011-12-09 12:50:00.00   Max.   :38970.00   Max.   :18287  \n   Country         \n Length:406829     \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n\n\n\nmutate() character data types to factor using as.factor()\nConvert InvoiceNo to Numeric\nStore InvoiceDate as date in new variable, ‘TransDate’\nExtract time from InvoiceDate and store in another variable, ‘TransTime’\n\n\norder_data %>%\n  mutate(across(where(is.character), as.factor()))\n\n# A tibble: 406,829 × 8\n   InvoiceNo StockCode Description        Quantity InvoiceDate         UnitPrice\n   <chr>     <chr>     <chr>                 <dbl> <dttm>                  <dbl>\n 1 536365    85123A    WHITE HANGING HEA…        6 2010-12-01 08:26:00      2.55\n 2 536365    71053     WHITE METAL LANTE…        6 2010-12-01 08:26:00      3.39\n 3 536365    84406B    CREAM CUPID HEART…        8 2010-12-01 08:26:00      2.75\n 4 536365    84029G    KNITTED UNION FLA…        6 2010-12-01 08:26:00      3.39\n 5 536365    84029E    RED WOOLLY HOTTIE…        6 2010-12-01 08:26:00      3.39\n 6 536365    22752     SET 7 BABUSHKA NE…        2 2010-12-01 08:26:00      7.65\n 7 536365    21730     GLASS STAR FROSTE…        6 2010-12-01 08:26:00      4.25\n 8 536366    22633     HAND WARMER UNION…        6 2010-12-01 08:28:00      1.85\n 9 536366    22632     HAND WARMER RED P…        6 2010-12-01 08:28:00      1.85\n10 536367    84879     ASSORTED COLOUR B…       32 2010-12-01 08:34:00      1.69\n# ℹ 406,819 more rows\n# ℹ 2 more variables: CustomerID <dbl>, Country <chr>\n\norder_data$InvoiceNo <- as.numeric(order_data$InvoiceNo)\n\nWarning: NAs introduced by coercion\n\norder_data$TransDate <- as.Date(order_data$InvoiceDate)\n\norder_data$TransTime <- format(order_data$InvoiceDate, format = \"%H:%M:%S\")\n\nglimpse(order_data)\n\nRows: 406,829\nColumns: 10\n$ InvoiceNo   <dbl> 536365, 536365, 536365, 536365, 536365, 536365, 536365, 53…\n$ StockCode   <chr> \"85123A\", \"71053\", \"84406B\", \"84029G\", \"84029E\", \"22752\", …\n$ Description <chr> \"WHITE HANGING HEART T-LIGHT HOLDER\", \"WHITE METAL LANTERN…\n$ Quantity    <dbl> 6, 6, 8, 6, 6, 2, 6, 6, 6, 32, 6, 6, 8, 6, 6, 3, 2, 3, 3, …\n$ InvoiceDate <dttm> 2010-12-01 08:26:00, 2010-12-01 08:26:00, 2010-12-01 08:2…\n$ UnitPrice   <dbl> 2.55, 3.39, 2.75, 3.39, 3.39, 7.65, 4.25, 1.85, 1.85, 1.69…\n$ CustomerID  <dbl> 17850, 17850, 17850, 17850, 17850, 17850, 17850, 17850, 17…\n$ Country     <chr> \"United Kingdom\", \"United Kingdom\", \"United Kingdom\", \"Uni…\n$ TransDate   <date> 2010-12-01, 2010-12-01, 2010-12-01, 2010-12-01, 2010-12-0…\n$ TransTime   <chr> \"08:26:00\", \"08:26:00\", \"08:26:00\", \"08:26:00\", \"08:26:00\"…"
  },
  {
    "objectID": "Projects/Superstore_Orders.html#creating-a-basket-and-storing-it-as-transactiondata",
    "href": "Projects/Superstore_Orders.html#creating-a-basket-and-storing-it-as-transactiondata",
    "title": "Market Basket Analysis",
    "section": "1.3: Creating a basket and storing it as transactionData",
    "text": "1.3: Creating a basket and storing it as transactionData\n\ntransactionData <- ddply(order_data, c(\"InvoiceNo\",\"TransDate\"),\n                         function(df1)paste(df1$Description,\n                                            collapse = \",\"))\ntransactionData$InvoiceNo <- NULL\ntransactionData$Date <- NULL\n\ncolnames(transactionData) <- c(\"items\")\n\nwrite.csv(transactionData,\"data/market_basket_transactions.csv\", quote = FALSE, row.names = FALSE)\n\nRead transaction data:\n\ntrans <- read.transactions('data/market_basket_transactions.csv', \n                           format = 'basket', \n                           quote = \"\",\n                           sep=',')\n\nWarning in asMethod(object): removing duplicated items in transactions\n\ndim(trans)\n\n[1] 18839  4231\n\n\ndim(data) shows that there are 18,839 transactions (rows) and 4231 items (columns).\n\nsummary(trans)\n\ntransactions as itemMatrix in sparse format with\n 18839 rows (elements/itemsets/transactions) and\n 4231 columns (items) and a density of 0.005236714 \n\nmost frequent items:\nWHITE HANGING HEART T-LIGHT HOLDER           REGENCY CAKESTAND 3 TIER \n                              2011                               1830 \n           JUMBO BAG RED RETROSPOT                      PARTY BUNTING \n                              1635                               1397 \n     ASSORTED COLOUR BIRD ORNAMENT                            (Other) \n                              1385                             409149 \n\nelement (itemset/transaction) length distribution:\nsizes\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1 1401  734  644  635  667  611  576  589  621  524  551  502  476  521  548 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n 547  469  440  481  424  414  349  337  312  245  267  251  221  265  232  204 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n 173  170  173  149  125  139  110  129  123  115  110   98   92   87   90   82 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n  79   79   80   68   59   65   68   63   49   55   49   47   37   45   35   33 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n  35   32   40   39   38   23   29   32   14   27   32   25   21   19   17   10 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n  17   18   19   16   20   16   11   15   13    9    8   11   15   12   10    5 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   8   10   11    3    7   13    4    9    7    2    3    3    6    4    3    3 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   2    5    4    4    7    5    5    5    5    4    8    5    1    4    5    3 \n 129  131  133  134  135  136  137  138  139  140  141  142  143  144  145  147 \n   4    2    1    4    1    1    3    3    1    1    2    2    2    2    1    5 \n 149  150  151  152  153  156  158  159  160  165  166  168  171  172  178  179 \n   1    1    1    2    1    2    1    1    1    1    1    1    1    2    3    2 \n 181  182  186  188  194  195  197  205  206  209  212  221  231  251  260  264 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 274  284  340  352  357  367  380  388  423  441  443  530  534  548 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   1.00    8.00   16.00   22.16   28.00  548.00 \n\nincludes extended item information - examples:\n                      labels\n1                   1 HANGER\n2     10 COLOUR SPACEBOY PEN\n3 12 COLOURED PARTY BALLOONS\n\n\nsummary() data reveals that the 2-itemset size is 1401, the largest amongst all k-itemsets."
  },
  {
    "objectID": "Projects/Superstore_Orders.html#select-only-association-rules-with-confidence-greater-than-0.6-or-60",
    "href": "Projects/Superstore_Orders.html#select-only-association-rules-with-confidence-greater-than-0.6-or-60",
    "title": "Market Basket Analysis",
    "section": "4.1: Select only association rules with confidence greater than 0.6 or 60%",
    "text": "4.1: Select only association rules with confidence greater than 0.6 or 60%\n\nsubRules<-association_rules[quality(association_rules)$confidence > 0.6]\n\nsummary(subRules)\n\nset of 274262 rules\n\nrule length distribution (lhs + rhs):sizes\n    2     3     4     5     6     7     8     9    10 \n  128  8208 24106 57299 85063 66943 27329  4826   360 \n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  2.000   5.000   6.000   6.025   7.000  10.000 \n\nsummary of quality measures:\n    support           confidence        coverage             lift        \n Min.   :0.001009   Min.   :0.8000   Min.   :0.001009   Min.   :  7.494  \n 1st Qu.:0.001062   1st Qu.:0.8333   1st Qu.:0.001168   1st Qu.: 16.174  \n Median :0.001115   Median :0.8750   Median :0.001327   Median : 19.893  \n Mean   :0.001288   Mean   :0.8856   Mean   :0.001461   Mean   : 32.820  \n 3rd Qu.:0.001327   3rd Qu.:0.9231   3rd Qu.:0.001539   3rd Qu.: 29.643  \n Max.   :0.025054   Max.   :1.0000   Max.   :0.030893   Max.   :897.095  \n     count       \n Min.   : 19.00  \n 1st Qu.: 20.00  \n Median : 21.00  \n Mean   : 24.26  \n 3rd Qu.: 25.00  \n Max.   :472.00  \n\nmining info:\n  data ntransactions support confidence\n trans         18839   0.001        0.8\n                                                                           call\n apriori(data = trans, parameter = list(supp = 0.001, conf = 0.8, maxlen = 10))\n\n\nInteractive Scatterplot:\n\nplot(subRules, \n     method = \"scatterplot\", \n     measure = c(\"support\", \"confidence\"),\n     shading = \"lift\",\n     max = 100,\n     jitter = 0,\n     engine = \"plotly\")\n\nWarning: Too many rules supplied. Only plotting the best 100 using 'lift'\n(change control parameter max if needed)."
  },
  {
    "objectID": "Projects/Superstore_Orders.html#generating-rules-for-specific-items",
    "href": "Projects/Superstore_Orders.html#generating-rules-for-specific-items",
    "title": "Market Basket Analysis",
    "section": "4.2 Generating rules for specific items",
    "text": "4.2 Generating rules for specific items\nSuppose we would like to find out more about rules regarding most frequent item, “WHITE HANGING HEART T-LIGHT HOLDER”:\n\nrules_frequent_item <- apriori (data=trans, \n                                parameter=list (supp=0.001,conf = 0.6), \n                                appearance = list (default=\"lhs\",rhs=\"WHITE HANGING HEART T-LIGHT HOLDER\"), \n                                control = list (verbose=F))\n\nrules_frequent_item <-sort(rules_frequent_item,\n                               decreasing = TRUE,\n                               by = \"confidence\")\n\n# remove redundant rules that are subsets of larger rules\nsubsetRules <- which(colSums(is.subset(rules_frequent_item, rules_frequent_item)) > 1) \n#length(subsetRules) #> 584\nrules_frequent_item <- rules_frequent_item[-subsetRules]\n\ninspect(sort(rules_frequent_item[1:20], by = \"lift\"))\n\n     lhs                                       rhs                                      support confidence    coverage     lift count\n[1]  {KNITTED UNION FLAG HOT WATER BOTTLE,                                                                                           \n      SET 7 BABUSHKA NESTING BOXES}         => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001220872  1.0000000 0.001220872 9.367976    23\n[2]  {GLASS STAR FROSTED T-LIGHT HOLDER,                                                                                             \n      SET 7 BABUSHKA NESTING BOXES}         => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001220872  0.9583333 0.001273953 8.977644    23\n[3]  {GLASS STAR FROSTED T-LIGHT HOLDER,                                                                                             \n      WHITE METAL LANTERN}                  => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001114709  0.9545455 0.001167790 8.942159    21\n[4]  {GLASS STAR FROSTED T-LIGHT HOLDER,                                                                                             \n      KNITTED UNION FLAG HOT WATER BOTTLE}  => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001114709  0.9545455 0.001167790 8.942159    21\n[5]  {GLASS STAR FROSTED T-LIGHT HOLDER,                                                                                             \n      RED WOOLLY HOTTIE WHITE HEART.}       => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001061627  0.9090909 0.001167790 8.516342    20\n[6]  {SET 7 BABUSHKA NESTING BOXES,                                                                                                  \n      WHITE METAL LANTERN}                  => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001061627  0.9090909 0.001167790 8.516342    20\n[7]  {KNITTED UNION FLAG HOT WATER BOTTLE,                                                                                           \n      WHITE METAL LANTERN}                  => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001008546  0.9047619 0.001114709 8.475788    19\n[8]  {GLASS STAR FROSTED T-LIGHT HOLDER,                                                                                             \n      WOOD 2 DRAWER CABINET WHITE FINISH}   => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001061627  0.8333333 0.001273953 7.806647    20\n[9]  {CREAM CUPID HEARTS COAT HANGER,                                                                                                \n      KNITTED UNION FLAG HOT WATER BOTTLE}  => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001008546  0.8260870 0.001220872 7.738763    19\n[10] {PACK OF 60 DINOSAUR CAKE CASES,                                                                                                \n      POPCORN HOLDER,                                                                                                                \n      SET OF 4 PANTRY JELLY MOULDS}         => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001008546  0.8260870 0.001220872 7.738763    19\n[11] {CREAM CUPID HEARTS COAT HANGER,                                                                                                \n      SET 7 BABUSHKA NESTING BOXES}         => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001061627  0.8000000 0.001327034 7.494381    20\n[12] {SET 7 BABUSHKA NESTING BOXES,                                                                                                  \n      WOOD 2 DRAWER CABINET WHITE FINISH}   => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001061627  0.8000000 0.001327034 7.494381    20\n[13] {HEART OF WICKER LARGE,                                                                                                         \n      HOME BUILDING BLOCK WORD,                                                                                                      \n      NATURAL SLATE HEART CHALKBOARD}       => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001061627  0.8000000 0.001327034 7.494381    20\n[14] {VINTAGE BILLBOARD LOVE/HATE MUG,                                                                                               \n      WOOD 2 DRAWER CABINET WHITE FINISH}   => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001008546  0.7916667 0.001273953 7.416314    19\n[15] {RED WOOLLY HOTTIE WHITE HEART.,                                                                                                \n      WHITE METAL LANTERN}                  => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001008546  0.7916667 0.001273953 7.416314    19\n[16] {SAVE THE PLANET MUG,                                                                                                           \n      SET 7 BABUSHKA NESTING BOXES}         => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001008546  0.7916667 0.001273953 7.416314    19\n[17] {CREAM CUPID HEARTS COAT HANGER,                                                                                                \n      WHITE METAL LANTERN}                  => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001167790  0.7857143 0.001486278 7.360553    22\n[18] {SET 7 BABUSHKA NESTING BOXES,                                                                                                  \n      WOODEN PICTURE FRAME WHITE FINISH}    => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001167790  0.7857143 0.001486278 7.360553    22\n[19] {RED WOOLLY HOTTIE WHITE HEART.,                                                                                                \n      SET 7 BABUSHKA NESTING BOXES}         => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001327034  0.7812500 0.001698604 7.318731    25\n[20] {GLASS STAR FROSTED T-LIGHT HOLDER,                                                                                             \n      WOODEN FRAME ANTIQUE WHITE}           => {WHITE HANGING HEART T-LIGHT HOLDER} 0.001061627  0.7692308 0.001380116 7.206135    20\n\n\nPlot top 10 rules for item by confidence:\n\nrules_frequent_item <-sort(rules_frequent_item,\n                          decreasing = TRUE,\n                          by = \"confidence\")\n\ntop10_rules <- rules_frequent_item[1:10]\n\nplot(top10_rules,\n     method = \"graph\",\n     engine = \"htmlwidget\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Exploring Population Statistics of the City of Engagement \nDesign a user-friendly and interactive solution that helps city managers and planners to explore complex population data in an engaging way and reveal hidden patterns. This project aims to reveal the demographic and financial characteristics of the City of Engagement, using appropriate static and interactive statistical graphics methods in R."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#installing-r-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#installing-r-packages",
    "title": "Take-home Exercise 1",
    "section": "1.1: Installing R packages",
    "text": "1.1: Installing R packages\npacman::p_load() function from the pacman package is used in the following code chunk to install and call the libraries of multiple R packages:\n\npacman::p_load(tidyverse, ggstatsplot, ggridges, plotly, \n               patchwork, scales, paletteer, viridis,\n               ggiraph, gganimate, gifski, ggpubr, \n               ggdist, ggrain, qqplotr, gt, ggpmisc, \n               transformr, Hmisc, vcd, knitr, \n               kableExtra, DT, rstatix, urbnthemes)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-sets",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-sets",
    "title": "Take-home Exercise 1",
    "section": "1.2: Data Sets",
    "text": "1.2: Data Sets\nTwo datasets are provided for the task: Participants.csv and FinancialJournal.csv.\nThese are uploaded as demo_data and financial_data respectively."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary-statistics-of-demo_data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary-statistics-of-demo_data",
    "title": "Take-home Exercise 1",
    "section": "1.2.1: Summary Statistics of demo_data",
    "text": "1.2.1: Summary Statistics of demo_data\n\n\ncode block\ndemo_data <- read_csv(\"data/Participants.csv\")\n\n\n\nFirst 5 RowsDataset StructureData Health\n\n\nDisplaying first 5 rows using head():\n\nhead(demo_data,5) %>%\n  kbl() %>%\n  kable_material()\n\n\n\n \n  \n    participantId \n    householdSize \n    haveKids \n    age \n    educationLevel \n    interestGroup \n    joviality \n  \n \n\n  \n    0 \n    3 \n    TRUE \n    36 \n    HighSchoolOrCollege \n    H \n    0.0016267 \n  \n  \n    1 \n    3 \n    TRUE \n    25 \n    HighSchoolOrCollege \n    B \n    0.3280865 \n  \n  \n    2 \n    3 \n    TRUE \n    35 \n    HighSchoolOrCollege \n    A \n    0.3934696 \n  \n  \n    3 \n    3 \n    TRUE \n    21 \n    HighSchoolOrCollege \n    I \n    0.1380634 \n  \n  \n    4 \n    3 \n    TRUE \n    43 \n    Bachelors \n    H \n    0.8573967 \n  \n\n\n\n\n\n\n\nChecking the structure of demo_data using str():\n\nstr(demo_data)\n\nspc_tbl_ [1,011 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ participantId : num [1:1011] 0 1 2 3 4 5 6 7 8 9 ...\n $ householdSize : num [1:1011] 3 3 3 3 3 3 3 3 3 3 ...\n $ haveKids      : logi [1:1011] TRUE TRUE TRUE TRUE TRUE TRUE ...\n $ age           : num [1:1011] 36 25 35 21 43 32 26 27 20 35 ...\n $ educationLevel: chr [1:1011] \"HighSchoolOrCollege\" \"HighSchoolOrCollege\" \"HighSchoolOrCollege\" \"HighSchoolOrCollege\" ...\n $ interestGroup : chr [1:1011] \"H\" \"B\" \"A\" \"I\" ...\n $ joviality     : num [1:1011] 0.00163 0.32809 0.39347 0.13806 0.8574 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   participantId = col_double(),\n  ..   householdSize = col_double(),\n  ..   haveKids = col_logical(),\n  ..   age = col_double(),\n  ..   educationLevel = col_character(),\n  ..   interestGroup = col_character(),\n  ..   joviality = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\nThere are a total of 1011 rows and 7 variables. The output reveals that variables participantId and householdSize have been read as numeric, continuous data types, but should be analysed as nominal data instead.\n\n\nChecking for duplicates:\n\ndemo_data[duplicated(demo_data),]\n\n# A tibble: 0 × 7\n# ℹ 7 variables: participantId <dbl>, householdSize <dbl>, haveKids <lgl>,\n#   age <dbl>, educationLevel <chr>, interestGroup <chr>, joviality <dbl>\n\n\nFrom the output, there are no duplicated rows found in demo_data.\nChecking for missing values:\n\nsum(is.na(demo_data))\n\n[1] 0\n\n\nFrom the output, there are zero missing values across all columns in demo_data.\n\n\n\n   \n Changing Data Types:\n\nparticipantId is classified as <dbl>, numerical continuous data, instead of nominal. This is cast as <chr> class using as.character()\neducationLevel is classified as <chr> categorical data, and consists of four levels, with inherent hierarchy. This variable is cast as factor type on an ordinal scale using the ordered() function\nhouseholdSize and interestGroup are classified as <dbl> and <chr> respectively, but are categorical in nature with different levels. These variables are cast as factors using as.factor()\n\n\n\ncode block\ndemo_data_new <- demo_data %>%\n  # Changing participantId to character \n  mutate(participantId = as.character(demo_data$participantId),\n\n  # Updating educationLevel with ordinal scale\n  educationLevel = ordered(demo_data$educationLevel, levels = c(\"Graduate\", \"Bachelors\", \"HighSchoolOrCollege\", \"Low\")),\n\n  # Casting householdSize and interestGroup as factors\n  householdSize = as.factor(demo_data$householdSize),\n  interestGroup = as.factor(demo_data$interestGroup)\n  )\n\n\n\n\nVisual Summary of demo_data_new:\n\n\ncode block\n# Setting default theme for all plots\nset_urbn_defaults(\"print\", base_family = \"Lato\")\n\n# Assigning each plot to a variable name to patch together\ndemo_p1 <- ggplot(demo_data_new, aes(x = householdSize)) +\n  geom_bar() +\n  labs(\n    title = \"Household Size\",\n    x = NULL,\n    y = NULL\n  ) +\n  # Set limit to ensure that geom_text annotation is not cut off\n  ylim(0,420\n  ) + \n  geom_text(\n    stat = \"count\",\n    aes(label = after_stat(count)),\n    vjust = -1) #< Set count annotations above bar\n\ndemo_p2 <- ggplot(demo_data_new, aes(x = haveKids)) +\n  geom_bar() +\n  labs(\n    title = \"Households with Children\",\n    x = NULL,\n    y = NULL\n  ) +\n  ylim(0,800\n  ) +\n  geom_text(\n    stat = \"count\",\n    aes(label = after_stat(count)),\n    vjust = -1)\n\ndemo_p3 <- ggplot(demo_data_new, aes(x = age)) +\n  geom_dotplot(\n    binwidth = 1,\n    stackratio = 1.2,\n    stackdir = \"up\",\n    fill = \"#1696d2\", #< Fill colour same as bar charts\n    color = NA,\n    dotsize = 0.6\n  ) +\n  labs(\n    title = \"Age\",\n    x = NULL,\n    y = NULL)\n\ndemo_p4 <- ggplot(demo_data_new, aes(x = educationLevel)) +\n  geom_bar() +\n  labs(\n    title = \"Highest Education\",\n    x = NULL,\n    y = NULL\n  ) +\n  ylim(0,600\n  ) +\n  geom_text(\n    stat = \"count\",\n    aes(label = after_stat(count)),\n    vjust = -1)\n\ndemo_p5 <- ggplot(demo_data_new, aes(x = interestGroup)) +\n  geom_bar() +\n  labs(\n    title = \"Interest Group\",\n    x = NULL,\n    y = NULL\n  ) +\n  ylim(0,150\n  ) +\n  geom_text(\n    stat = \"count\",\n    aes(label = after_stat(count)),\n    vjust = -1)\n\ndemo_jov <- ggplot(\n    demo_data_new, \n    aes(x = joviality)\n  ) +\n  geom_dotplot(\n    stackratio = 1.2,\n    stackdir = \"up\",\n    fill = \"#1696d2\", #< Fill colour same as bar charts\n    color = NA,\n    dotsize = .3\n  ) +\n  labs(\n    title = \"Joviality\",\n    x = NULL,\n    y = NULL\n  ) +\n  theme(\n    axis.text.y = element_blank(), \n    panel.grid.major = element_blank(), \n    plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\ndemo_jov\n\n\n\n\n\n\n\ncode block\n# Patch all other summary plots together\nhouse_patch <- demo_p1 + demo_p2 #< patch together first so that age plot takes up larger width\ndemo_patch <- ((demo_p3 + house_patch) / (demo_p5 + demo_p4)\n              ) +\n              plot_layout(heights = c(3,2.5)\n              ) + \n              plot_annotation(\n                title = \"Summary Statistics of Demographic Data\")\n\ndemo_patch & \n  theme(\n  # Remove y axis since annotations already show count\n  axis.text.y = element_blank(), \n  # Remove lines in panel background for cleaner design\n  panel.grid.major = element_blank(), \n  # Same colour as webpage\n  plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  ) \n\n\n\n\n\n\nInitial Insights from Summary Statistics\n\nThere seems to be a fairly even distribution of participants across householdSize and interestGroup. However, there is are uneven disributions across joviality score and age, with multimodal peaks in the dotplots.\nThe proportion of participants without children is more than twice that of those without children\nApproximately half of the participants have attained the highest education at high school or college level.\n\nThe distributions and correlations of these variables will be investigated further in subsequent sections, after appropriate data wrangling techniques have been applied."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary-statistics-of-financial_data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary-statistics-of-financial_data",
    "title": "Take-home Exercise 1",
    "section": "1.2.2: Summary Statistics of financial_data",
    "text": "1.2.2: Summary Statistics of financial_data\n\n\ncode block\nfinancial_data <- read_csv(\"data/FinancialJournal.csv\")\n\n\n\nAt a GlimpseData Health\n\n\n\nglimpse(financial_data)\n\nRows: 1,513,636\nColumns: 4\n$ participantId <dbl> 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6,…\n$ timestamp     <dttm> 2022-03-01, 2022-03-01, 2022-03-01, 2022-03-01, 2022-03…\n$ category      <chr> \"Wage\", \"Shelter\", \"Education\", \"Wage\", \"Shelter\", \"Educ…\n$ amount        <dbl> 2472.50756, -554.98862, -38.00538, 2046.56221, -554.9886…\n\n\nThe dataset captures specific financial transactions by participants, with a single transaction recorded in each row. Participants may have multiple transactions over time.\n\n\nChecking for duplicates:\n\nfinancial_data[duplicated(financial_data),]\n\n# A tibble: 1,113 × 4\n   participantId timestamp           category   amount\n           <dbl> <dttm>              <chr>       <dbl>\n 1             0 2022-03-01 00:00:00 Shelter    -555. \n 2             0 2022-03-01 00:00:00 Education   -38.0\n 3             1 2022-03-01 00:00:00 Shelter    -555. \n 4             1 2022-03-01 00:00:00 Education   -38.0\n 5             2 2022-03-01 00:00:00 Shelter    -557. \n 6             2 2022-03-01 00:00:00 Education   -12.8\n 7             3 2022-03-01 00:00:00 Shelter    -555. \n 8             3 2022-03-01 00:00:00 Education   -38.0\n 9             4 2022-03-01 00:00:00 Shelter   -1556. \n10             4 2022-03-01 00:00:00 Education   -12.8\n# ℹ 1,103 more rows\n\n\nFrom the output, there are 1113 duplicated rows found in financial_data.\nChecking for missing values:\n\nsum(is.na(financial_data))\n\n[1] 0\n\n\nFrom the output, there are zero missing values across all columns in financial_data.\n\n\n\n\n\n Data Quality Issues:\n\nduplicated() revealed that there were 1113 duplicated entries in the financial data. These are removed from the dataframe. These will be removed using dplyr::unique() function\nparticipantId is classified as <dbl>, numerical continuous data, instead of nominal. This is cast as <chr> class using as.character()\ncategory is classified as <chr>, but is categorical in nature with six different levels. This is cast as factor type using as.factor()\ntimestamp contains both Date and Time, which is not suitable for analysis. Year-Month is extracted and saved into a separate variable, transDate, and cast as factor (categorical).\namount is reflected as a numeric value with 3 decimal places. This is rounded to 2 d.p. to reflect standard currency structure while maintaing accuracy.\n\nData format is unsuitable for analysis: pivot table with individual columns per category would give a better monthly summary of financial transactions by participant.\n\n\nAltering table format of financial_data:\n\nStep 1: Changing data types:Step 2: Create pivot table\n\n\n\n# Ensuring that duplicates are removed\nfinancial_data <- unique(financial_data)\n\n\nfinancial_data_new <- financial_data %>%\n  # Changing participantId to character \n  mutate(participantId = as.character(financial_data$participantId),\n\n  # Casting category as factor\n  category = as.factor(financial_data$category),\n\n  # Extracting Month-Year from timestamp and casting as factor\n  transDate = as.factor(format(parse_date_time(timestamp, \"YmdHMS\"), \"%Y-%m\")),\n  \n  # Rounding amount to 2 decimal places\n  amount = as.integer(round(amount, digits = 2))) %>%\n  \n  # remove timestamp column\n  select(-timestamp) %>%\n  \n  # Sort by Participant ID\n  arrange(participantId)\n\n\n\n\nfinancial_pivot <- financial_data_new %>%\n                    # Define row groups \n                    group_by(participantId, transDate) %>%\n  \n                    # Sum total amount per category for each month\n                    summarise(\n                      Education = sum(amount[category == \"Education\"]),\n                      Food = sum(amount[category == \"Food\"]),\n                      Recreation = sum(amount[category == \"Recreation\"]),\n                      Shelter = sum(amount[category == \"Shelter\"]),\n                      RentAdj = sum(amount[category == \"RentAdjustment\"]),\n                      Wage = sum(amount[category == \"Wage\"])) %>%\n                    ungroup()\n\n\n\n\n\n\ncode block\nhead(financial_pivot,5) %>%\n  kbl() %>%\n  kable_styling(\n    full_width = F, \n    bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n \n  \n    participantId \n    transDate \n    Education \n    Food \n    Recreation \n    Shelter \n    RentAdj \n    Wage \n  \n \n\n  \n    0 \n    2022-03 \n    -38 \n    -259 \n    -335 \n    -554 \n    0 \n    11902 \n  \n  \n    0 \n    2022-04 \n    -38 \n    -255 \n    -213 \n    -554 \n    0 \n    8610 \n  \n  \n    0 \n    2022-05 \n    -38 \n    -257 \n    -368 \n    -554 \n    0 \n    9020 \n  \n  \n    0 \n    2022-06 \n    -38 \n    -249 \n    -446 \n    -554 \n    0 \n    9020 \n  \n  \n    0 \n    2022-07 \n    -38 \n    -262 \n    -1030 \n    -554 \n    0 \n    8610 \n  \n\n\n\n\n\n   \nVisualising Expenditure Trends over Data Time Range:\n\nDesign Considerations\n\nTo visualise the different expenditure trends over time, a line plot was chosen\n\nSeparate lines were used for each expenditure category in order to show trend and amount differences\n\ngeom_point() dots were added to the trend lines to identify points in time, to visualise month-on-month changes\n\n\n Average expenditure per category is calculated from financial_pivot:\n\nUse group_by() to condense transactions by year-month\npivot_longer() to transpose categories back into a single column with factor levels, such that each expenditure category can be represented by a different line.\n\n\n\ncode block\n# Calculating mean amount per category\nmonthly_mean <- financial_pivot %>%\n    group_by(transDate) %>%\n    summarise(\n      num_people = n_distinct(participantId),\n      Education = abs(round((sum(Education)/num_people),2)),\n      Food = abs(round((sum(Food)/num_people),2)),\n      Recreation = abs(round((sum(Recreation)/num_people),2)),\n      Shelter = abs(round((sum(Shelter)/num_people),2)),\n      RentAdj = round((sum(RentAdj)/num_people),2),\n      Wage = round((sum(Wage)/num_people),2)) %>% \n  # change transDate to ymd format to arrange by date in lineplot\n    mutate(\n      transDate = ymd(paste(transDate, \"01\", sep = \"-\"))) %>% \n    ungroup()\n\nmonthly_mean %>%\n  kbl() %>%\n  kable_styling(full_width = F, bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n \n  \n    transDate \n    num_people \n    Education \n    Food \n    Recreation \n    Shelter \n    RentAdj \n    Wage \n  \n \n\n  \n    2022-03-01 \n    1011 \n    14.12 \n    307.30 \n    619.17 \n    624.27 \n    52.85 \n    6314.80 \n  \n  \n    2022-04-01 \n    880 \n    12.90 \n    328.17 \n    426.91 \n    635.77 \n    1.62 \n    3923.61 \n  \n  \n    2022-05-01 \n    880 \n    12.90 \n    338.31 \n    368.68 \n    634.11 \n    0.00 \n    4098.12 \n  \n  \n    2022-06-01 \n    880 \n    12.90 \n    327.00 \n    344.98 \n    634.11 \n    0.00 \n    4082.08 \n  \n  \n    2022-07-01 \n    880 \n    12.90 \n    338.49 \n    361.26 \n    634.11 \n    0.00 \n    3942.84 \n  \n  \n    2022-08-01 \n    880 \n    12.90 \n    337.62 \n    336.34 \n    634.11 \n    0.00 \n    4257.32 \n  \n  \n    2022-09-01 \n    880 \n    12.90 \n    326.89 \n    330.82 \n    634.11 \n    0.00 \n    4083.92 \n  \n  \n    2022-10-01 \n    880 \n    12.90 \n    338.35 \n    358.11 \n    634.11 \n    0.00 \n    3940.10 \n  \n  \n    2022-11-01 \n    880 \n    12.90 \n    326.85 \n    315.82 \n    634.11 \n    0.00 \n    4080.11 \n  \n  \n    2022-12-01 \n    880 \n    12.90 \n    337.89 \n    347.01 \n    634.11 \n    0.00 \n    4103.61 \n  \n  \n    2023-01-01 \n    880 \n    12.90 \n    338.06 \n    341.48 \n    634.11 \n    0.00 \n    4098.06 \n  \n  \n    2023-02-01 \n    880 \n    12.90 \n    304.88 \n    297.04 \n    634.11 \n    0.00 \n    3724.34 \n  \n\n\n\n\n\nFrom the table output, there were transactions from all 1011 participants in Mar-2022, but only 880 from Apr-2022 onwards. This suggests that the transactions from those 31 participants could have been skewing the data. financial data from 2022-03 will thus be excluded from datasets for further analysis using filter() function.\n\n\ncode block\n# Removing records from transDate \nfinancial_data_new <- financial_data_new %>%\n                        filter(transDate != \"2022-03\")\n\nfinancial_pivot <- financial_pivot %>%\n                    filter(transDate != \"2022-03\")\n\nmonthly_mean <- monthly_mean %>%\n                  filter(transDate != \"2022-03-01\")\n\n\nVisual Summary of financial data: monthly_mean:\n\n\ncode block\n# Extracting only expenditure on food and recreation\nfood_rec <- monthly_mean %>%\n    select(transDate, Food, Recreation) %>%\n    pivot_longer(\n      cols = !transDate, \n      names_to = \"category\",\n      values_to = \"amount\") %>%\n    mutate(\n      category = as.factor(category))\n  \n# Line plot to show variations in food and recreation\nfood_recplot <- ggplot(food_rec, \n  aes(x = transDate, \n      y= amount, \n      color = category) #< Ensure that each category is color coded\n  ) + \n  geom_line(\n    # Make line thicker\n    linewidth = 1\n  ) + \n  geom_point(\n    aes(\n      x = transDate, \n      y = amount, \n      color = category),\n    size = 1.5\n  ) +\n  scale_color_manual(\n    values = c(\"Food\" = \"#fdbf11\", \n              \"Recreation\" = \"grey10\")\n  ) +\n  scale_x_date(\n    date_labels = \"%Y-%m\", \n    date_breaks = \"1 month\"\n  ) +\n  scale_y_continuous(\n    # Ensuring that units were added to y-axis \n    labels = scales::dollar\n  ) + \n  labs(\n    title = \"Decreasing Trend in Monthly Expenditure on Recreation\",\n    subtitle = \"Variations in expenditure on Food, with sharp decline in Feb 2023\",\n    x = NULL,\n    y = NULL\n  ) +\n  theme(\n    plot.background = element_rect(\n      fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\n# Extracting only expenditure on Shelter and Education\nrent_edu <- monthly_mean %>%\n    select(transDate, Shelter, Education) %>%\n    pivot_longer(\n      cols = !transDate, \n      names_to = \"category\",\n      values_to = \"amount\") %>%\n    mutate(\n      category = as.factor(category))\n\n# Faceted line plot to show little variations in Shelter and Education\nrent_eduplot <- ggplot(rent_edu, \n  aes(x = transDate, \n      y= amount, \n      color = category) #< Ensure that each category is color coded\n  ) +\n  geom_line(\n    # Make line thicker\n    linewidth = 1\n  ) + \n  geom_point(\n    aes(\n      x = transDate, \n      y = amount, \n      color = category),\n    size = 1.5\n  ) +\n  annotate(\n    geom = \"text\",\n    # format x-axis value as date to specify coordinates\n    x = as.Date(\"2022-09-01\"),\n    y = 400,\n    label = \"Large gap in monthly expenditure on both categories\"\n  ) +\n  scale_color_manual(\n    values = c(\"Shelter\" = \"salmon\", \n              \"Education\" = \"#1696d2\")\n  ) +\n  scale_x_date(\n    date_labels = \"%Y-%m\", \n    date_breaks = \"1 month\"\n  ) +\n  scale_y_continuous(\n    # Ensuring that units were added to y-axis \n    labels = scales::dollar\n  ) + \n  labs(\n    title = \"Little Variation in Monthly Expenditure on Education and Shelter\",\n    x = NULL,\n    y = NULL\n  ) +\n  theme(\n    plot.background = element_rect(\n      fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\n# Patchwork both plots together\nexpatch <- (food_recplot / rent_eduplot) + \n  plot_layout(heights = c(3,2)) #< Allocate more space to top graph \n\nexpatch & theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\n\nInitial Insights from Line Chart and Table\n\nExpenditure on education is the lowest, and has remained constant > probably refers to school fees, which is normally a fixed monthly amount\nExpenditure on recreation and food shows monthly variation, and have decreased from Apr 2022 to Feb 2023\nExpenditure on Shelter is significantly higher that other categories, and also remains constant > probably refers to rent"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#computing-aggregate-transaction-variables-based-on-financial_data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#computing-aggregate-transaction-variables-based-on-financial_data",
    "title": "Take-home Exercise 1",
    "section": "2.1: Computing Aggregate Transaction Variables based on financial_data",
    "text": "2.1: Computing Aggregate Transaction Variables based on financial_data\n\nVisual Considerations\n\nRaincloud plots are used to capture the density and range of values by expense, with dotplots beneath the half-density plots revealing patterns in consistency\n\nSeparate plots were coded for -ve and +ve transactions, with Food & Recreation and Shelter & Education separated as well. This is due to the wide scale of y-axis values, which made the narrower density plots too condensed for the distribution to be viewed in full.\n\npatchwork package was used to group the plots together in a single figure, using plot_layout(heights) to configure height ratio of the overall patched plots\n\n\n\n\ncode block\n# Filtering Food and Recreation from data\nfr_range <- financial_data_new %>%\n    filter(\n      category %in% c(\"Food\", \"Recreation\")) %>%\n  # Getting Average amount per participant\n    group_by(\n      participantId, category) %>%\n    summarise(\n      num = n(),\n      avgamount = round((sum(amount)/num),2)) %>%\n  ungroup()\n\n# Food and Recreation Plot\nfr <- ggplot(fr_range, \n       aes(1, \n           y = avgamount, \n           fill = category,\n          color = category)\n  ) +\n  # Raincloud Plot\n  geom_rain(\n    alpha = .7,\n    # Adding outline to boxplot\n    boxplot.args = list(\n              color = \"grey20\", outlier.shape = NA),\n    violin.args = list(alpha = .7)\n  ) +\n  # Specifying colors, to match previous graph\n  scale_fill_manual(\n    values = c(\"#fdbf11\",\"grey10\")\n  ) +\n  scale_color_manual(\n    values = c(\"#fdbf11\",\"grey10\")\n  ) +\n  scale_y_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    labels = scales::dollar\n  ) +\n  labs(\n    title = \"Wider Range of Amount Spent on Recreation Compared to Food\"\n  ) +\n  theme(\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  ) + \n  coord_flip() \n\n# Filtering Education amounts and computing average\nes_range <- financial_data_new %>%\n    filter(\n      category %in% c(\"Education\", \"Shelter\")) %>%\n    group_by(\n      participantId, category) %>%\n    summarise(\n      num = n(),\n      avgamount = round((sum(amount)/num),2)) %>%\n  ungroup()\n\n# Education plot\nes <- ggplot(es_range, \n       aes(1, \n           y = avgamount, \n           fill = category,\n           color = category)\n  ) +\n  geom_rain(\n    alpha = .7,\n    boxplot.args = list(\n              color = \"grey20\", outlier.shape = NA),\n    violin.args = list(alpha = .7)\n  ) +\n  scale_y_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    labels = scales::dollar\n  ) +\n  scale_fill_manual(\n    values = c(\"#1696d2\",\"salmon\")\n  ) +\n  scale_color_manual(\n    values = c(\"#1696d2\",\"salmon\")\n  ) +\n  labs(\n    title = \"Dot Patterns Reveal Consistent Amounts Spent on Education, \\nwith Wider Variations in Amount Spent on Rent\",\n  ) + \n  theme(\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  ) + \n  coord_flip() \n\n# Filtering out +ve transactions\ninc_range <- financial_data_new %>%\n                filter(category %in% c(\"RentAdj\", \"Wage\")) %>%\n      group_by(\n      participantId, category) %>%\n    summarise(\n      num = n(),\n      avgamount = round((sum(amount)/num),2)) %>%\n  ungroup()\n\ninc <- ggplot(inc_range, \n       aes(1, \n           y = avgamount, \n           fill = category,\n          color = category)\n  ) +\n  geom_rain(\n    adjust = 1/6,\n    alpha = .7,\n    boxplot.args = list(\n              color = \"grey20\", outlier.shape = NA),\n    violin.args = list(alpha = .7)\n  ) +\n  # Specifying colors\n  scale_fill_manual(\n    values = c(\"#98cf90\",\"salmon\")\n  ) +\n  scale_color_manual(\n    values = c(\"#98cf90\",\"salmon\")\n  ) +\n  scale_y_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    labels = scales::dollar\n  ) +\n  labs(\n    title = \"Right-skewed Distribution of Average Income\"\n  ) +\n  theme(\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  ) + \n  coord_flip() \n\n\nWarning in (function (mapping = NULL, data = NULL, stat = \"identity\", position\n= \"identity\", : Ignoring unknown parameters: `adjust`\n\n\ncode block\n# Patchwork plots\nbottompatch <- es / inc\nmoneypatch <- (fr / bottompatch\n    ) +\n    plot_layout(\n      heights = c(2,3)\n    ) + \n    plot_annotation(\n      title = \"Varying Distributions of Expenditure and Income\"\n    )\n\nmoneypatch & theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\n\nInsights from Raincloud Plots\n\nTransactions are either outflows (-ve value) or inflows (+ve value)\nWage, Shelter and RentAdjustment have a larger range of values compared to Recreation, Food and Education\nWage seems to be made up of ‘clusters’ of points, suggesting a large income gap between higher wage groups and lower wage groups\n\n\n\n\nNew aggregate variables are computed based on this for further analysis:\n\ntotInflow & totOutflow: Sum of cash inflow and outflow per participant\nmonthly_in: Average total cash inflow per month per participant (Income)\nmonthly_out: Average total cash outflow per month per participant (Expenditure)\nmonthlyWage: Average monthly income, per participant\nexpenseRatio: Ratio of outflow (expense) to inflow (income) per participant\nEducation, Food, Recreation, Shelter: Total expenditure by category\n\n\n\ncode block\n# Create new dataframe with transformed variables\nfinancial_agg <- financial_data_new %>%\n                  group_by(participantId) %>% \n                  summarise(numTrans = n_distinct(transDate), #< Count number of distinct months \n                            netAmount = sum(amount), #< Sum net total amount per participantId\n                            monthlyWage = (sum(amount[category == \"Wage\"]))/numTrans, #< Ave monthly income per participantId\n                            \n                            totRentAdj = sum(amount[category == \"RentAdjustment\"]),\n                            \n                            totInflow = sum(amount[category == \"Wage\"]) + \n                                        sum(amount[category == \"RentAdjustment\"]), #< Compute inflow value\n                            totOutflow = sum(abs(amount[category == \"Education\"])) + \n                                         sum(abs(amount[category == \"Food\"])) +\n                                         sum(abs(amount[category == \"Recreation\"])) +\n                                         sum(abs(amount[category== \"Shelter\"])), #< Compute outflow value\n                            expenseRatio = round((totOutflow/totInflow), 2), #< Compute outflow/inflow ratio\n                        #< Monthly Income and Expenditure\n                            monthly_in = round((totInflow/numTrans), 2), \n                            monthly_out = round((totOutflow/numTrans), 2), \n                        #< % of each category contribution to outflow    \n                            Education = sum(abs(amount[category == \"Education\"])), \n                            Food = sum(abs(amount[category == \"Food\"])),\n                            Recreation = sum(abs(amount[category == \"Recreation\"])),\n                            Shelter = sum(abs(amount[category == \"Shelter\"]))\n                            ) %>%\n                  replace(is.na(.),0) %>%\n                  select(-numTrans) %>% #< Drop column numTrans\n                  arrange(as.numeric(participantId)) %>%\n                  ungroup()\n\n\nfinancial_agg:\n\n\ncode block\nhead(financial_agg, 5) %>%\n  kbl() %>%\n  kable_styling(full_width = F, bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n \n  \n    participantId \n    netAmount \n    monthlyWage \n    totRentAdj \n    totInflow \n    totOutflow \n    expenseRatio \n    monthly_in \n    monthly_out \n    Education \n    Food \n    Recreation \n    Shelter \n  \n \n\n  \n    0 \n    84404 \n    8870.909 \n    0 \n    97580 \n    13176 \n    0.14 \n    8870.91 \n    1197.82 \n    418 \n    2784 \n    3880 \n    6094 \n  \n  \n    1 \n    71293 \n    7810.727 \n    0 \n    85918 \n    14625 \n    0.17 \n    7810.73 \n    1329.55 \n    418 \n    2746 \n    5367 \n    6094 \n  \n  \n    2 \n    62373 \n    6837.091 \n    0 \n    75208 \n    12835 \n    0.17 \n    6837.09 \n    1166.82 \n    132 \n    3016 \n    3571 \n    6116 \n  \n  \n    3 \n    58979 \n    6599.091 \n    0 \n    72590 \n    13611 \n    0.19 \n    6599.09 \n    1237.36 \n    418 \n    3008 \n    4091 \n    6094 \n  \n  \n    4 \n    75376 \n    8568.000 \n    0 \n    94248 \n    18872 \n    0.20 \n    8568.00 \n    1715.64 \n    132 \n    2925 \n    4793 \n    11022"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#banding-of-age-and-wage-into-groups",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#banding-of-age-and-wage-into-groups",
    "title": "Take-home Exercise 1",
    "section": "2.2: Banding of Age and Wage into Groups",
    "text": "2.2: Banding of Age and Wage into Groups\nAge\nThe range of participants’ ages is rather wide, spanning from 18-60 years old. There are also multiple peaks in the distribution:\n\n\ncode block\n# Computing min and max age to annotate plot\nmin_age <- min(demo_data_new$age)\nmax_age <- max(demo_data_new$age)\n\ndemo_age <-demo_p3 + \n            annotate(geom = \"text\", x = min_age, y = 0.83,\n            label = paste0(\"Youngest:\\n\", min_age)) + #< add text annotation to show age range\n            annotate(geom = \"text\", x = max_age, y = 0.83,\n            label = paste0(\"Oldest:\\n\", max_age)) +\n            theme(axis.text.y = element_blank(), #< remove unnecessary elements from plot\n            panel.grid.major = element_blank(),\n            plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\ndemo_age\n\n\n\n\n\n\nThese may be grouped together by percentile, and analysed as age groups instead to give a better overview of different demographics. Each band represents sequential 20th percentiles:\n\nLowest 20th Percentile: 18-26\n20-40th Percentile: 27-35\n40-60th Percentile: 36-44\n60-80th Percentile: 45-52\nTop 20th Percentile: 53-60\n\n\n\n\ncode block\n# Function to bin by 20th Percentile\ncutpct <- function(x) {\n  cut(x, breaks=c(quantile(demo_data_new$age, \n                           probs = seq(0, 1, by = 0.20))), \n      labels=c(\"18-26\",\"27-35\",\"36-44\",\"45-52\",\"53-60\"), \n      include.lowest=TRUE)\n}\n\n# Applying to new column, grouping Age into Age Groups\ndemo_data_new$ageGroup <- sapply(demo_data_new$age, cutpct)\n\n\n# Barchart of ageGroup\ndemo_agegrp<- ggplot(\n  demo_data_new, \n  aes(x = ageGroup)\n  ) +\n  geom_bar() +\n  labs(\n    # Linebreak added to title so it does not get truncated\n    title = \"Participants are evenly\\ndistributed across Age Groups\", \n    x = \"Age Group\",\n    y = NULL\n  ) +\n  geom_text(\n    stat = \"count\",\n    aes(label = after_stat(count)),\n    vjust = -1\n  ) +\n  # Same y-axis limits for both age and wage plots to standardise\n  ylim(0,250) + \n  theme(\n    text = element_text(size = 12),\n    plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\n\nWage\nFrom the boxplot diagram in section 2.2, there is a large variation in wage range, and a segregation between lower and higher wage bands.\n\n\ncode block\ndescribe(financial_agg$monthlyWage)\n\n\nfinancial_agg$monthlyWage \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n     880        0      412        1     4030     2249     1731     1924 \n     .25      .50      .75      .90      .95 \n    2467     3429     4803     6675     8486 \n\nlowest :  1709.273  1709.364  1709.455  1710.182  1719.636\nhighest: 14085.273 14344.636 14496.364 17287.455 17309.091\n\n\n\nBased on the Mean and distribution of values across percentiles as shown above, participants are banded according to annual income:\n\nBottom 20th Percentile: Low\n20-40th Percentile: Mid-low\n40-60th Percentile: Mid\n60-80th Percentile: Mid-high\nTop 20th Percentile: High\n\n\n\n\ncode block\n# Function to bin by 20th Percentile\ncutwpct <- function(x) {\n  cut(x, breaks=c(quantile(financial_agg$monthlyWage, \n                           probs = seq(0, 1, by = 0.20))), \n      labels=c(\"Low\",\"Mid-low\",\"Mid\",\"Mid-high\",\"High\"), \n      include.lowest=TRUE)\n}\n\n# Applying to new column, grouping Age into Age Groups\nfinancial_agg$incomeGroup <- sapply(financial_agg$monthlyWage, cutwpct)\n\n# Barchart of incomeGroup\nfin_incgrp<- ggplot(financial_agg, aes(x = incomeGroup)) +\n                geom_bar() +\n                labs(title = \"Number of Citizens\\nby Income Group\", #< Linebreak added to title so it does not get truncated\n                    x = \"Income Group\",\n                    y = NULL) +\n                geom_text(stat = \"count\",\n                          aes(label = after_stat(count)),\n                          vjust = -1) +\n                ylim(0,250) + #< Upper bound of y-axis limit is set so that geom_text annotations are not cut off\n                theme(text = element_text(size = 12),\n                      axis.text.y = element_blank(), #< Shared y-axis when used in patchwork with age chart\n                      plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\nAge and Income Groups\n\n\ncode block\n(demo_agegrp + fin_incgrp) & theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#combining-datasets-and-computing-annual-income-per-capita",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#combining-datasets-and-computing-annual-income-per-capita",
    "title": "Take-home Exercise 1",
    "section": "2.3: Combining Datasets and Computing Annual Income per Capita",
    "text": "2.3: Combining Datasets and Computing Annual Income per Capita\nThe dataframes are first combined into df_combined:\n\n\ncode block\n#Inner join as only 880 participants are listed in financial data\n\ndf_combined <- merge(demo_data_new, financial_agg, by = \"participantId\") %>%\n              select(unique(colnames(.))) %>%\n              arrange(as.numeric(participantId)) \n\nDT::datatable(df_combined,\n              class =\"compact\")\n\n\n\n\n\n\n\n   \nThe formula used to determine Monthly Income per Capita for this study is as follows: \\[Monthly\\ Income\\ per\\ Capita = \\frac{Monthly\\ Wage}{Household\\ Size}\\]\n\n\ncode block\n# Compute income per capita and save as new variable\ndf_combined <- df_combined %>%\n              mutate(incomePerCapita = round((monthlyWage/as.integer(householdSize)), 0))\n\n# Calculate min, max, 95th percentile and median values for annotations\nmin_incomePC <- round(min(df_combined$incomePerCapita),0)\nmax_incomePC <- round(max(df_combined$incomePerCapita),0)\nq_incomePC <- round(quantile(df_combined$incomePerCapita, probs = .95),0)\nmedian_incomePC <- round(median(df_combined$incomePerCapita),0)\n\n# Histogram of income per capita\nh <- \n  ggplot(\n    df_combined, \n    aes(x = incomePerCapita)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#F8F3E6\"\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    # Set same limits for both plots to ensure justification\n    limits = c(500,12000), \n    # Label with $ unit\n    labels = label_dollar()\n  ) + \n  geom_vline(\n    aes(xintercept = median_incomePC),\n    colour=\"grey20\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 3800, \n    y = 290,\n    label = paste0(\"Median Income per Capita: $\", median_incomePC)\n  ) +\n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\n#Boxplot of Income per capita\nbox <- \n  ggplot(\n    df_combined, \n    aes(y = incomePerCapita)\n  ) + \n  geom_boxplot(\n    outlier.colour=\"salmon\", \n    outlier.shape=16,\n    outlier.size=1, \n    notch=FALSE\n  ) + \n  coord_flip() + \n    #Annotate with amounts to show range of income on boxplot diagram\n  annotate(\n    geom = \"text\", \n    x = 0.38, \n    y = min_incomePC,\n    label = paste0(\"$\", min_incomePC),\n    color = \"grey20\"\n  ) + \n   annotate(\n    geom = \"text\", \n    x = 0.38, \n    y = q_incomePC,\n    label = paste0(\"$\", q_incomePC),\n    color = \"grey20\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0.38, \n    y = max_incomePC,\n    label = paste0(\"$\", max_incomePC),\n    color = \"salmon\"\n  ) + \n  labs(\n    title = \"Right-skewed distribution of Income per Capita\",\n     y = \"\", \n    x = \"\"\n  ) + \n   scale_y_continuous(\n    limits = c(500,12000), \n    labels = label_dollar()\n  ) +\n  stat_boxplot(\n    geom=\"errorbar\", \n    width=0.5\n  ) + \n  theme_minimal() +\n  theme(\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.major = element_blank(),\n     plot.background = element_rect(\n       fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\nhbox <- (box / h) + \n        plot_layout(heights = c(1, 3.5)) #< Scale layout to keep boxplot height shorter\n\nhbox & theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\n\nInsights from Visualisation\n\nThere is a right-skewed distribution of Income per Capita, with median value ($1947) far from the 95th Percentile tail ($5487)\n\nTrail of red points in the boxplot show the presence of outliers and Highest Income per Capita is 4 times that of median: this suggests a large income disparity among City residents\n\nCity Revitalisation Efforts could thus aim to increase affordability of spaces or services to cater to the larger concentration of citizens within or below median income range."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#joviality",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#joviality",
    "title": "Take-home Exercise 1",
    "section": "3.1: Joviality",
    "text": "3.1: Joviality\nEach participant has a joviality score on a scale of 0 to 1. For the purpose of this study, we assume that the closer the score is to 1 (maximum), the more jovial the participant was recorded at the start of the survey. Joviality will thus be analysed across different demographic and financial variables, to find significant patterns and trends. Key portions of the EDA are visualised to aid city revitalisation efforts in determining ways to increase overall joviality of the population.\n\n3.1.1: Distribution\nThe distribution of joviality scores is first visualised to determine the variation of values across the sample population:\n\n\ncode block\nmed_jov <- median(df_combined$joviality)\nmean_jov <- mean(df_combined$joviality)\nstd_jov <- sd(df_combined$joviality)\n\nggplot(\n    df_combined, \n    aes(x = joviality)\n  ) +\n  geom_density(\n    color = \"#1696d2\",\n    adjust = .2,\n    alpha = .6\n  ) +\n  stat_function(\n    fun = dnorm,\n    args = list(mean = mean_jov,\n                sd = std_jov),\n    col = \"grey30\",\n    size = .6\n  ) +\n  geom_vline(\n    aes(xintercept = mean_jov),\n    colour=\"#4d5887\", \n    linewidth = .6, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = mean_jov + 0.12, \n    y = 1.5,\n    label = paste0(\"Mean Joviality: \", round((mean_jov),2)),\n    color = \"#4d5887\"\n  ) +\n  geom_vline(\n    aes(xintercept = med_jov),\n    colour = \"#00AFBB\", \n    linewidth = .6, \n    linetype = \"dashed\") +\n  annotate(\n    geom = \"text\", \n    x = med_jov - 0.12, \n    y = 1.5,\n    label = paste0(\"Median Joviality: \", round((med_jov),2)),\n    color = \"#00AFBB\"\n  ) +\n  labs(\n    title = \"Uneven Distribution of Joviality Score across Participants\",\n    subtitle = \"Median joviality score is close to Mean score, but distribution density reveals multiple peaks and troughs\",\n    x = \"Joviality Score\",\n    y = \"Density\"\n  ) +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\n\n\n\n\n\n\n3.1.2: Are there differences in Joviality Across Income and Age Groups?\nThis study first proposes to find out if specific groups within the population have reported lower or higher joviality scores, and if this difference between factor levels in the sample is significant enough to represent the overall city population.\n\n\n\n\nflowchart LR\nA((Joviality)) -->|differences?| B[Income Groups]\nA -->|differences?| C[Age Groups]\nB -.- C\n\n\n\n\n\n\n\n\n \nA normality assumption test is first conducted across factor levels for joviality score across income and age groups. At a confidence level of 95%, we test the following hypothesis:\n  \\[H_0: Joviality\\ is\\ normally\\ distributed\\ across\\ groups\\]\n\\[H_1: Joviality\\ is\\ not\\ normally\\ distributed\\ across\\ groups\\]\n  Income Groups\n\nDistributionNormality TestANOVA\n\n\n\n\ncode block\nggplot(\n    df_combined, \n    aes(x = joviality, \n        y = incomeGroup,\n        fill = incomeGroup,\n        color = incomeGroup)\n  ) +\n  geom_density_ridges(\n    # Adjust bandwidth to reveal variations \n    bandwidth = .05, \n    alpha = .6\n  ) +\n  labs(\n    title = \"Distribution of Joviality Score Across Income Groups\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0.2, y = 5.9,\n    label = \"High income groups\\nrecorded peaks in lower joviality\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0.8, y = 1.5,\n    label = \"Low income groups\\nrecorded peaks in higher joviality\"\n  ) +\n  theme(\n    legend.position = \"none\",\n    axis.title.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\n\n\n\n\n\n\n\n\ncode block\nggplot(\n    df_combined, \n    mapping = aes(sample = joviality, \n                  fill = incomeGroup)\n  )+\n  stat_qq_band(alpha=0.15) +\n  stat_qq_line(alpha=0.15) +\n  stat_qq_point(size=0.5) + \n  facet_wrap(\n    ~ incomeGroup, \n    nrow = 1 #<nrow used to fit all plots into a line\n  ) + \n  labs(\n    title = \"Deviation from Normality across Income Groups\",\n    subtitle = \"Q-Q plots visually indicate that points diverge from diagonal\",\n    x = \"\", \n    y = \"\"\n  ) +\n  # theme selected as the border and colored title bar makes it easier to differentiate\n  theme_bw() + \n  remove_ticks() +\n  theme(\n    # legend removed as it was unnecessary\n    legend.position = \"none\", \n    axis.text.y = element_blank(),\n    axis.text.x = element_blank(),\n    panel.grid.minor = element_blank(),\n    plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\n\n\n\n\n\n\ncode block\ndf_combined %>%\n      group_by(incomeGroup) %>%\n      shapiro_test(joviality) %>%\n      ungroup() %>%\n      kbl() %>%\n      kable_styling(full_width = F, bootstrap_options = \"responsive\")\n\n\n\n\n \n  \n    incomeGroup \n    variable \n    statistic \n    p \n  \n \n\n  \n    Low \n    joviality \n    0.9275730 \n    0.0000001 \n  \n  \n    Mid-low \n    joviality \n    0.9575466 \n    0.0000450 \n  \n  \n    Mid \n    joviality \n    0.9391820 \n    0.0000008 \n  \n  \n    Mid-high \n    joviality \n    0.9654749 \n    0.0002385 \n  \n  \n    High \n    joviality \n    0.9224990 \n    0.0000000 \n  \n\n\n\n\n\nSince the p-value across mid-low and high income groups is < significance level 0.05, we reject the null hypothesis, concluding that joviality does not follow a normal distribution across all income groups. To test if there is a significant difference between groups, a non-parametric test will be used in subsequent analysis, with median value as measure of central tendency.\n\n\nA non-parametric Kruskal-Wallis one-way ANOVA test is conducted to determine if there is a significant difference in joviality score between income groups. At a significance level of 0.05, we test the following hypothesis:\n\\[H_0: There\\ is\\ no\\ difference\\ in\\ \\mu\\ between\\ income\\ groups\\] \\[H_0: There\\ is\\ a\\ difference\\ in\\ \\mu\\ between\\ two\\ or\\ more\\ income\\ groups\\]\n\n\ncode block\nset.seed(1234)\nggbetweenstats(data = df_combined,\n               x = incomeGroup,\n               y = joviality,\n               type = \"np\",\n               mean.ci = TRUE, \n              pairwise.comparisons = TRUE, \n              pairwise.display = \"s\",\n              p.adjust.method = \"fdr\",\n              messages = FALSE\n              ) +\n  theme_classic() +\n  theme(legend.position = \"none\",\n        plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\nThe p-value is < significance level of 0.05, so we can reject the null hypothesis and conclude that median joviality differs among income groups. In fact, there is a large difference in mean joviality between low income and high income groups, with participants in low income groups having significantly greater joviality (median = 0.69) than those in the high income group (median = 0.27).\n\n\n\n  Age Groups\n\nDistributionNormality TestANOVA\n\n\n\n\ncode block\nggplot(\n    df_combined, \n    aes(x = joviality, \n        y = ageGroup,\n        fill = ageGroup,\n        color = ageGroup)\n  ) +\n  geom_density_ridges(\n    bandwidth = .05, \n    alpha = .6\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5)\n  ) +\n  labs(\n    title = \"Distribution of Joviality Score Across Age Groups\",\n    subtitle = \"Variation of joviality across all age groups -- suggests possible influence of multiple factors\"\n  ) +\n  theme(\n    legend.position = \"none\",\n    axis.title.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\n\n\n\n\n\n\n\n\ncode block\nggplot(df_combined, \n       mapping = aes(sample = joviality, \n                     fill = ageGroup))+\n      stat_qq_band(alpha=0.15) +\n      stat_qq_line(alpha=0.15) +\n      stat_qq_point(size=0.5) + \n      facet_wrap(~ ageGroup, nrow = 1) + #< nrow used to fit all plots into a line\n      labs(title = \"Deviation from normality across Age Groups\",\n           subtitle = \"Q-Q plots visually indicate that points diverge from diagonal at tail ends\",\n           x = \"\", y = \"\") +\n      theme_bw() + #< theme selected as the border and colored title bar makes it easier to differentiate\n      theme(legend.position = \"none\", #< legend removed as it was unnecessary\n            axis.text.y = element_blank(),\n            axis.text.x = element_blank(),\n            axis.ticks.y = element_blank(),\n            axis.ticks.x = element_blank(),\n            panel.grid.minor = element_blank(),\n            plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\n\n\ncode block\ndf_combined %>%\n  group_by(ageGroup) %>%\n  shapiro_test(joviality) %>%\n  ungroup() %>%\n  kbl() %>%\n  kable_styling(full_width = F, bootstrap_options = \"responsive\")\n\n\n\n\n \n  \n    ageGroup \n    variable \n    statistic \n    p \n  \n \n\n  \n    18-26 \n    joviality \n    0.9528571 \n    1.11e-05 \n  \n  \n    27-35 \n    joviality \n    0.9409988 \n    5.00e-07 \n  \n  \n    36-44 \n    joviality \n    0.9425735 \n    9.00e-07 \n  \n  \n    45-52 \n    joviality \n    0.9554757 \n    5.20e-05 \n  \n  \n    53-60 \n    joviality \n    0.9453997 \n    5.40e-06 \n  \n\n\n\n\n\nSince the p-value across most age groups is < 0.05, we reject the null hypothesis, concluding that joviality does not follow a normal distribution across age groups either. To test if there is a significant difference between groups, a non-parametric test will be used in subsequent analysis.\n\n\nA non-parametric Kruskal-Wallis one-way ANOVA test is conducted to determine if there is a significant difference in mean joviality score between age groups. At a significance level of 0.05, we test the following hypothesis:\n\\[H_0: There\\ is\\ no\\ difference\\ in\\ \\mu\\ between\\ age\\ groups\\] \\[H_0: There\\ is\\ a\\ difference\\ in\\ \\mu\\ between\\ two\\ or\\ more\\ age\\ groups\\]\n\n\ncode block\nset.seed(1234)\nggbetweenstats(data = df_combined,\n               x = ageGroup,\n               y = joviality,\n               type = \"np\",\n               mean.ci = TRUE, \n              pairwise.comparisons = TRUE, \n              pairwise.display = \"s\",\n              p.adjust.method = \"fdr\",\n              messages = FALSE\n              ) +\n  theme_classic() +\n  theme(legend.position = \"none\",\n        plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\nThe p-value 0.08 is > significant level of 0.05, so we conclude that there is no significant difference in mean joviality score across age groups.\n\n\n\n\nVisual Considerations\n\nDensity ridges were used to compare across groups to reveal ‘peaks’ between high and low income groups at opposite ends of the joviality spectrum. As there were multiple variations in the distribution of Income and Age Groups, bandwidth argument from geom_density_ridges() was used to alter the bandwidth such that the density estimation was less smoothed out. This enabled the visualisation of the variations present in joviality across the groups.\nTransparency for each density plot was toggled to show overlapping layers. color argument was added to Age Group plot as transparency value was increased due to the multiple overlaps. This enabled clearer visualisation of each group without obscuring.\nAnnotations were added to emphasize on insights from analysis of density\nQ-Q plots were used to reveal deviations from normality for each group. facet_wrap() was used to show the distribution of each group side-by-side for clarity\nkable styling of tables were used to display p-value statistics below each plot.\n\n\n\n\n3.1.3 Joviality Across Both Income and Age\nThe one-way ANOVA tests reported significant differences in joviality between income groups but not between age groups. However, there are still trends that can be observed when comparing multiple groups and different factor levels. This could give more specific insight into demographic patterns, as visualised in the following chart that compares joviality score across both Age and Income groups:\n\nDesign Considerations\n\nA heatmap was selected to visualise the density of joviality by two different categorical variables.\nGradient fill could show the variation in joviality across both categories, with “lighter” gradients representing “happier” or higher joviality scores. This variation was made more obvious with a diverging yellow-blue palette.\nThe plot was made interactive, such that the user could access specific information per tile, without cluttering the plot with figures or annotations.\nSubtitle was added to highlight most important insight from the analysis\nIdeally, I would have changed the font output to match the rest of my visualisations – this proved tricky due to the interactive layer, which had different parameters.\n\n\nIs there an association between income and age groups?\n\\[H_0: There\\ is\\ no\\ association\\ between\\ income\\ and\\ age\\ groups\\] \\[H_1: There\\ is\\ an\\ association\\ between\\ income\\ and\\ age\\ groups\\]\n\n\ncode block\nset.seed(1234)\nggbarstats(\n    df_combined,\n    x = ageGroup, \n    y = incomeGroup,\n    bf.message = FALSE)\n\n\n\n\n\n\n\ncode block\n# Calculate mean joviality per tile\ngbcols <- c(\"ageGroup\", \"incomeGroup\")\n\ncal_joviality <- df_combined %>% \n  group_by(across(all_of(gbcols))) %>% \n  summarise(mean_joviality = round(mean(joviality),2), .groups = \"drop\") %>%\n  ungroup()\n\n# Style tooltip\ntooltip_css <- \"background-color:#3E4254; font-style:bold; color:#F8F3E6;\" \n\n# Tile Plot\ngg_tile <-\n  ggplot(\n    cal_joviality,\n    aes(x = ageGroup, \n        y = incomeGroup)\n  ) +\n  geom_tile_interactive(\n    aes(fill = mean_joviality,\n        tooltip = paste(\"Age Group: \", ageGroup, \"<br>\",\n                        \"Income Group: \", incomeGroup, \"<br>\",\n                        \"Mean Joviality Score: \", mean_joviality))\n  ) + \n  scale_fill_gradient(\n    low = \"#0a4c6a\",\n    high = \"#fdd870\",\n    space = \"Lab\",\n    na.value = \"grey50\",\n    guide = \"colourbar\",\n    aesthetics = \"fill\"\n  ) +  \n labs(\n   title = \"Joviality across Income and Age Groups\",\n    subtitle = \"Younger People from lower Income Groups had the highest joviality scores\",\n    x = \"Age Group\",\n    y = \"Income Group\"\n  ) +\n  theme(\n    legend.position = \"right\",\n    legend.direction = \"vertical\",\n    axis.line.x = element_blank(),\n    panel.grid.major.y = element_blank(),\n    text = element_text(family = \"Lato Regular\")\n  ) +\n  remove_ticks() +\n  theme(\n    plot.background = element_rect(\n      fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\nggiraph::girafe(ggobj = gg_tile,\n                width_svg = 6,\n                height_svg = 6*0.618,\n                fonts = list(sans = \"Lato Regular\"),\n                options = list(opts_tooltip(css = tooltip_css)))                   \n\n\n\n\n\n\n   \n\nInsights from Visualisations\n\nInterestingly, participants from lower income brackets reported much higher joviality scores than those in the highest income group, with age group 30-39 having the highest mean joviality. This is suggestive of social segregation within the city based on income.\nAcross all age bands in the highest income group, joviality scores were lower than median score of 0.44\nParticipants from higher income groups in the 51-60 age group reported lowest mean joviality score of 0.21\n\nTo cater to the wide range of income groups and age groups, city revitalisation efforts could focus on investing in developing community hubs that could foster a more inclusive environment. This could promote greater social interaction between diverse groups of citizens that may lead to a better sense of community."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#what-makes-these-groups-more-or-less-jovial",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#what-makes-these-groups-more-or-less-jovial",
    "title": "Take-home Exercise 1",
    "section": "3.2 What makes these groups more or less jovial?",
    "text": "3.2 What makes these groups more or less jovial?\nTo address this gap in joviality scores, there was a need to investigate if there are associations between high and low income groups and other categorical variables such as education level, interest group, household size, as well as expenses. These differences could also cast some insight into the wide variation in joviality scores.\n\n\n\n\nflowchart LR\nA((Joviality)) --> B[Income Groups]\nA --> C[Age Groups]\nB -.- C\nB -->|association?| D[Education]\nB -->|association?| E[Interest Groups]\nB -->|association?| F[Household Size]\nB --> G[Children]\nF -.- G\n\n\n\n\n\n\n\n\n\n3.2.1: Tests of Association\nTo determine if there are significant associations between income group, education level, interest group and household size, we conduct a chi-square test of association. At a significance level of 0.05:\n\\[H_0: There\\ is\\ no\\ association\\ between\\ groups\\] \\[H_1: There\\ is\\ an\\ association\\ between\\ groups\\]\n\nOverviewEducationInterest GroupsHousehold SizeChildren\n\n\nA Summary of results from Chi-Square Tests of Association:\n\n\n\n\n\n\n\n\n\n\nSignificant Association?\nEducation\nInterest Groups\nHousehold Size\nChildren\n\n\n\n\nIncome Group\nYes\nNo\nYes\nYes\n\n\np-value\n4.15e-44\n0.42\n2.18e-07\n4.20e-04\n\n\n\n\n\n\n\ncode block\n# As we want to compare only high and low groups, filter out into new df\ndf_highlow <- df_combined %>%\n  filter(incomeGroup %in% c(\"low\", \"high\"))\n\nset.seed(1234)\ntest_edu <- ggbarstats(df_highlow,\n                        x = educationLevel, y = incomeGroup,\n                        bf.message = FALSE) +\n            labs(title = \"Higher Income Groups are Significantly More Highly Educated\",\n                 x = \"Income Group\") +\n            theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\ntest_edu          \n\n\nWarning: Removed 1 rows containing missing values (`geom_text()`).\n\n\n\n\n\nSince p-value is < significance level of 0.05, we reject the null hypothesis and conclude that there is an association between Income Group and Education Level.\n\n\n\n\ncode block\nset.seed(1234)\ntest_interest <- ggbarstats(df_highlow,\n                            x = interestGroup, y = incomeGroup,\n                            bf.message = FALSE) +\n            labs(title = \"No Significant Association Between Income and Interest\",\n                 x = \"Income Group\") +\n            theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\ntest_interest\n\n\nWarning: Removed 1 rows containing missing values (`geom_text()`).\n\n\n\n\n\nSince p-value is > significance level of 0.05, we conclude that there is no dependent association between Income Group and Education Level.\n\n\n\n\ncode block\nset.seed(1234)\ntest_hhsize <- ggbarstats(df_highlow,\n                          x = householdSize, y = incomeGroup,\n                          bf.message = FALSE) +\n            labs(title = \"Significantly Higher Proportion of Singles in Lower Income Groups\",\n                 x = \"Income Group\") +\n            theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\ntest_hhsize\n\n\nWarning: Removed 1 rows containing missing values (`geom_text()`).\n\n\n\n\n\nSince p-value is < significance level of 0.05, we reject the null hypothesis and conclude that there is an association between Income Group and Household Size.\n\n\n\n\ncode block\nset.seed(1234)\ntest_kids <- ggbarstats(df_highlow,\n                          x = haveKids, y = incomeGroup, \n                        bf.message = FALSE)+\n            labs(title = \"Lower Proportion of Children in Households with Lower Income\",\n                 x = \"Income Group\") +\n            theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\ntest_kids\n\n\nWarning: Removed 1 rows containing missing values (`geom_text()`).\n\n\n\n\n\nSince p-value is < significance level of 0.05, we reject the null hypothesis and conclude that there is an association between Income Group and whether the household includes Children.\n\n\n\n\n\n3.2.2: Comparing Joviality across Income Groups and Education Level\nFrom the chi-square Tests of Association conducted above, income and education level are significantly associated. This relationship is visualised in an interactive boxplot grid:\n   \n\nDesign Considerations\n\nAn interactive boxplot grid using ggplotly() enables the user to filter by income group, which is useful to compare across education levels and age groups\nTo find out if education level is indicative of age (i.e. older participants have higher qualifications) or if there are patterns related to both categorical groups, facet_grid() was used to segregate the plots by age group as well\nY-axis breaks were limited to n=3, to prevent over-cluttering. Light grid lines in the panel background were kept such that axis text could be read across the grid.\nX-axis title, text and ticks were removed as there are only two distinct groups, which are labelled in the legend and colour coded across the graph. These unnecessary elements were removed to present a cleaner overall visual.\n\n\n#| fig-height: 8 #| fig-width: 8\nedu2 <- ggplot(df_highlow, aes(x = incomeGroup, y = joviality, fill = incomeGroup)) + #< Different colors for income groups for greater differentiation geom_boxplot() + facet_grid(ageGroup~educationLevel) + theme_bw() + #< Use this theme as the border makes each plot clearly defined scale_y_continuous(breaks = scales::pretty_breaks(n=3)) + theme(panel.spacing = unit(1, ‘lines’), #< Add panel spacing so that plots are not too clustered axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(), panel.background = element_rect(fill=“#F8F3E6”,colour=“#F8F3E6”), plot.background = element_rect(fill=“#F8F3E6”,colour=“#F8F3E6”))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-limitations",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-limitations",
    "title": "Take-home Exercise 1",
    "section": "4.1 Data Limitations",
    "text": "4.1 Data Limitations\nDespite the discovery of various insights from the datasets, there are a few caveats that the user should be aware of:\n\nSampling Bias: It cannot be accurately determined if the sample data is representative of the entire City population. As there is no geographic data included, the sample may be biased towards certain areas within the city. There was also a much higher proportion of households without children, and participants with lower educational qualifications surveyed. The sample thus may not accurately reflect the broader population.\n\nIncomplete Data: Financial data was not representative of all survey participants (covered in Section 1.2.2)\nResponse Bias: As data was collected through a survey, the dataset may rely on self-reported statistics that may be partially influenced by a variety of factors. This may limit the accuracy of data collected, especially regarding financial transactions.\n\nTime-based Limitations: As joviality score was recorded only at the start of the survey, financial statements were taken over the course of the year. Any potential changes in joviality were not recorded, which could lead to different insights. Changes in personal circumstances could also affect joviality score, and may have occurred in the course of the data collection process.\nCorrelation is not Causation: While the data exploration and visualisations have given some interesting insights and highlighted some correlations between variables affecting joviality, it is unclear if these factors directly cause changes in joviality. Several rounds of surveys could be conducted to collect a more complete data set, or findings from this initial survey could be tested against a separate sample for comparison."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#a-visual-summary",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#a-visual-summary",
    "title": "Take-home Exercise 1",
    "section": "4.2 A Visual Summary",
    "text": "4.2 A Visual Summary\n\n\n\n\nflowchart LR\nA((Joviality)) --> B[Income Groups] --- E[Age Group]\nB -.-|fa:fa-circle-up joviality| C(High Income)\nB -.- D(fa:fa-face-smile Low Income)\nE -.- F(fa:fa-face-smile Younger) ===|fa:fa-circle-up joviality| D\nE -.-|fa:fa-circle-up joviality| G(Older)\nA ---> H[Expenses] -.-> I[Expense ratio] -.- D\nH -.- J(fa:fa-up-long Recreation)\nH -.-|fa:fa-circle-up joviality| K(fa:fa-up-long Shelter)\nA --> L[Household Size] -.- M(fa:fa-face-smile Single)\nL -.-|fa:fa-circle-up joviality| N(2-3) --- O[Have Kids] -.- K\nN -.- J\nA ---> P[Education] -.- Q(fa:fa-face-smile Higher Edu) -.- D\nP -.-|fa:fa-circle-up joviality| R(Lower Edu)\nB ----> S((fa:fa-tree-city Plans))\nE ----> S\nH ----> S\nL ----> S\nP ----> S\n\n\n\n\n\n\n\n\nAn overarching theme (urbnthemes) was used to ensure standardised colors and chart styles throughout the study. In general, density plots, dotplots in various configurations, as well as histograms were chosen to visualise the underlying undulations in distribution of variables. Interactive elements were also deployed to enable filtering through the data to uncover trends and differences. Insights from each visualisation have been added after each visual, or added as titles/subtitles in the charts themselves."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands on Exercise 5",
    "section": "",
    "text": "Modelling, Visualising and Analysing Network Data with R"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-date-and-time-formats",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-date-and-time-formats",
    "title": "Hands on Exercise 5",
    "section": "1.1: Changing Date and Time formats",
    "text": "1.1: Changing Date and Time formats\n\n\ndmy() transforms the SentDate to Date data type.\n\nwday() returns the day of the week as a decimal number or an ordered factor if label is TRUE.\n\n\n\n\ncode block\nGAStech_edges <- GAStech_edges %>%\n  mutate(SendDate = dmy(SentDate)) %>%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\nglimpse(GAStech_edges)\n\n\nRows: 9,063\nColumns: 10\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ SendDate    <date> 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ Weekday     <ord> Friday, Friday, Friday, Friday, Friday, Friday, Friday, Fr…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#aggregating-attributes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#aggregating-attributes",
    "title": "Hands on Exercise 5",
    "section": "1.2 Aggregating Attributes",
    "text": "1.2 Aggregating Attributes\nGAStech_edges data.frame consists of individual e-mail flow records, which is not very useful for visualisation.\nIn view of this, data will be aggregated by date, senders, receivers, main subject and day of the week.\n\n\ncode block\nGAStech_edges_aggregated <- GAStech_edges %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(source, target, Weekday) %>%\n    summarise(Weight = n()) %>%\n  filter(source!=target) %>%\n  filter(Weight > 1) %>%\n  ungroup()\n\nglimpse(GAStech_edges_aggregated)\n\n\nRows: 1,372\nColumns: 4\n$ source  <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ target  <dbl> 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6,…\n$ Weekday <ord> Sunday, Monday, Tuesday, Wednesday, Friday, Sunday, Monday, Tu…\n$ Weight  <int> 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5,…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph-to-build-a-network-graph-dataframe",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph-to-build-a-network-graph-dataframe",
    "title": "Hands on Exercise 5",
    "section": "2.1: Using tbl_graph() to build a network graph dataframe",
    "text": "2.1: Using tbl_graph() to build a network graph dataframe\n\ntbl_graph() creates a tbl_graph network object from nodes and edges data\n\nas_tbl_graph() converts network data and objects to a tbl_graph network\n\n\n\ncode block\nGAStech_graph <- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\n\nGAStech_graph\n\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 54 × 4\n     id label               Department     Title                                \n  <dbl> <chr>               <chr>          <chr>                                \n1     1 Mat.Bramar          Administration Assistant to CEO                     \n2     2 Anda.Ribera         Administration Assistant to CFO                     \n3     3 Rachel.Pantanal     Administration Assistant to CIO                     \n4     4 Linda.Lagos         Administration Assistant to COO                     \n5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Manag…\n6     6 Carla.Forluniau     Administration Assistant to IT Group Manager        \n# ℹ 48 more rows\n#\n# A tibble: 1,372 × 4\n   from    to Weekday Weight\n  <int> <int> <ord>    <int>\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows\n\n\n\n\nThe output above reveals that GAStech_graph is a tbl_graph object with 54 nodes and 4541 edges.\n\nThe command also prints the first six rows of “Node Data” and the first three of “Edge Data”.It states that the Node Data is active – this makes it possible to manipulate the data in one tibble at a time."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-activate-to-change-the-activate-object",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-activate-to-change-the-activate-object",
    "title": "Hands on Exercise 5",
    "section": "2.2: Using activate() to change the activate object",
    "text": "2.2: Using activate() to change the activate object\nThe nodes tibble data frame is activated by default, but you can change which tibble data frame is active with the activate() function. Thus, if we wanted to rearrange the rows in the edges tibble to list those with the highest “weight” first, we could use activate() and then arrange().\n\n\ncode block\nGAStech_graph %>%\n  activate(edges) %>%\n  arrange(desc(Weight))\n\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 1,372 × 4\n   from    to Weekday  Weight\n  <int> <int> <ord>     <int>\n1    40    41 Saturday     13\n2    41    43 Monday       11\n3    35    31 Tuesday      10\n4    40    41 Monday       10\n5    40    43 Monday       10\n6    36    32 Sunday        9\n# ℹ 1,366 more rows\n#\n# A tibble: 54 × 4\n     id label           Department     Title           \n  <dbl> <chr>           <chr>          <chr>           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#basic-network-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#basic-network-graph",
    "title": "Hands on Exercise 5",
    "section": "3.1: Basic Network Graph",
    "text": "3.1: Basic Network Graph\n\n\ncode block\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point() +\n  theme_graph(background = NA)\n\n\n\n\n\ncode block\nth_foreground(\n  foreground = \"#F8F3E6\", \n  border = FALSE)\n\n\nList of 2\n $ panel.border    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ strip.background:List of 5\n  ..$ fill         : chr \"#F8F3E6\"\n  ..$ colour       : chr \"#F8F3E6\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi FALSE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi FALSE\n - attr(*, \"validate\")= logi TRUE"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#playing-with-themes-and-colors",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#playing-with-themes-and-colors",
    "title": "Hands on Exercise 5",
    "section": "3.2: Playing with Themes and Colors",
    "text": "3.2: Playing with Themes and Colors\n\n\ncode block\ng <- ggraph(\n  GAStech_graph\n  ) + \n  geom_edge_link(\n    aes(colour = 'grey50')\n  ) +\n  geom_node_point(\n    aes(colour = 'grey40'))\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#playing-with-graph-layouts",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#playing-with-graph-layouts",
    "title": "Hands on Exercise 5",
    "section": "3.3: Playing with Graph Layouts",
    "text": "3.3: Playing with Graph Layouts\nFruchterman and Reingold layout\n\n\ncode block\ng <- ggraph(\n  GAStech_graph, \n    layout = \"fr\"\n  ) +\n  geom_edge_link(\n    aes()\n  ) +\n  geom_node_point(\n    aes())\n\ng + theme_graph()\n\n\n\n\n\nAdding color codes to nodes\n\n\ncode block\ng <- ggraph(\n    GAStech_graph, \n    layout = \"nicely\"\n  ) + \n  geom_edge_link(\n    aes()\n  ) +\n  geom_node_point(\n    aes(colour = Department, \n    size = 3))\n\ng + theme_graph()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#combining-datasets-and-computing-monthly-income-per-capita",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#combining-datasets-and-computing-monthly-income-per-capita",
    "title": "Take-home Exercise 1",
    "section": "2.3: Combining Datasets and Computing Monthly Income per Capita",
    "text": "2.3: Combining Datasets and Computing Monthly Income per Capita\nThe dataframes are first combined into df_combined:\n\n\ncode block\n#Inner join as only 880 participants are listed in financial data\n\ndf_combined <- merge(demo_data_new, financial_agg, by = \"participantId\") %>%\n              select(unique(colnames(.))) %>%\n              arrange(as.numeric(participantId)) \n\nDT::datatable(df_combined,\n              class =\"compact\")\n\n\n\n\n\n\n\n   \nThe formula used to determine Monthly Income per Capita for this study is as follows: \\[Monthly\\ Income\\ per\\ Capita = \\frac{Monthly\\ Wage}{Household\\ Size}\\]\n\n\ncode block\n# Compute income per capita and save as new variable\ndf_combined <- df_combined %>%\n              mutate(incomePerCapita = round((monthlyWage/as.integer(householdSize)), 0))\n\n# Calculate min, max, 95th percentile and median values for annotations\nmin_incomePC <- round(min(df_combined$incomePerCapita),0)\nmax_incomePC <- round(max(df_combined$incomePerCapita),0)\nq_incomePC <- round(quantile(df_combined$incomePerCapita, probs = .95),0)\nmedian_incomePC <- round(median(df_combined$incomePerCapita),0)\n\n# Histogram of income per capita\nh <- \n  ggplot(\n    df_combined, \n    aes(x = incomePerCapita)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#F8F3E6\"\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    # Set same limits for both plots to ensure justification\n    limits = c(500,12000), \n    # Label with $ unit\n    labels = label_dollar()\n  ) + \n  geom_vline(\n    aes(xintercept = median_incomePC),\n    colour=\"grey20\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 3900, \n    y = 290,\n    label = paste0(\"Median Income per Capita: $\", median_incomePC)\n  ) +\n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\n#Boxplot of Income per capita\nbox <- \n  ggplot(\n    df_combined, \n    aes(y = incomePerCapita)\n  ) + \n  geom_boxplot(\n    outlier.colour=\"salmon\", \n    outlier.shape=16,\n    outlier.size=1, \n    notch=FALSE\n  ) + \n  coord_flip() + \n    #Annotate with amounts to show range of income on boxplot diagram\n  annotate(\n    geom = \"text\", \n    x = 0.38, \n    y = min_incomePC,\n    label = paste0(\"$\", min_incomePC),\n    color = \"grey20\"\n  ) + \n   annotate(\n    geom = \"text\", \n    x = 0.38, \n    y = q_incomePC,\n    label = paste0(\"$\", q_incomePC),\n    color = \"grey20\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0.38, \n    y = max_incomePC,\n    label = paste0(\"$\", max_incomePC),\n    color = \"salmon\"\n  ) + \n  labs(\n    title = \"Right-skewed distribution of Income per Capita\",\n     y = \"\", \n    x = \"\"\n  ) + \n   scale_y_continuous(\n    limits = c(500,12000), \n    labels = label_dollar()\n  ) +\n  stat_boxplot(\n    geom=\"errorbar\", \n    width=0.5\n  ) + \n  theme_minimal() +\n  theme(\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.major = element_blank(),\n     plot.background = element_rect(\n       fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\nhbox <- (box / h) + \n        plot_layout(heights = c(1, 3.5)) #< Scale layout to keep boxplot height shorter\n\nhbox & theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\n\nInsights from Visualisation\n\nThere is a right-skewed distribution of Income per Capita, with median value ($1947) far from the 95th Percentile tail ($5487)\n\nTrail of red points in the boxplot show the presence of outliers and Highest Income per Capita is 4 times that of median: this suggests a large income disparity among City residents\n\nCity Revitalisation Efforts could thus aim to increase affordability of spaces or services to cater to the larger concentration of citizens within or below median income range."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In-class Exercise 5",
    "section": "",
    "text": "VAST Challenge - MC1\n\nInstalling R Packages\n\njsonlite package is needed to read json files\n\nvisNetwork for visualising networks\n\n\npacman::p_load(jsonlite, tidygraph, ggraph, visNetwork, tidyverse)\n\n\n\nLoading the json Data\n\nMC1 <- jsonlite::fromJSON(\"data/MC1.json\")"
  }
]