[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "haileycsy",
    "section": "",
    "text": "gif source"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands on Exercise 1",
    "section": "",
    "text": "pacman::p_load(tidyverse, forcats)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nsummary(exam_data)\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-themes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-themes",
    "title": "Hands on Exercise 1",
    "section": "1: Working with Themes",
    "text": "1: Working with Themes\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n    geom_bar() + \n    coord_flip()+\n    theme_minimal() + \n    theme(\n      panel.background=element_rect(fill='lightblue', colour='lightblue'),\n      panel.border=element_blank(),\n      panel.grid.major=element_line(linewidth=0.2, linetype='solid', colour=\"white\"), \n      panel.grid.minor=element_line(linewidth=0.2, linetype='solid', colour=\"white\"),\n      plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-pupil-count-by-race",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-pupil-count-by-race",
    "title": "Hands on Exercise 1",
    "section": "2: Makeover Design for Pupil Count by Race",
    "text": "2: Makeover Design for Pupil Count by Race\n\nFormulaForcats\n\n\n\nggplot(data = exam_data, \n       aes(x = reorder(RACE, RACE, function(x)-length(x)))) +\n    geom_bar()+\n    ylim(0, 220) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-1) +\n    labs(x = \"Race\",\n         y = \"No. of\\nPupils\") + \n    theme_grey() +\n    theme(\n      axis.title.y = element_text(hjust=1, angle=0),\n      plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n    )\n\n\n\n\n\n\n\nexam_data %>%\n  mutate(RACE = fct_infreq(RACE)) %>%\n  ggplot(aes(x = RACE)) + \n  geom_bar()+\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0),\n        plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-distribution-of-math-scores",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-distribution-of-math-scores",
    "title": "Hands on Exercise 1",
    "section": "3: Makeover Design for Distribution of Math Scores",
    "text": "3: Makeover Design for Distribution of Math Scores\n\nggplot(data=exam_data,\n       aes(x=MATHS)) + \n    geom_histogram(bins=20, \n                   color=\"grey30\", \n                   fill=\"lightblue\") +\n    labs(x = \"Math Score\",\n         y = \"No. of Pupils\",\n         title = \"Distribution of Math Scores\") + \n    geom_vline(aes(xintercept=median(exam_data$MATHS, na.rm=T)),\n               color=\"grey30\", linewidth=1, linetype=\"dashed\") + \n    geom_vline(aes(xintercept=mean(exam_data$MATHS, na.rm=T)),\n               colour=\"red\", linewidth=1, linetype=\"dashed\") + \n    theme(plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-distribution-of-english-score-by-gender",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-distribution-of-english-score-by-gender",
    "title": "Hands on Exercise 1",
    "section": "4: Makeover Design for Distribution of English Score by Gender",
    "text": "4: Makeover Design for Distribution of English Score by Gender\n\neng_data <- exam_data[\"ENGLISH\"]\n\nggplot(data=exam_data,\n       aes(x=ENGLISH, fill=GENDER)) +\n    geom_histogram(bins=20, data=eng_data, fill=\"grey\", alpha=0.7, na.rm=T) + \n    geom_histogram(bins=20, color=\"black\", na.rm=T) + \n    facet_wrap(~ GENDER) +\n    xlim(20,100) + \n    labs(x = \"English Score\",\n         y = \"No. of Pupils\",\n         title = \"Distribution of English Scores by Gender\") + \n    theme_bw() + \n    theme(plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n    )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-scatterplot-of-english-and-math-scores",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-design-for-scatterplot-of-english-and-math-scores",
    "title": "Hands on Exercise 1",
    "section": "5: Makeover Design for Scatterplot of English and Math Scores",
    "text": "5: Makeover Design for Scatterplot of English and Math Scores\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  geom_vline(aes(xintercept=50),\n               color=\"grey\", linewidth=0.8, linetype=\"dashed\") + \n  geom_hline(aes(yintercept=50),\n               color=\"grey\", linewidth=0.8, linetype=\"dashed\") + \n  labs(x = \"Math Score\",\n       y = \"English Score\",\n       title = \"Correlation between English and Math Scores\") + \n  theme_gray() +\n  theme(plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands on Exercise 2",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, ggpmisc,\n               ggthemes, hrbrthemes, InraeThemes, ggthemr,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#annotations-with-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#annotations-with-ggrepel",
    "title": "Hands on Exercise 2",
    "section": "1: Annotations with ggrepel",
    "text": "1: Annotations with ggrepel\nA comparison between annotations using geom_label(), geom_text() and package ggrepel\n\nwith ggrepelwithout\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5,\n              formula = y~x) +  \n  geom_label_repel(aes(label = ID), \n                   fontface=\"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  labs(x=\"Math\",\n       y=\"English\",\n       title=\"Correlation between English and Maths scores for Primary 3\",\n       subtitle=\"There is a positive correlation between English and Math Scores\") +\n  theme(text=element_text(family=\"mono\"),\n        plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5,\n              formula = y~x) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  labs(x=\"Math\",\n       y=\"English\",\n       title=\"Correlation between English and Maths scores for Primary 3\",\n       subtitle=\"There are too many annotations to see the points clearly\") +\n  theme(plot.background=element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#customising-themes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#customising-themes",
    "title": "Hands on Exercise 2",
    "section": "2: Customising themes",
    "text": "2: Customising themes\n\n2.1: ggtheme package\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  labs(x = \"Math Scores\",\n       y = \"No. of Students\",\n       title = \"Distribution of Math Scores\") +\n  theme_economist()\n\n\n\n\n\n\n2.2: hbrthemes package\n\nPlot 1Code 1Plot 2Code 2\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  labs(x = \"Math Scores\",\n       y = \"No. of Students\",\n       title = \"Distribution of Math Scores\") +\n  theme_ipsum()\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  labs(x = \"Math Scores\",\n       y = \"Number of Students\",\n       title = \"Distribution of Math Scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 12,\n              grid = \"Y\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#composite-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#composite-graphs",
    "title": "Hands on Exercise 2",
    "section": "3: Composite Graphs",
    "text": "3: Composite Graphs\n\n3.1 Combining 2 graphs: ‘+’ operator\n\np1 <- ggplot(data=exam_data, \n            aes(x = MATHS)) +\n        geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey90\", \n                 fill=\"#3A3B60\") +\n        labs(x = \"Math Scores\",\n             y = \"Number of Students\",\n             title = \"Distribution of Math Scores\")\n\np2 <- ggplot(data=exam_data, \n            aes(x = ENGLISH)) +\n        geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey90\", \n                 fill=\"#4d5887\") +\n        labs(x = \"English Scores\",\n             title = \"Distribution of English Scores\") +\n        theme(axis.title.y = element_blank())\n\np1 + p2\n\n\n\n\n\n\n3.2 Combining 3 graphs: ‘|’, ‘/’, ‘()’\n\nUse different operators to specify composition\n\n“|” operator to stack two ggplot2 graphs\n“/” operator to place the plots beside each other\n“()” operator defines the sequence of the plotting\n\n\n\np3 <- ggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n      geom_point() +\n      geom_smooth(method=lm, \n              linewidth=0.5,\n              formula = y~x) + \n      stat_poly_line() +\n      stat_poly_eq() +\n      coord_cartesian(xlim=c(0,100),\n                      ylim=c(0,100)) +\n      labs(x=\"Math\",\n           y=\"English\",\n           title=\"Correlation between Math and English Scores\")\n\n(p1/p2) | p3\n\n\n\n\n\n\n3.3: Adding Annotations\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\nApplying themes to composite\ntheme_economist()\n\npatchwork <- ((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\npatchwork & theme_economist()\n\n\n\n\ntheme_inrae()\n\npatchwork <- ((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\npatchwork & theme_inrae()\n\n\n\n\ntheme_solarized_2()\n\npatchwork <- ((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\npatchwork & theme_solarized_2()\n\n\n\n\nggthemr: chalk\n\nggthemr(\"chalk\")\n\npatchwork <- ((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\npatchwork\n\n\n\n\n\n\n3.4: Inset Figures\nUsing inset_element() to place a plot within another plot\n\nggthemr_reset()\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "code block\npacman::p_load(ggiraph, plotly, gganimate,\n               gifski, gapminder,\n               DT, tidyverse, patchwork, readxl,\n               urbnthemes, ggthemr, wesanderson)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#ggiraph-package",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#ggiraph-package",
    "title": "Hands-on Exercise 3",
    "section": "ggiraph package",
    "text": "ggiraph package\n\nInteractive Arguments of ggiraph\n\nTooltip: displayed when hovering over chart elements\nOnclick: executed when elements are clicked\nData_id: Uses columns as id to show association of elements"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#tooltips",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#tooltips",
    "title": "Hands-on Exercise 3",
    "section": "1: Tooltips",
    "text": "1: Tooltips\nOriginal ggplot dotplot:\n\n\ncode block\nset_urbn_defaults(style = \"print\")\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_dotplot(stackdir = \"up\", \n               binwidth = 1,\n               dotsize = 1) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(x = \"Math Scores\") + \n  theme(axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank())\n\n\n\n\n\nWith ggiraph tooltips:\n\n\ncode block\np <- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1,\n    dotsize = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(x = \"Math Scores\")\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n1.1: Controlling Information in Tooltips\nCustomise information to be included in tooltips by creating a new list\n\n\ncode block\nexam_data$tooltip <- c(paste0(\n  \"Name:\", exam_data$ID,\n  \"\\n Class:\", exam_data$CLASS\n))\n\np <- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip),\n    stackgroups = TRUE, \n    binwidth = 1,\n    dotsize = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(x = \"Math Scores\")\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\n1.2: Formatting style of Tooltips\nAdding css arguments to opts_tooltip() of ggiraph\n\n\ncode block\ntooltip_css <- \"background-color:#dfdfeb; font-style:bold; color:black;\"  #<<\n\nexam_data$tooltip <- c(paste0(\n  \"Name:\", exam_data$ID,\n  \"\\n Class:\", exam_data$CLASS\n))\n\np <- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip),\n    stackgroups = TRUE, \n    binwidth = 1,\n    dotsize = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(x = \"Math Scores\")\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618,\n  options = list(    #<<\n    opts_tooltip(    #<<\n      css = tooltip_css)) #<<\n)                               \n\n\n\n\n\n\n\n\n1.3: Displaying Statistics in tooltips\nAdding stat_summary() calculations in ggplot\n\n\ncode block\nggthemr(\"flat\")\n\ntooltip <- function(y, ymax, accuracy = .01) {   #<<\n  mean <- scales::number(y, accuracy = accuracy) #<<\n  sem <- scales::number(ymax - y, accuracy = accuracy) #<<\n  paste(\"Mean Math Score:\", mean, \"+/-\", sem) #<<\n} #<<\n\np2 <- ggplot(data=exam_data, \n                   aes(x = RACE)) +\n  stat_summary(aes(y = MATHS, \n                  tooltip = after_stat(tooltip(y, ymax))),\n                  fun.data =\"mean_se\",\n                  geom = GeomInteractiveCol,\n                  fill = \"light blue\") +\n  stat_summary(aes(y = MATHS),\n               fun.data = mean_se,\n               geom =\"errorbar\", \n               width = 0.2, linewidth = 0.2) +\n  labs(y =\"Math Scores\") + \n  theme(axis.title.x = element_blank(),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\ngirafe(ggobj = p2,\n       width_svg = 8,\n       height_svg = 8*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#hover-effect-with-data_id",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#hover-effect-with-data_id",
    "title": "Hands-on Exercise 3",
    "section": "2: Hover effect with data_id",
    "text": "2: Hover effect with data_id\n\ndata_id is specified as an aes() argument in the interactive geom functions\ne.g: geom_dotplot_interactive(aes(data_id = variablename))\n\n\n\ncode block\np <- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             #<<\n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL) + \n  labs(x =\"Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)        \n\n\n\n\n\n\n\n2.1: Formatting Style of Hover Effect\n\nCustomisation Options\n\nopts_hover(css = NULL, reactive = FALSE, nearest_distance = NULL) > effect on geometries\n\nopts_hover_inv(css = NULL) > effect on other geometries, while one is hovered\nopts_hover_key(css = NULL, reactive = FALSE) > interactive scales\nopts_hover_theme(css = NULL, reactive = FALSE) > interactive theme elements\n\n\n\n\ncode block\np <- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL) + \n  labs(x =\"Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                     #<<\n  opts_hover(css = \"fill: #202020;\"), #<<\n  opts_hover_inv(css = \"opacity:0.2;\") #<<\n  )                                   #<<  \n) \n\n\n\n\n\n\n\n\n1 + 2: Tooltip + Hover Powers Combined!!\n\n\ncode block\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, #<<\n        data_id = CLASS),#<<              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  labs(x =\"Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\n2.2: Coordinated Multiple Views\n\nWhen a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too\n\nUse interactive functions of ggiraph to create multiple views\n\nPatchwork function from patchwork package weaves views together as coordinated plots\n\n\n\n\ncode block\np1 <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + #<<\n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  labs(x =\"Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\np2 <- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS,\n        data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + #<<\n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  labs(x =\"English Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\ngirafe(code = print(p1 / p2), #<<\n       width_svg = 6,\n       height_svg = 6,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#onlick",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#onlick",
    "title": "Hands-on Exercise 3",
    "section": "3: Onlick",
    "text": "3: Onlick\nonclick argument opens link up in new window when clicked.\n\n\ncode block\ntt <- \"click me\"\n\nexam_data$onclick <- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.onemap.gov.sg/main/v2/schoolquery\",\nas.character(exam_data$ID))\n\np <- ggplot(data=exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(aes(tooltip = tt,\n                               onclick = exam_data$onclick),\n                           stackgroups = TRUE,\n                           binwidth = 1,\n                           method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  labs(x =\"Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-package",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-package",
    "title": "Hands-on Exercise 3",
    "section": "plotly package",
    "text": "plotly package\nCreate interactive graphs using:\n\nplot_ly()\nggplotly()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#using-plot_ly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#using-plot_ly",
    "title": "Hands-on Exercise 3",
    "section": "3.1: Using plot_ly()",
    "text": "3.1: Using plot_ly()\n\n\ncode block\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n3.1.2: Adding Visual Variables\nAdding color argument to code chunk to vary marker colors by specified category\n\n\ncode block\nplot_ly(data = exam_data, \n        x = ~ENGLISH,\n        y = ~MATHS,\n        color = ~RACE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#using-ggplotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#using-ggplotly",
    "title": "Hands-on Exercise 3",
    "section": "3.2: Using ggplotly()",
    "text": "3.2: Using ggplotly()\n\n\ncode block\nmoonrise_cols <- wes_palette(\"Moonrise2\", type = \"discrete\")\n\np <- ggplot(data = exam_data,\n            aes(x = ENGLISH,\n                y = MATHS,\n                color = RACE,\n                text = paste(\"<b>English Score:</b>\", ENGLISH, \"<br><b>Math Score:</b>\", MATHS,\"<br>Race:\", RACE))) +\n      geom_point(size = 1.5) +\n      labs(title = \"Math and English Scores by Race\",\n           x = \"English Score\",\n           y = \"Math Score\") +\n      scale_color_manual(values = wes_palette(\"Moonrise2\", n = 4)) + \n      theme_grey() +\n      theme(plot.title = element_text(color = moonrise_cols[4], size = 14, face = \"bold\"),\n            axis.title.x = element_text(color = moonrise_cols[1], size = 10, face = \"bold\"),\n            axis.title.y = element_text(color = moonrise_cols[1], size = 10, face = \"bold\"),\n            plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\")\n           )\n\nggplotly(p, tooltip = \"text\")\n\n\n\n\n\n\n\n3.2.2: Coordinated Multiple views with ggplotly\n\nThis involves three steps:\n\nhighlight_key() of plotly package is used as shared data\ncreate scatterplots using ggplot2 functions\nsubplot() of plotly package is used to place them side-by-side\n\n\n\n\ncode block\nd <- highlight_key(exam_data)\n\np1 <- ggplot(data = d, \n            aes(x = MATHS,\n                y = ENGLISH,\n                text = paste(\"<b>Math Score:</b>\", MATHS,\"<br><b>English Score:\", ENGLISH))) +\n  geom_point(size = 1, shape = 18) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) + \n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\np2 <- ggplot(data = d, \n            aes(x = MATHS,\n                y = SCIENCE,\n                text = paste(\"<b>Math Score:</b>\", MATHS,\"<br><b>Science Score:\", SCIENCE))) +\n  geom_point(size = 1) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) +\n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\nsubplot(ggplotly(p1, tooltip = \"text\"),\n        ggplotly(p2, tooltip = \"text\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#crosstalk-and-dt",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#crosstalk-and-dt",
    "title": "Hands-on Exercise 3",
    "section": "Crosstalk and DT",
    "text": "Crosstalk and DT\nCrosstalk is an add-on to the htmlwidgets package. It extends htmlwidgets with a set of classes, functions, and conventions for implementing cross-widget interactions (currently, linked brushing and filtering).\n\nLimitations of Crosstalk:\n\nHTML widgets must be specifically modified to support Crosstalk\nOnly works for linked brushing and filtering of views that show individual data points, not aggregate or summary views\nBecause all data must be loaded into the browser, Crosstalk is not appropriate for large data sets"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#datatables-using-dt-package",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#datatables-using-dt-package",
    "title": "Hands-on Exercise 3",
    "section": "4.1: DataTables using DT package",
    "text": "4.1: DataTables using DT package\nDT package allow rendering of data objects as HTML tables\n\n\ncode block\nDT::datatable(exam_data[c(\"ID\",\"CLASS\",\"GENDER\",\"RACE\",\"ENGLISH\",\"MATHS\",\"SCIENCE\")],\n              caption = htmltools::tags$caption(style = \"caption-side: bottom; text-align: center;\",\n                                                \"Table 1: \", htmltools::em(\"Exam Data for Primary 3\")),\n              class = \"compact\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#linking-plot-to-table",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#linking-plot-to-table",
    "title": "Hands-on Exercise 3",
    "section": "4.2: Linking Plot to Table",
    "text": "4.2: Linking Plot to Table\n\n\ncode block\nexam_data <- subset(exam_data, select = c(1:7))\nd <- highlight_key(exam_data)\n\np <- ggplot(data = d, \n            aes(x = MATHS,\n                y = ENGLISH,\n                text = paste(\"<b>Math Score:</b>\", MATHS,\"<br><b>English Score:\", ENGLISH))) +\n  geom_point(size = 1) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) + \n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\ngg <- highlight(ggplotly(p, tooltip = \"text\"),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#gganimate-and-gifski-packages",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#gganimate-and-gifski-packages",
    "title": "Hands-on Exercise 3",
    "section": "gganimate and gifski packages",
    "text": "gganimate and gifski packages\ngganimate provides a range of new grammar classes that can be added to the plot object in order to customise how it should change with time.\n\ntransition_*() defines how the data should be spread out and how it relates to itself across time\nview_*() defines how the positional scales should change along the animation\nshadow_*() defines how data from other points in time should be presented in the given point in time\nenter_*()/exit_*() defines how new data should appear and how old data should disappear during the course of the animation\nease_aes() defines how different aesthetics should be eased during transitions\n\ngifski converts video frames to GIF animations\n*Importing Data**\n\n\ncode block\ncol <- c(\"Ethnicity\")\n\nmsia_pop <- read_csv(\"data/Malaysia_demographics.csv\") %>%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-bubble-plot-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-bubble-plot-1",
    "title": "Hands-on Exercise 3",
    "section": "5.1: Animated Bubble Plot 1",
    "text": "5.1: Animated Bubble Plot 1\n\nThis involves three steps:\n\nCreate a static Bubble Plot using ggplot\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year)\nease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce\n\n\n\n\ncode block\nggplot(msia_pop, aes(x = Pct_Old, y = Pct_Young, \n                      size = Population, \n                      colour = Ethnicity)) +\n  geom_point(alpha = 0.7) +\n  scale_colour_manual(values = wes_palette(\"Darjeeling1\")) +\n  scale_size(range = c(5, 25)) +\n  labs(title = 'Malaysian Population by Ethnicity for Year: {frame_time}',\n       subtitle = \"Data Source: https://www.kaggle.com/datasets/jasonkwm/malaysia-demographic-20102019\",\n       x = '% Aged', \n       y = '% Young') +\n  guides(size = \"none\") +\n  theme(legend.position = \"bottom\",\n        plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\")) + \n  transition_time(Year) +       #<<\n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-bubble-plot-2",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-bubble-plot-2",
    "title": "Hands-on Exercise 3",
    "section": "5.2: Animated Bubble Plot 2",
    "text": "5.2: Animated Bubble Plot 2\n*Importing data**\n\n\ncode block\nglobalPop <- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %>%\n  mutate(across(where(is.character), as.factor)) %>%\n  mutate(Year = as.integer(Year))\n\n\n\n\ncode block\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  theme_gray() + \n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\")) + \n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-frame-animations",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-frame-animations",
    "title": "Hands-on Exercise 3",
    "section": "Plotly Frame Animations",
    "text": "Plotly Frame Animations"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#ggplotly-animated-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#ggplotly-animated-bubble-plot",
    "title": "Hands-on Exercise 3",
    "section": "6.1: ggplotly Animated Bubble Plot",
    "text": "6.1: ggplotly Animated Bubble Plot\nggplotly() is used to convert the R graphic object into an animated svg object.\n\n\ncode block\ngg <- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),  #<<\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme_gray() + \n  theme(plot.background = element_rect(fill = \"#F8F3E6\", color = \"#F8F3E6\"))\n\nggplotly(gg)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plot_ly-animated-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plot_ly-animated-bubble-plot",
    "title": "Hands-on Exercise 3",
    "section": "6.2: plot_ly() Animated Bubble Plot",
    "text": "6.2: plot_ly() Animated Bubble Plot\n\n\ncode block\nbp <- globalPop %>%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent, \n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          )\nbp"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "Links to Tableau Visualisations:\nSuperstore Orders\nExam Data"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "haileycsy",
    "section": "",
    "text": "ISSS608_VAA <- c( \"Data\", \"R\", \"Tableau\", \"Coffee\", \"Tears\", \"StackOverflow\", \"ChatGPT\" )"
  },
  {
    "objectID": "Projects/Superstore_Orders.html",
    "href": "Projects/Superstore_Orders.html",
    "title": "Market Basket Analysis",
    "section": "",
    "text": "Frequent Pattern Mining: Market Basket Analysis\nThis project aims to discover links between items frequently purchased together through analysing transaction data.\nLink to reference article"
  },
  {
    "objectID": "Projects/Superstore_Orders.html#r-packages",
    "href": "Projects/Superstore_Orders.html#r-packages",
    "title": "Market Basket Analysis",
    "section": "1.1: R Packages",
    "text": "1.1: R Packages\n\npacman::p_load(readxl, tidyverse, plyr, dplyr,\n               ggplot2, lubridate,\n               RcolorBrewer,\n               arules, arulesViz)"
  },
  {
    "objectID": "Projects/Superstore_Orders.html#data-loading-and-transformation",
    "href": "Projects/Superstore_Orders.html#data-loading-and-transformation",
    "title": "Market Basket Analysis",
    "section": "1.2: Data Loading and Transformation",
    "text": "1.2: Data Loading and Transformation\nThis Project uses Online Retail dataset from UCI Machine Learning Repository\nThe dataset contains the following attributes:\n\n\nInvoiceNo: Invoice number. Nominal, a 6-digit integral number uniquely assigned to each transaction. If this code starts with letter ‘c’, it indicates a cancellation.\n\nStockCode: Product (item) code. Nominal, a 5-digit integral number uniquely assigned to each distinct product.\n\nDescription: Product (item) name.\n\nQuantity: The quantities of each product (item) per transaction.\n\nInvoiceDate: Invoice Date and time. Numeric, the day and time when each transaction was generated.\n\nUnitPrice: Unit price. Numeric, Product price per unit in sterling.\n\nCustomerID: Customer number. Nominal, a 5-digit integral number uniquely assigned to each customer.\n\nCountry: Country name. Nominal, the name of the country where each customer resides.\n\n\n\norder_data <- read_excel(\"data/Online_Retail.xlsx\")\n\ncomplete.cases(data) returns a logical vector indicating which rows have no missing values. data[,] filters out the rows with missing values:\n\norder_data <- order_data[complete.cases(order_data), ]\nsummary(order_data)\n\n  InvoiceNo          StockCode         Description           Quantity        \n Length:406829      Length:406829      Length:406829      Min.   :-80995.00  \n Class :character   Class :character   Class :character   1st Qu.:     2.00  \n Mode  :character   Mode  :character   Mode  :character   Median :     5.00  \n                                                          Mean   :    12.06  \n                                                          3rd Qu.:    12.00  \n                                                          Max.   : 80995.00  \n  InvoiceDate                       UnitPrice          CustomerID   \n Min.   :2010-12-01 08:26:00.00   Min.   :    0.00   Min.   :12346  \n 1st Qu.:2011-04-06 15:02:00.00   1st Qu.:    1.25   1st Qu.:13953  \n Median :2011-07-31 11:48:00.00   Median :    1.95   Median :15152  \n Mean   :2011-07-10 16:30:57.88   Mean   :    3.46   Mean   :15288  \n 3rd Qu.:2011-10-20 13:06:00.00   3rd Qu.:    3.75   3rd Qu.:16791  \n Max.   :2011-12-09 12:50:00.00   Max.   :38970.00   Max.   :18287  \n   Country         \n Length:406829     \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n\n\n\nmutate() character data types to factor using as.factor()\nConvert InvoiceNo to Numeric\nStore InvoiceDate as date in new variable, ‘TransDate’\nExtract time from InvoiceDate and store in another variable, ‘TransTime’\n\n\norder_data %>%\n  mutate(across(where(is.character), as.factor()))\n\n# A tibble: 406,829 × 8\n   InvoiceNo StockCode Description        Quantity InvoiceDate         UnitPrice\n   <chr>     <chr>     <chr>                 <dbl> <dttm>                  <dbl>\n 1 536365    85123A    WHITE HANGING HEA…        6 2010-12-01 08:26:00      2.55\n 2 536365    71053     WHITE METAL LANTE…        6 2010-12-01 08:26:00      3.39\n 3 536365    84406B    CREAM CUPID HEART…        8 2010-12-01 08:26:00      2.75\n 4 536365    84029G    KNITTED UNION FLA…        6 2010-12-01 08:26:00      3.39\n 5 536365    84029E    RED WOOLLY HOTTIE…        6 2010-12-01 08:26:00      3.39\n 6 536365    22752     SET 7 BABUSHKA NE…        2 2010-12-01 08:26:00      7.65\n 7 536365    21730     GLASS STAR FROSTE…        6 2010-12-01 08:26:00      4.25\n 8 536366    22633     HAND WARMER UNION…        6 2010-12-01 08:28:00      1.85\n 9 536366    22632     HAND WARMER RED P…        6 2010-12-01 08:28:00      1.85\n10 536367    84879     ASSORTED COLOUR B…       32 2010-12-01 08:34:00      1.69\n# ℹ 406,819 more rows\n# ℹ 2 more variables: CustomerID <dbl>, Country <chr>\n\norder_data$InvoiceNo <- as.numeric(order_data$InvoiceNo)\n\nWarning: NAs introduced by coercion\n\norder_data$TransDate <- as.Date(order_data$InvoiceDate)\n\norder_data$TransTime <- format(order_data$InvoiceDate, format = \"%H:%M:%S\")\n\nglimpse(order_data)\n\nRows: 406,829\nColumns: 10\n$ InvoiceNo   <dbl> 536365, 536365, 536365, 536365, 536365, 536365, 536365, 53…\n$ StockCode   <chr> \"85123A\", \"71053\", \"84406B\", \"84029G\", \"84029E\", \"22752\", …\n$ Description <chr> \"WHITE HANGING HEART T-LIGHT HOLDER\", \"WHITE METAL LANTERN…\n$ Quantity    <dbl> 6, 6, 8, 6, 6, 2, 6, 6, 6, 32, 6, 6, 8, 6, 6, 3, 2, 3, 3, …\n$ InvoiceDate <dttm> 2010-12-01 08:26:00, 2010-12-01 08:26:00, 2010-12-01 08:2…\n$ UnitPrice   <dbl> 2.55, 3.39, 2.75, 3.39, 3.39, 7.65, 4.25, 1.85, 1.85, 1.69…\n$ CustomerID  <dbl> 17850, 17850, 17850, 17850, 17850, 17850, 17850, 17850, 17…\n$ Country     <chr> \"United Kingdom\", \"United Kingdom\", \"United Kingdom\", \"Uni…\n$ TransDate   <date> 2010-12-01, 2010-12-01, 2010-12-01, 2010-12-01, 2010-12-0…\n$ TransTime   <chr> \"08:26:00\", \"08:26:00\", \"08:26:00\", \"08:26:00\", \"08:26:00\"…"
  },
  {
    "objectID": "Projects/Superstore_Orders.html#creating-a-basket-and-storing-it-as-transactiondata",
    "href": "Projects/Superstore_Orders.html#creating-a-basket-and-storing-it-as-transactiondata",
    "title": "Market Basket Analysis",
    "section": "1.3: Creating a basket and storing it as transactionData",
    "text": "1.3: Creating a basket and storing it as transactionData\n\ntransactionData <- ddply(order_data, c(\"InvoiceNo\",\"TransDate\"),\n                         function(df1)paste(df1$Description,\n                                            collapse = \",\"))\ntransactionData$InvoiceNo <- NULL\ntransactionData$Date <- NULL\n\ncolnames(transactionData) <- c(\"items\")\n\nwrite.csv(transactionData,\"data/market_basket_transactions.csv\", quote = FALSE, row.names = FALSE)\n\nRead transaction data:\n\ntrans <- read.transactions('data/market_basket_transactions.csv', \n                           format = 'basket', \n                           quote = \"\",\n                           sep=',')\n\nWarning in asMethod(object): removing duplicated items in transactions\n\ndim(trans)\n\n[1] 18839  4231\n\n\ndim(data) shows that there are 18,839 transactions (rows) and 4231 items (columns).\n\nsummary(trans)\n\ntransactions as itemMatrix in sparse format with\n 18839 rows (elements/itemsets/transactions) and\n 4231 columns (items) and a density of 0.005236714 \n\nmost frequent items:\nWHITE HANGING HEART T-LIGHT HOLDER           REGENCY CAKESTAND 3 TIER \n                              2011                               1830 \n           JUMBO BAG RED RETROSPOT                      PARTY BUNTING \n                              1635                               1397 \n     ASSORTED COLOUR BIRD ORNAMENT                            (Other) \n                              1385                             409149 \n\nelement (itemset/transaction) length distribution:\nsizes\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1 1401  734  644  635  667  611  576  589  621  524  551  502  476  521  548 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n 547  469  440  481  424  414  349  337  312  245  267  251  221  265  232  204 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n 173  170  173  149  125  139  110  129  123  115  110   98   92   87   90   82 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n  79   79   80   68   59   65   68   63   49   55   49   47   37   45   35   33 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n  35   32   40   39   38   23   29   32   14   27   32   25   21   19   17   10 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n  17   18   19   16   20   16   11   15   13    9    8   11   15   12   10    5 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   8   10   11    3    7   13    4    9    7    2    3    3    6    4    3    3 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   2    5    4    4    7    5    5    5    5    4    8    5    1    4    5    3 \n 129  131  133  134  135  136  137  138  139  140  141  142  143  144  145  147 \n   4    2    1    4    1    1    3    3    1    1    2    2    2    2    1    5 \n 149  150  151  152  153  156  158  159  160  165  166  168  171  172  178  179 \n   1    1    1    2    1    2    1    1    1    1    1    1    1    2    3    2 \n 181  182  186  188  194  195  197  205  206  209  212  221  231  251  260  264 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 274  284  340  352  357  367  380  388  423  441  443  530  534  548 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   1.00    8.00   16.00   22.16   28.00  548.00 \n\nincludes extended item information - examples:\n                      labels\n1                   1 HANGER\n2     10 COLOUR SPACEBOY PEN\n3 12 COLOURED PARTY BALLOONS"
  }
]